device_general.pitch.desc=デバイスピッチオフセット、ノート入力に適用します。
device_general.glide.desc=ノート入力ごとの (直前ピッチからの) ポルタメントタイムです。
device_general.legato.title=レガートモード (切替)
device_general.legato.desc=重複ノートのみにグライドを適用します。
device_general.vel.desc=全ノートベロシティ範囲を使用した際のダイナミックレンジです。
device_general.gain.desc=デバイス出力に適用するゲインです。 (プリエフェクトチェーン)
device_general.pan.desc=インストゥルメント出直のステレオパンポジションです。 (プリエフェクトチェーン)
device_general.width.desc=処理された信号のステレオ拡がり具合です。
device_general.mix.desc=デバイス出力の信号量です。(デバイスに入力されたドライ信号と混ざります)
device_general.mix+wet.desc=ポストウェット/エフェクトチェーンの処理信号量です。(デバイスに入力されたドライ信号と混ざります)
device_general.out.desc=デバイスの出力レベルです。
device_general.out+fx.desc=デバイスの出力レベルです。(ポストエフェクトチェーン)

device_general.latency_comp.title=レイテンシーオフセット [ミリ秒 (サンプル) 単位]
device_general.latency_comp.desc=サンプル単位のオフセット量です。負数値設定でオーディオは前方にシフトします。
device_general.latency_trainer.title=トレインレオテンシーオフセット [トリガー]
device_general.latency_trainer.desc=クリックをすることで適切なレイテンシーオフセットが自動設定されます。

device_general.spectrum_resolution.desc=スペクトラム表示の相対解像度です。
device_general.spectrum_speed.desc=スペクトラム表示の一般的な立上り/立下り時間です。
device_general.spectrum_tilt.desc=連続的なオクターブごとの視覚的増幅です。
device_general.spectrum_domain.desc=周波数ドメインの表示です。
device_general.spectrum_range_low.desc=表示される最小アンプリチュードです。
device_general.spectrum_range_high.desc=表示される最大アンプリチュードです。
device_general.spectrum_style.desc=入力ごとの描画方法です。

device_general.note_chain.desc=プリチェーン。インストゥルメントに到達前のノートなどの情報処理のためのデバイス/プラグイン挿入に使用します。
device_general.fx_chain.desc=エフェクトチェーン。デバイス出力信号を処理するためのデバイス/プラグイン挿入に使用します。
device_general.wet_fx_chain.desc=エフェクトチェーン。(ミックスノブによる) エフェクトのウェット信号のみを処理するためのデバイス/プラグイン挿入に使用します。
device_general.feedback_fx.desc=エフェクトチェーン。(ミックスノブによる) エフェクトのフィードバックループ信号を処理するためのデバイス/プラグイン挿入に使用します。
device_general.source_fx_chain.desc=エフェクトチェーン。ソースノートとオーディオ信号を処理するためのデバイス/プラグイン挿入に使用します。
device_general.pre_fx_chain.desc=エフェクトチェーン。入力オーディオ/ノートを処理するためのデバイス/プラグイン挿入に使用します。
device_general.post_fx_chain.desc=エフェクトチェーン。(ミックスノブによる) エフェクト出力を処理するためのデバイス/プラグイン挿入に使用します。
device_general.audio_sidechain_chain.desc=エフェクトチェーン。解析前のサイドチェーンオーディオを処理するためのデバイス/プラグイン挿入に使用します。
device_general.hw_cv_out_chain.desc=専用チェーン。HW CV Out (ハードウェアCV出力) デバイス挿入に使用します。

device_general.audio_path.title=オーディオソース
device_general.audio_path.desc=入力されたオーディオ信号のパスです。
device_general.audio_in_path.title=オーディオディスティネーション
device_general.audio_in_path.desc=出力されるオーディオ信号のパスです。
device_general.note_path.title=ノートソース
device_general.note_path.desc=入力されたノート信号のパスです。

device_general.modulator.title=モジュレーション出力
modulator_out.modulator.desc=ワイヤレスコントロールパラメーターに使用します。

device_general.adsr_attack.desc=(ノートオン時の) 立ち上がり時間。現在のエンベロープ値から100%までとなります。
device_general.ahdsr_hold.desc=アタック段後のホールドタイムです。
device_general.ahdsr_decay.desc=ホールド段後の立ち下がり時間です。
device_general.adsr_decay.desc=アタック段後の立ち下がり時間です。
device_general.adsr_sustain.desc=ディケイ段終端のレベルです。
device_general.adsr_release.desc=(ノートオフ時の) 立ち下がり時間。現在のエンベロープ値から0%までとなります。
device_general.adsr_velo.desc=フルレンジのノートベロシティを使用した際に有効なアンプリチュード範囲です。
device_general.adsr_curve.desc=この段のカーブ曲線設定です。('0 %'はリニア設定です。)
device_general.adsr_segment_curve.desc=このセグメントのカーブ曲線設定で、'0 %'がリニア設定になります。
device_general.feg_modulator.title=フィルターエンベロープジェネレーター (FEG)
device_general.feg_modulator.desc=FEGのモジュレーターソースです。任意の箇所に適用します。
device_general.aeg_modulator.title=アンプリチュードエンベロープジェネレーター (AEG)
device_general.aeg_modulator.desc=AEGのモジュレーターソースです。任意の箇所に適用します。

device_general.filter_mode.desc=使用するフィルターの種類:\nBypass → フィルターオフ\nHigh-pass (2-pole) → 12dB/oct仕様\nHigh-pass (4-pole) → 24dB/oct仕様\n​
device_general.filter_freq.desc=カットオフ/センター周波数設定です。
device_general.filter_reso.desc=フィルターセクションのレゾナンス設定です。
device_general.filter_kbt.desc=フィルター周波数に作用する入力ノート信号のピッチ量です。
device_general.filter_eg.desc=フィルターEGのフィルターフリクェンシーモジュレーションの深さです。
device_general.filter_pre-gain.desc=フィルター処理前のゲイン設定です。
device_general.filter_post-gain.desc=フィルター処理後のゲイン設定です。


#analysis.
analysis.a_channel.desc=入力オーディオ表示チャンネル:\nL → 左チャンネル\nR → 右チャンネル\nM → ミドル (センター) ポジション\nS → サイド (両側パン) ポジション
analysis.b_enable.title=トレースB表示 [切替]
analysis.b_enable.desc=トレースBの表示です。
analysis.b_channel.desc=選択オーディオ表示チャンネル:\nL → 左チャンネル\nR → 右チャンネル\nM → ミドル (センター) ポジション\nS → サイド (両側パン) ポジション
analysis.b_path.title=トレースBソース
analysis.b_path.desc=トレースBの入力オーディオ信号パスです。
oscilloscope-device.mode.desc=スコープトリガーモード:
oscilloscope-device.trigger_hold.desc=トリガー間の最小時間です。
oscilloscope-device.trigger_level.desc=トリガースレッショルドです。
oscilloscope-device.trigger_slope.desc=スレッショルド値超越時の作動方向です。
oscilloscope-device.freeze.title=フリーズ [トグル]
oscilloscope-device.freeze.desc=ホールド表示設定です。
oscilloscope-device.scale.desc=トレースプリント速度としてのズームレベルです。
oscilloscope-device.kbt.desc=最後の入力ノートピッチを追跡したズームレベルです。
oscilloscope-device.kbt_offset.desc=キーボードトラッキングの半音オフセット設定です。
oscilloscope-device.gain.desc=このトレースのゲインです。
oscilloscope-device.link.desc=トレースAのゲイン設定をトレースBに使用します。
oscilloscope-device.display.title=オシロスコープ表示
oscilloscope-device.display.desc=トレースA (オレンジ) と、有効なトレースB (青)の両方を表すアンプリチュードドメインです。
spectrum_analyzer.fall_rate.desc=スペクトラム表示の相対速度です。設定値'1.00'はフリーズで、'0.00'はとても速い設定になります。
spectrum_analyzer.display.title=スペクトラム表示
spectrum_analyzer.display.desc=トレースA (オレンジ) と、有効なトレースB (青)の両方を表す周波数スペクトラムです。


#audio_fx.
audio_fx.wide.desc=右処理チャンネルを反転して、より広いサウンド効果生み出します。
audio_fx.delay_time.desc=LFOモジュレーション開始前のディレイ設定です。
audio_fx.feedback.desc=出力信号のフィードバック量です。
audio_fx.lfo_wave.desc=使用するLFO波形です。
audio_fx.lfo_rate.desc=LFO周波数
audio_fx.lfo_depth.desc=ディレイタイムのLFOモジュレーション量です。
audio_fx.lfo_retrig.desc=新規ノート着信時のLFO再スタート設定です。

blur.time.desc=このオールパスユニットのディレイタイムです。
blur.feedback.desc=このオールパスユニットのフィードバック量です。
blur.display.title=グラフィカルインターフェイス
blur.display.desc=ディレイタイム (左右)とフィードバック (上下)を操作するドッドと共に出力されるオーディオスペクトラムを表示します。
chorus.high_cut.desc=より高い周波数をアッテネートするカットオフです。
chorus.lfo_rphase.desc=右チャンネルのLFモジュレーションノ相対フェイズシフトです。
chorus.display.title=LFOビジュアライゼーション
chorus.display.desc=左チャンネルディレイ (白) に適用するLFOと右チャンネルディレイ (赤) に適用するフェイズシフトバージョン表示です。
comb.frequency.desc=コムフィルターの周波数設定 (相当するディレイタイムとして実装)
comb.display.title=スペクトラム表示
comb.display.desc=周波数 (左右) とバイポーラーフィードバック (上下) を操作するドッドと共に出力されるオーディオスペクトラムを表示します。\n\n暗いスペクトラムは入力する信号を示し、明るいカーブは出力される信号を示します。
flanger.feedback_polarity.title=フィードバック曲線
flanger.feedback_polarity.desc=フィードバックがそのオリジナルサイン (+) もしくは反転 (-) して送られるかの設定です。
freq_shifter.range.desc=利用可能な最大周波数シフトです。周波数シフトパラメーターでスケーリングされます。
freq_shifter.amount.desc=周波数レンジパラメーターで倍算された現在の周波数シフト量です。
freq_shifter.left_right.desc=左チャンネルの周波数シフト量のオフセットです。 \n\n左右間、合計周波数シフトは最大で200 %になります。設定例: \n• '0 %' はモノ設定で、左右チャンネルに (100 %) を使用します。\n• '100 %' は左側にもう 100 % を追加し、右側はそれを減算します。 (200 % から 0 % のバランス) \n• '50 %' は左チャンネル 50 % を追加し、右チャンネルから 50 % を引き (150 % から 50 % バランス) \n• '-33.33 %' は左チャンネルを1/3に減算します。 (66.66 % から 133.33 % バランス)
phaser.frequency.desc=カスケードオールパスフィルターの周波数設定です。
phaser.frequency_offset_left.desc=左フィルターチャンネルの周波数オフセットです。
phaser.frequency_offset_right.desc=右フィルターチャンネルの周波数オフセットです。
phaser.poles.desc=使用のポール数です。この値はまたスペクトラムに表示されるおよそのピークとノッチ数になります。
phaser.low_cut.desc=フェイザー前のより低い周波数をアッテネートするカットオフです。
phaser.display.title=グラフィカルインターフェイス
phaser.display.desc=クリック可能の丸"P"はプライマリーフィルター周波数 (左右) とバイポーラーフィードバック量 (上下) を示します。クリック可能の丸"L"と丸"R"左右の周波数オフセットを示します。\n\n暗い表示のスペクトラムは入力信号を示します。明るいカーブは出力される信号を示します。
pitch_shifter.grain.desc=ウィンドウレートの変更による微調整コントロールをおこないます。
ring-mod.path.title=二次オーディオソース
ring-mod.path.desc=デバイスのオーディオ入力によってモジュレーションされるオーディオソースです。
ring-mod.frequency.desc=[ソースを"オシレーター"に設定した際の] サインオシレーター周波数設定です。
ring-mod.gain.desc=モジュレーション段で適用されるゲイン量です。
rotary.delay_mod.desc=ディレイタイムモジュレーションの範囲です。
rotary.amp_mod.desc=ボリュームモジュレーションの範囲です。
treemonster.pitch.desc=サインオシレーターのチューニングオフセットです。
treemonster.threshold.desc=サインオシレーターのトリガーレベル設定です。
treemonster.speed.desc=スレッショルドを超過/低下した際のオシレーターフェードイン/アウトの速さ設定です。
treemonster.ring.desc=サインオシレーターのみ ('0 %')、サインとソースオーディオのアンプリチュードモジュレーション ('50 %')、そして信号のリングモジュレーション ('100 %')効果のクロスフェードブレンドをおこないます。
treemonster.low_freq.desc=(ハイパスフィルターを使用した) 周波数検出帯域のローカット設定です。
treemonster.high_freq.desc=(ハイパスフィルターを使用した) 周波数検出帯域のハイカット設定です。
treemonster.display.title=グラフィカルインターフェイス
treemonster.display.desc=暗いスペクトラムは入力信号を示します。明るいカーブはオリジナルの信号を示します。移動可能な十字線は現在追跡のピッチとレベルを示します。\n\nクロスオーバー周波数はクリック可能の縦線、スレッショルドは水平の白線で示されます。
tremolo.depth.desc=アンプリチュード/ボリュームのLFOモジュレーション量です。


#container.
container.gain.desc=デバイス出力に適用するゲインです。(ポストエフェクトチェーン)
container.gain_nofx.desc=デバイス出力に適用するゲインです。
container.chains.title=レイヤーリスト
container.chains.desc=各レイヤーに存在するスクロール可能のリストです。'+'アイコンでポップアップブラウザーから別レイヤーを追加します。 \n\nレイヤーヘッダーの選択で、このデバイスの右横にフルデバイスチェーンを展開します。レイヤーそれぞれに ('S')、ミュート ('M') 設定とレベル調節用のゲインフェーダーが右側にあります。他のオブジェクトやレイヤーと同様、非アクティブ、色分け設定、名称変更が可能です。
container.chains_selector.title=レイヤーリスト
container.chains_selector.desc=各レイヤーに存在するスクロール可能のリストです。'+'アイコンでポップアップブラウザーから別レイヤーを追加します。 \n\nヘッダーの最初のアイコンは、レイヤーがアクティブ (円) か否か (月) を示します。ターゲットレイヤーのアイコンは黄色表示です。(マニュアルモードでは、モジュレーションのあるターゲットレイヤーは青)  \n\nレイヤーヘッダーの選択で、このデバイスの右横にフルデバイスチェーンを展開します。レイヤーそれぞれにレベル調節用のゲインフェーダーが右側にあります。他のオブジェクトやレイヤーと同様、非アクティブ、色分け設定、名称変更が可能です。
container.note_chains.title=レイヤーリスト
container.note_chains.desc=各レイヤーに存在するスクロール可能のリストです。'+'アイコンでポップアップブラウザーから別レイヤーを追加します。 \n\nレイヤーヘッダーの選択で、このデバイスの右横にフルデバイスチェーンを展開します。レイヤーそれぞれにノート信号出力に反応するLEDが右側にあります。他のオブジェクトやレイヤーと同様、非アクティブ、色分け設定、名称変更が可能です。
container.selector.title=ターゲットレイヤー
container.selector.desc=ノートやオーディオを新規に受け取るレイヤーです。あるレイヤーから別のレイヤーに切り替えた際、継ぎ目のないな移行のために前レイヤーのすべてのノート/オーディオは完了するまで継続されます。 \n\nエニーモードでは、任意レイヤーの左側の円 (または三日月) のクリックで、レイヤーを有効にします。\n\nマニュアルモードでは、オートメーションとモジュレーターはアクティブレイヤーをコントロールできます。 (名称はモジュレーターターゲットとして機能します) アクティブレイヤーはまた、ここの名称エリアをクリック＆ドラッグ、あるいは右側の増/減ボタンクリックで変更可能です。\n\n非マニュアルモードでは、モードルールによってアクティブレイヤーが設定されます。そしてモードアイコンのクリックで、モードのルールを上書きします。このことで現在のレイヤーエディットが簡単に行えます。(アイコンの再クリックで通常動作に切り替えます)
container.selector_mode.title=ボイスモード [様々なオプション]
container.selector_mode.desc=ターゲットレイヤーのコントロール方法:
container.selector_channel_all.title=全チャンネル [切替]
container.selector_channel_all.desc=[キースイッチ、CCまたはProgram Changeモードでは] 全MIDIチャンネルの信号を使用するかどうかを設定します。
container.selector_channel_single.title=MIDIチャンネル [1 ~ 16]
container.selector_channel_single.desc=[キースイッチ、CCまたはProgram Changeモードでは] 全チャンネルに設定していない場合は、どのMIDIチャンネルを使用するかを設定します。
container.selector_base_key.title=ベースキースイッチ [0 ~ 127]
container.selector_base_key.desc=最初のレイヤーに切り替えるノート設定です。後続ノートは、別のレイヤーへの切替をします。例えば、3つのレイヤーでC0に設定した場合: \n• C0はレイヤー1に切替。 \n• C#0はレイヤー2に切替。 \n• D0はレイヤー3に切替ます。 \n\n注意: キースイッチに設定したノートでは音のトリガーをしません。
container.selector_cc.title=コントロールチェンンジ情報 [0 ~ 127]
container.selector_cc.desc=コントロールチェンジの範囲を分割して現在のレイヤーに割り振ります。 \n\n例えば、CC1 (モジュレーションホイール) を4つのレイヤーに設定した場合、値: \n• 0-31でレイヤー1に切替\n• 32-63でレイヤー2に切替 \n• 64-95でレイヤー3に切替\n• 96-127でレイヤー4に切替
container.selector_midi_learn.title=MIDIラーン [切替]
container.selector_midi_learn.desc=次に受信するMIDI情報に基づく、チャンネルと他のモード関連データーを設定します。
container.x_control.desc=A–CチェーンとB–Dチェーン間の現在のクロスフェードXポジションです。
container.y_control.desc=A–CチェーンとB–Dチェーン間の現在のクロスフェードYポジションです。
container.x_modulator.desc=他の場所に適用されたいモジュレーターソースの現在のXポジションです。
container.y_modulator.desc=他の場所に適用されたいモジュレーターソースの現在のYポジションです。
container.low_chain.desc=低周波数帯域の処理に使用するデバイス/プラグインの挿入をするためのチェーンです。
container.mid_chain.desc=中周波数帯域の処理に使用するデバイス/プラグインの挿入をするためのチェーンです。
container.high_chain.desc=高周波数帯域の処理に使用するデバイス/プラグインの挿入をするためのチェーンです。
container.low_gain.desc=低周波数帯域のポストチェーンゲインです。
container.mid_gain.desc=中周波数帯域のポストチェーンゲインです。
container.high_gain.desc=高周波数帯域のポストチェーンゲインです。

chain.chain.title=チェーン デバイスチェーン
chain.chain.desc=すべての種類のデバイス/プラグインを挿入し、シグナルフロープリセットとして簡単保存します。
drum_machine.chain_scroll.title=ドラムチェーンスクローラー
drum_machine.chain_scroll.desc=セル(ノートごとに1つ)表示のスクロールをします。画面には 16個のセールが一度に表示され、編集できます。
drum_machine.chain_grid.title=ドラムチェーンセル
drum_machine.chain_grid.desc=空のセルは表示されたノートのトリガーに使用します。(ダブルクリックで入力) \n\n占有チェーンはそのデバイス数を表示し、試聴(三角形の再生ボタンで 、ソロ (S)、ミュート (M)をおこないます。\n\nメモ: 右クリックで複数セルのチョーク設定をします。チョークでまとめられたセル(例: ハイハット) は、その内の1つのみが発音します。
drum_machine.channel_pan.title=選択チェーンのパンニング [±100 %]
drum_machine.channel_pan.desc=選択されたチェーンのステレオポジションを設定します。
drum_machine.channel_volume.title=選択チェーンのボリューム [-∞ dB ~ +6.0 dB]
drum_machine.channel_volume.desc=選択されたチェーンの音量 (ポストメーター) を設定します。
drum_machine.channel_solo.title=選択チェーンのソロ [切替]
drum_machine.channel_solo.desc=選択されたチェーンのソロ操作をします。
drum_machine.channel_mute.title=選択チェーンのミュート [切替]
drum_machine.channel_mute.desc=選択されたチェーンのミュート操作をします。
drum_machine.hide_detail=内部リターンの表示を隠します。
drum_machine.show_detail=内部リターンの表示します。
#fx_layer
fx_selector.note_path.title=ノート/MIDIソース
fx_selector.note_path.desc=入力されるノートとMIDI信号のパスです。
#instrument_layer
#instrument_selector
mid-side_split.mid_chain.desc=入力されるオーディオ信号の中央域 (ミッド) の処理をするデバイス/プラグインを挿入するためのチェーンです。
mid-side_split.side_chain.desc=入力されるオーディオ信号のサイド域の処理をするデバイス/プラグインを挿入するためのチェーンです。
mid-side_split.mid_gain.desc=オーディオ信号を左右ステレオに変換する前の中央域 (ミッド) のゲインを適用します。
mid-side_split.side_gain.desc=オーディオ信号を左右ステレオに変換する前のサイド域のゲインを適用します。
multiband_fx-2.crossover.desc=低域と高域が重なる周波数です。
multiband_fx-3.low_freq.desc=低域と中域が重なる周波数です。
multiband_fx-3.high_freq.desc=中域と高域が重なる周波数です。
multiband_fx-3.display.title=グラフィカルインターフェイス
multiband_fx-3.display.desc=各帯域は円の色 (低域: 赤、中域: 黄、高域: 青) で視覚化され、上下のドラッグで帯域ゲインの調節をします。低域と高域は左右のドラッグも可能で、クロスオーバー周波数の調節にします。
#note_fx_layer
#note_fx_selector
replacer.filter_mode.desc=使用するフィルター (検出前段) のタイプを設定します:\nBypass → フィルターなし\nBand-pass (2-pole) → 6dB/oct\nBand-pass (4-pole) → 12dB/oct\n​
replacer.filter_freq.desc=アナライシスフィルターの周波数設定です。
replacer.filter_q.desc=アナライシスフィルターのレゾナンス設定です。
replacer.filter_monitor.desc=チューニング用にアナライシスフィルターを直接デバイスのオーディオ出力にルーティングします。
replacer.threshold.desc=デバイスチェーンにノートオンとオフのどちらかを送るのかを判別するおよそのレベル設定します。
replacer.tolerance.desc=スレッショルド帯域幅を設定します。高スレッショルド値を通過した場合にノートオンを送信し、低スレッショルド値以下に下がった場合にノートオフを送信します。
replacer.hold.desc=信号がスレッショルド域以下に立ち下がった際のデバイスチェーンにノートオフを送信するまでの時間設定です。
replacer.note_pitch.desc=デバイスのチェーンに送信するノートピッチです。
replacer.note_velocity.desc=デバイスのチェーンに送信するベロシティです。 \n\nメモ: モジュレーションをかけることができます。
replacer.chain.desc=デバイスによって生成されたノートの受信とそれに続くオーディオ処理をする挿入デバイス/プラグインチェーンです。
replacer.display.title=グラフィカルインターフェイス
replacer.display.desc=入力されたオーディオ信号を表示 (ポストフィルター) します。ドラッグ可能な青線はディテクションスレッショルド、付随する可視の線はディテクションレンジ (検出範囲) 、赤線(高)はノートオン、赤線(低)はノートオフの送信レベルを示します。
stereo_split.left_chain.desc=左から入力されるオーディオ信号処理をする挿入デバイス/プラグインチェーンです。
stereo_split.right_chain.desc=右から入力されるオーディオ信号処理をする挿入デバイス/プラグインチェーンです。
stereo_split.left_gain.desc=左チャンネルに適用するゲインです。
stereo_split.right_gain.desc=右チャンネルに適用するゲインです。
xy.chains.desc=このミックスグリッドのフルデバイスチェーンです。
xy.interface.title=グラフィカルインターフェイス
xy.interface.desc=クリック可能な円 ("M") は現在のミックスポジションの視覚化と操作をします。
#xy_fx
#xy_instrument

#container-legacies.
audio_mod.legacy.title=注意: レガシーデバイス
audio_mod.legacy.desc=このBitwig v1デバイスは、古いプロジェクトとの互換性のために用意されています。これらの旧 MOD デバイスは、モジュレーターとして置き換えられ、モジュレーターペインで任意のデバイスやプラグインの追加が可能です。 \n\n現在の関連デバイス: \n• Audio Rateモジュレーター \n• Audio Sidechainモジュレーター \n• Envelope Followerモジュレーター \n• HW CV Inモジュレーター
lfo_mod.legacy.title=注意: レガシーデバイス
lfo_mod.legacy.desc=このBitwig v1デバイスは、古いプロジェクトとの互換性のために用意されています。これらの旧 MOD デバイスは、モジュレーターとして置き換えられ、モジュレーターペインで任意のデバイスやプラグインの追加が可能です。 \n\n現在の関連デバイス: \n• LFOモジュレーター \n• Beat LFOモジュレーター \n• Classic LFOモジュレーター
note_mod.legacy.title=注意: レガシーデバイス
note_mod.legacy.desc=このBitwig v1デバイスは、古いプロジェクトとの互換性のために用意されています。これらの旧 MOD デバイスは、モジュレーターとして置き換えられ、モジュレーターペインで任意のデバイスやプラグインの追加が可能です。 \n\n現在の関連デバイス: \n• Expressionsモジュレーター \n• MIDIモジュレーター \n• Keytrackモジュレーター \n• Note Sidechainモジュレーター
step_mod.legacy.title=注意: レガシーデバイス
step_mod.legacy.desc=このBitwig v1デバイスは、古いプロジェクトとの互換性のために用意されています。これらの旧 MOD デバイスは、モジュレーターとして置き換えられ、モジュレーターペインで任意のデバイスやプラグインの追加が可能です。 \n\n現在の関連デバイス \n• Stepsモジュレーター \n• ParSeq-8モジュレーター


#delay-devices.
delay-devices.mode.desc=オンにした場合、ディレイタイムを16分音符で設定します。
delay-devices.time.desc=時間ベースのディレイタイム設定です。16分音符モードをオフにしたい際に使用します。
delay-devices.beats.desc=ディレイタイムに使用する16分音符の数です。
delay-devices.beat_offset.desc=ディレイタイムをわずかに長く (正数値)、あるいは短く (負数値) にスケールします。
delay-devices.low_cut.desc=低域アッテネートのカットオフ周波数です。
delay-devices.high_cut.desc=高域アッテネートのカットオフ周波数です。
delay-devices.feedback.desc=出力信号のフィードバック量です。
delay-devices.crossfeed.desc=他のディレイユニットに送るための信号出力量です。
delay-devices.meter.title=レベルメーター
delay-devices.meter.desc=このユニットからの出力信号です。

#delay-1
delay-2.input.desc=処理をするための入力信号:\n​Left In → デバイスの左入力\n​Mono → デバイス入力のモノラルサミング\nRight In → デバイスの右入力\n
delay-2.rate.desc=ディレイタイムモジュレーションのLFOスピードです。
delay-2.detune.desc=ディレイタイムモジュレーション量です。(左右チャンネルはいつでも逆に適用します)
delay-2.right_unit.title=右ユニット [セクション]
delay-2.right_unit.desc=右ユニットはデバイスの右出力を提供し、同様に左ユニットは左出力を提供します。それ以外は機能的に同一です。
delay-4.gain.desc=このユニットの内部レベルです。 (プリエフェクトチェーン後)
delay-4.send.desc=別ユニットへのセンドレベルです。
delay-4.sends.title=センド [-∞ dB ~ 0.0 dB]
delay-4.sends.desc=別ユニットへのセンドレベルです。
delay-4.volume.desc=オーディオバスに行くこのユニットのレベルです。
delay-4.pan.desc=このユニットのステレオパンポジションです。
delay-4.global_gain.desc=すべての入力ゲイン、センド、フィードバックレベルに対する相対ゲインスケーラーです。
delay-4.units.title=ユニット2、3、4 [セクション]
delay-4.units.desc=すべてのユニットは機能的に同一です。


#destruction.
amp.clipping_mode.desc=クリッピングモデル:\n​Smooth → アナログモデル\n​Class A → トランジスターモデル\n​Class AB → トランジスターモデル\n​Pixelated → デジタルモデル\n​Eulic → サイン波形風味\n​Fold A → ラッピングバリエーション\n​Fold B → ラッピングバリエーション\n​Fold C → ラッピングバリエーション\n
amp.clipping_bias.desc=クリッピング段の非対称性の設定量です。
amp.clipping_sag.desc=信号のディップ量です。大トランジェントに対する真空管の応答のモデリングです。
amp.clipping_drive.desc=クリッピング段で使用するゲインです。
amp.clipping_stereo.desc=クリッピング処理を完全ステレオで動作にします。
amp.cabinet_width.desc=キャビネットサイズを端から端までエミュレーションします。
amp.cabinet_height.desc=キャビネットサイズを上端から下端までエミュレーションします。
amp.cabinet_depth.desc=キャビネットサイズを前面から背面までエミュレーションします。
amp.cabinet_reflect.desc=キャビネットモデルのリバウンド量です。
amp.cabinet_phase.desc=キャビネットの位相を反転します。
amp.cabinet_hue.desc=使用中のキャビネットモデルです。
amp.cabinet_color.desc=キャビネットヒュー (Hue) による"キャラクター"の濃さです。
amp.cabinet_mix.desc=ポストEQの入力に送られるキャビネット処理された信号量です。
amp.gain.desc=ポストクリッピングに適用するゲインです。
bit-8.clock_rate.desc=サンプルレート
bit-8.clock_jitter.desc=クロック周波数に挿入された変動量です。
bit-8.clock_chance.desc=耳にできるサンプル (ランダム選択) の割合です。
bit-8.gate.desc=各サンプルのパススルーするスレッショルドです。
bit-8.shape_rect.desc=信号整流モード:\nOFF → 信号処理なし\nHalf → 負数値はゼロとして処理されます\nFull → 負数値は正数値として処理します\n
bit-8.shape_mode.desc=クリッピングタイプ:\n​Off → クリッピングなし\n​Clip → ±0.5を超えた際にフラットライン処理\n​Fold → ±0.5を超えた際に反射処理\nWrap → ±0.5を超えた際に極性反転処理\n
bit-8.shape_drive.desc=クリッピング前に適用するゲイン量です。
bit-8.quantize_mode.desc=クオンタイズタイプ:
bit-8.quantize_level.desc=クオンタイズのノイズフロアです。
bit-8.quantize_mode.desc=クォンタイズアルゴリズム:\nOff-zero → グリッドをオフセット\nOn-zero → ゼロ周辺をグリッド\nDiffusion → エラー拡散\nDither → 馴染むためのノイズを追加\n​
bit-8.quantize_squared.desc=二乗領域でクォンタイズを実行します。
bit-8.quantize_brightness.desc=拡散 (Diffusion) アルゴリズムによるエラー拡散量です。
bit-8.quantize_noise.desc=ディザー (Dither) アルゴリズムのステレオノイズです。
distortion.drive.desc=ディストーション部の初段で適用されるゲインです。
distortion.slew.desc=最大トランジション速度をdB値として設定します。高い設定値ほどトランジションは速くなり、低い値ほど遅くなります。
distortion.symmetry.desc=ディストーション曲線の非対称性です。
distortion.dc.desc=ディストーション曲線後の相対的な信号オフセットです。
distortion.pre_freq.desc=プリディストーションベルフィルターの中心周波数です。
distortion.pre_q.desc=プリディストーションベルフィルターのQ/傾斜度です。
distortion.pre_gain.desc=プリディストーションベルフィルターのゲインです。
distortion.post_low.desc=ポストディストーションに対する低域アッテネートのカットオフ周波数です。
distortion.post_high.desc=カットオフは、ディストーション処理後にアッテネートをする高域の周波数帯域を設定します。
distortion.display.title=グラフィカルインターフェイス
distortion.display.desc=クリック可能な黄色の円はプリディストーションフィルターを示します。ドラッグをすることで中心周波数 (左右) とゲイン (上下) の変更をします。あるいは Q (装飾キーを押しながら上下) もおこなえます。ローカット(赤)とハイカット(青)のクリックでそれぞれの周波数を調節できます。 \n\n暗いスペクトラム表示は入力信号を示します。明るいカーブは出力する信号を示します。
saturator.transfer_graph.title=カーブディスプレイ
saturator.transfer_graph.desc=転送機能は通常、現在の設定を適用し、現在の入力レベルは白色で表示されます。 \n\n正のアンプリチュードは黄色、負のアンプリチュードは橙色でインターフェイスに表示します。
saturator.normalize.desc=ドライブ (Drive) パラメーターの最大出力を1に制限します。(メイクアップゲインのオフセットにより)
saturator.output.desc=出力ゲインです。 \n\nメモ: ノーマライズを有効にした際、このパラメーターは引続き残りますが、最終的に適用されるゲイン量が表示されます。
saturator.drive.desc=処理前に適用されるゲイン量です。
saturator.cutoff.desc=サチュレーションされた信号のみに適用するローパスフィルターのカットオフです。
saturator.slope.title=ポストローパススロープとフレーバー
saturator.slope.desc=ローパスフィルターの傾斜(ポール数)です。"G"モードはなだらかで、"R"モードは少し険しい設定です。
saturator.quiet_threshold.desc=クワイエットスレッショルドを適用したレベルです。信号が静かになると持続します。
saturator.loud_threshold.desc=ラウドスレッショルドを適用したレベルです。信号が大きくなると持続します。
saturator.loud_threshold_skew.desc=正負のアンプリチュードにラウドスレッショルドを適用する際の差異です。
saturator.quiet_knee.desc=クワイエットスレッショルド (Quiet Threshold) に適用するトランジションの広さです。
saturator.loud_knee.desc=ラウドスレッショルド (Loud Threshold) に適用するトランジションの広さです。
saturator.loud_knee_skew.desc=正負のアンプリチュードにラウドニーを適用する際の差異です。
saturator.quiet_ratio.desc=クワイエットスレッショルド (Quiet Threshold) 値の信号スケーリングです。
saturator.loud_ratio.desc=ラウドスレッショルド (Loud Threshold) 値の信号スケーリングです。
saturator.loud_ratio_skew.desc=正負のアンプリチュードにラウドレシオを適用する際の差異です。 \n\nメモ: すべてのスキュー (Skew) パラメーターにおいて、正数値は正方向のアンプリチュード、負数値は負方向のアンプリチュードを強調します。
saturator.interface.title=インターラクティブビジュアライゼーション
saturator.interface.desc=入力信号は白色のアニメーションバーとして水平表示されます。出力は黄色のカーブ (正値) と橙色のカーブ (負値、曲線が異なる場合) として表示します。 \n\nL (Loud) と Q (Quiet) スレッショルドはクリック可能で、それぞれの両脇のドッドはニー (Knee) パラメーターとして機能します。画面アイテムの上下ドラッグ操作はレシオ (Ratio) 設定になります。
saturator.hide_detail=カーブエディターを隠します。
saturator.show_detail=カーブエディターを表示します。

#drum.
e-clap.decay.desc=ノイズのディケイタイムです。
e-clap.repeat_distance.desc=連続する再トリガー間の時間で、リピート間隔になります。
e-clap.repeat_duration.desc=リピート間隔で再トリガーの発生周囲です。
e-clap.width.desc=ノイズのステレオの広がりです。
e-clap.cutoff.desc=ローパスフィルターのカットオフ周波数です。
e-clap.reso.desc=ローパスフィルターのレゾナンスです。
e-cowbell.osc1pitch.desc=オシレーター1の周波数です。
e-cowbell.osc2offset.desc=オシレーター1に対するオシレーター2のチューニングです。
e-cowbell.osc_kbt.desc=(ピッチ設定の代わりに使用する)オシレーターの入力ノートピッチです。
e-cowbell.osc_blend.desc=2つのオシレーターの混ざり具合を決定付けるクロスフェーダーです。(オシレーター1: '0 %' ~ オシレーター2'100 %')
e-cowbell.cutoff.desc=バンドパスフィルターのカットオフ周波数です。(ジェネレーター後、リングモジュレーター前に位置します)
e-cowbell.reso.desc=バンドパスフィルターのレゾナンスです。
e-cowbell.ring_frequency.desc=フィルター処理されたジェネレーターセクションの出力で、リングモジュレーションされたサインオシレーターの周波数です。
e-cowbell.ring_mix.desc=リングモジュレーションされた信号量で (そのドライ信号と混ぜて)、デバイス出力に送られます。
e-cowbell.attack.desc=アンプリチュードアタックタイムです。
e-cowbell.decay.desc=アンプリチュードディケイタイムです。
e-hat.attack.desc=アンプリチュードアタックタイムです。
e-hat.decay.desc=アンプリチュードディケイタイムです。
e-hat.decay_curve.desc=アンプリチュードディケイ段のカーブです。
e-hat.comb_frequency.desc=ホワイトノイズジェネレーターの処理をするコムフィルターの周波数/ディレイタイムです。
e-hat.comb_feedback.desc=コムフィルターのフィードバック設定です。
e-hat.comb_mix.desc=コムフィルターを通した信号量で (そのドライ信号と混ぜて)、FMヒットセクションと混ぜて送られます。
e-hat.cutoff.desc=ハイパスフィルターのカットオフ周波数です。(コムとFMヒットセクションが混ざった後に位置します)
e-hat.reso.desc=ハイパスフィルターのレゾナンスです。
e-hat.display.title=グラフィカルインターフェイス
e-hat.display.desc=赤色の円 ("C") はコムフィルターの周波数とミックス設定をコントロールします。黄色の円 ("M") はFMヒットセクションのモジュレーションオシレーターの周波数とストレングスをコントロールします。青色の円 ("H") のキャリア周波数とミックス設定をコントロールします。そして橙色の縦線はハイパスフィルターのハイパスフィルターのカットオフ周波数をコントロールします。
e-hat.fm_decay.desc=FMヒットセクションのディケイタイムです。
e-hat.fm_carrier_frequency.desc=キャリア周波数です。
e-hat.fm_modulator_frequency.desc=モジュレーター周波数です。
e-hat.fm_modulator_amount.desc=FMヒットセクションのモジュレーションの深さ/インデックスです。
e-hat.fm_mix.desc=FMヒット信号量です。(コムセクションの出力と混ざり) ハイパスフィルターに送られます。
e-hat.width.desc=ノイズのステレオの広がりです。
e-kick.osc_decay.desc=オシレーターのディケイタイムです。
e-kick.osc_tune.desc=オシレーター周波数です。
e-kick.click.desc=オシレーター周波数を一時的にダブルにしてノートにインパクトを加えます。
e-kick.osc_tone.desc=ローパスフィルターのカットオフ周波数です。
e-kick.pitch_mod_amount.desc=最大ピッチモジュレーションです。
e-kick.pitch_mod_curve.desc=ピッチディケイ部のカーブです。
e-kick.pitch_mod_time.desc=ピッチディケイ部の時間です。
e-snare.osc1tune.desc=オシレーター1の周波数です。
e-snare.osc1decay.desc=オシレーター1のディケイタイムです。\n
e-snare.osc2offset.desc=オシレーター1に対するオシレーター2のチューニングです。
e-snare.osc2decay.desc=オシレーター1のディケイ設定に対するオシレーター2のディケイタイムです。
e-snare.noise_attack.desc=ノイズジェネレーターのアタックタイムです。
e-snare.noise_decay.desc=ノイズジェネレーターのディケイタイムです。
e-snare.noise_decay_curve.desc=ノイズジェネレーターのディケイ部の傾斜設定です。'0 %'はリニアで、正数値は対数曲線、負数値は指数曲線になります。
e-snare.noise_width.desc=ノイズジェネレーターのステレオの広がりです。
e-snare.osc_level.desc=2つのオシレーターの混ざり具合を決定付けるクロスフェーダーです。(オシレーター1: '0 %' ~ オシレーター2'100 %')
e-snare.noise_level.desc=ノイズジェネレーターレベルです。
e-snare.high_cut.desc=(ミックスされた出力を処理する) ローパスフィルターの周波数です。
e-snare.low_cut.desc=(ノズジェネレーターを処理する) ハイパスフィルターの周波数です。
e-snare.q.desc=ローとハイ、両フィルターのレゾナンスです。
#e-tom SHARED WITH E-KICK


#dynamic.
dynamic.input.desc=入力信号に適用されるゲイン量です。
dynamic.mode.desc=使用する平均化方法:\n​Peak → 高速、トランジション応答\nRMS → 低速、信号の”ボディ"に応答\n
dynamic.sidechain_path.title=オーディオサイドチェーンソース
dynamic.sidechain_path.desc=サイドチェーン信号入力のパスです。デバイスのアナライシス部で使用します。
dynamic.output_meter.title=出力メーター
dynamic.output_meter.desc=出力される信号です。
dynamic.reduction_amount.title=ゲインリダクション
dynamic.reduction_amount.desc=現在適用されているコンプレッション量です。

compressor.threshold.desc=超過した際にコンプレッションを開始するレベルです。
compressor.ratio.desc=コンプレッションの適用量です。 \n\n例えば、レシオ設定'4.00:1'は、4dBの信号入力を1dBの出力に抑えることを意味します。従いまして、設定値に比例してゲインリダクションが増します。
compressor.attack.desc=(入力がスレッショルドを超えて) 無コンプレッションからフルゲインリダクションになるまでの時間です。
compressor.release.desc=(入力がスレッショルド以下になって) フルゲインリダクションから無コンプレッションになるまでの時間です。
compressor.output.desc=出力に適用するゲイン量です。
compressor.makeup.desc=スレッショルドとレシオ設定に応じて適用される追加ゲインです。
compressor.input_meter.title=入力メーター
compressor.input_meter.desc=青線によるスレッショルドコントロールを装備した入力信号です。
compressor.combo_meter.title=ヒストリーディスプレイ
compressor.combo_meter.desc=下から上に表示をします: \n• 入力信号 (明るいグレー) \n• コンプレッションされた信号 (暗いグレー) \n• 信号リダクション値 (青)
de-esser.frequency.desc=ハイパスフィルターのカットオフ周波数です。(プリアナライシス)
de-esser.mode.desc=アナライシスフィルターモード:
de-esser.monitor.desc=チューニング用にアナライシスフィルターをデバイスのオーディオ出力に直接ルーティングします。
de-esser.amount.desc=アナライシスフィルターがトリガーされた際にゲインリダクションとして信号に適用される相対量です。
de-esser.meter.title=ゲインリダクションメーター
de-esser.meter.desc=現在適用されているゲインリダクション量を表示します。
dynamics.ratio_low.desc=ゲインリダクション/エクスパンションの適用量です。 \n\n例えば、江レシオ設定が '2.00:1' の場合、1dBの入力変化が2dBの出力変化になることを意味します。そしてレシオ設定が '1:4.00' の場合、4dBの入力増に対して出力増は1dBのみになることを意味します。
dynamics.threshold_low.desc=レベルを下回った際にコンプレッション/エクスパンションが機能します。
dynamics.knee_low.desc=スレッショルド付近を下回った際の"ニー"設定です。値に比例して大きく、より緩やかな範囲になります。
dynamics.ratio_high.desc=ゲインリダクション/エクスパンションの適用量です。 \n\n例えば、レシオ設定 '1:4.00' は4dBの入力信号増に対して出力増は1dBのみになります。そして、レシオ設定 '2.00:1' は1dBの入力変化に対して、出力は2dB変化することを意味します。
dynamics.threshold_high.desc=レベルを上回った際にコンプレッション/エクスパンションが機能します。
dynamics.knee_high.desc=スレッショルド付近を上回った際の"ニー"設定です。値に比例して大きく、より緩やかな範囲になります。
dynamics.attack.desc=入力信号がいずれのスレッショルドを超えた際のトランジションタイムです。
dynamics.release.desc=入力信号がいずれのスレッショルド以下に立ち下がった際のトランジションタイムです。
dynamics.sidechain_gain.desc=アナライシス入力に適用するゲインです。
dynamics.display1.title=インターラクティブレスポンスディスプレイ
dynamics.display1.desc=レスポンスカーブを橙色の線で示し、白色のトレース表示で (アタックとリリースタイムを考慮した) 現在の信号レベルを示します。2つのスレッショルドレベルは紺色の背景表示で示され、左右にドラッグできます。カーブの両側は上下にドラッグをして、それぞれのレシオを設定します。
dynamics.display2.title=ヒストリーディスプレイ
dynamics.display2.desc=入力信号 (グレー) とゲインリダクション/エクスパンション量 (青) を表示します。クリックをすると表示はフリーズし、再度クリックするまで、表示のフリーズは解除されます。
dynamics.meters.title=コンボメーター
dynamics.meters.desc=左から右に表示します: \n• 現在の上限と下限のスレッショルドを2つの赤線で示すデシベルスケール \n• 入力信号メーター \n• 信号リダクション量 (青) \n• 出力信号メーター
gate.threshold.desc=超えるとゲインリダクションが無効になるレベルです。
gate.depth.desc=ゲインリダクションの最大量です。
gate.attack.desc=(入力がスレッショルド以上になって) フルゲインリダクションから無になるまでの時間です。
gate.release.desc=(入力がスレッショルド以下になって) 無ゲインリダクションからフルリダクションになるまでの時間です。
gate.display.title=ヒストリーディスプレイ
gate.display.desc=入力信号(グレー)とゲインリダクション量 (青) を表示します。クリックをすると表示はフリーズし、再度クリックするまで、表示のフリーズは解除されます。
gate.meters.title=コンボメーター
gate.meters.desc=左から右に表示します: \n• 現在のスレッショルドを赤線で示すデシベルスケール \n• 入力信号メーター \n• 信号リダクション量 (青) \n• 出力信号メーター
peak_limiter.ceiling.desc=デバイスよって許可された最大レベルです。入力されたアンプリチュード (ポスト入力ゲイン) がこれを超えた場合、レベルリミッターが機能をし始めます。
peak_limiter.release.desc=(入力がシーリング以下になって) フルリダクションからリミッター解除になるまでの時間です。
peak_limiter.input_meter.title=入力メーター
peak_limiter.input_meter.desc=青線によるシーリングコントロールを装備した入力信号です。
peak_limiter.combo_meter.title=ヒストリーディスプレイ
peak_limiter.combo_meter.desc=下から上に表示します: \n• 入力信号 (明るいグレー) \n• リミッター処理された信号 (暗いグレー) \n• 信号リダクション量 (青)
transient_control.attack_modulator.title=アタックモジュレーター
transient_control.attack_modulator.desc=タイムコントロールの影響を受けて、検出されたアタック信号に使用するモジュレーションソースです。
transient_control.attack_gain.desc=アタックが検出された際のデバイスのオーディオ入力信号に適用されるゲインです。
transient_control.attack_time.desc=ゲイン適用後のディケイタイムです。
transient_control.sustain_modulator.title=サスティンモジュレーター
transient_control.sustain_modulator.desc=タイムコントロールの影響を受けて、検出されたサスティン信号に使用するモジュレーションソースです。
transient_control.sustain_gain.desc=サスティンが検出された際のデバイスのオーディオ入力信号に適用されるゲインです。
transient_control.sustain_time.desc=ゲイン適用前のアタックタイムです。
transient_control.displays.title=デュアルディスプレイ
transient_control.displays.desc=上部のディスプレイは検出されたアタック (黄) とサスティン (紫) 信号を表示し、各々のタイムパラメーターの影響を受けます。 \n\n下部のディスプレイはデバイスの入力信号 (グレー) とゲインリダクション/エクスパンションの適用量 (青) を表示します。 \n\nそれぞれのディスプレイをクリックすると表示はフリーズし、再クリックでフリーズが解除されます。
gate.meters.title=コンボメーター


#eq.
eq.enable.desc=フィルター帯域を有効にします。
eq.mode.desc=この帯域で利用可能なモードです:\nHigh-pass (2-pole) → 12dB/oct仕様\nHigh-pass (4-pole) → 24dB/oct仕様\nBell → ゲインバリアブルノード\nLow-self → ゲインバリアブルフィルター\n​
eq.gain.desc=ベルとシェルビングフィルターの設定可能なゲインです。
eq.frequency.desc=この帯域のセンター/カットオフ周波数です。
eq.reso.desc=この帯域の傾斜/レゾナンスです。
eq.display.title=グラフィカルインターフェイス
eq.display.desc=各帯域はラベルのついた円で示されます。クリック&ドラッグでその帯域の周波数とゲイン調節をおこないます。右クリックで帯域のフィルターモードの変更をします。マウスカーソルを置いたまま、マウスホイール/トラックパッドジェスチャーのスクロール操作で帯域幅 (Q) の調節がおこなえます。その他の装飾キーを使用した操作は画面下端に表示されます。 \n\n暗いスペクトラム表示は入力信号、明るいカーブは出力信号を示します。

eq+.display.title=グラフィカルインターフェイス
eq+.display.desc=各帯域のフィルターモード設定は、円ラベルで示され、クリック&ドラッグで周波数とゲイン (またはQ) の調節をおこないます。右クリックで帯域のフィルターモードの変更をします。マウスカーソルを置いたまま、マウスホイール/トラックパッドジェスチャーのスクロール操作で帯域幅 (Q) の調節がおこなえます。 \n\n操作ジェスチャーは(カーソル位置などに応じて)、以下の操作が含まれます: \n\n• クリックで帯域のフィルター、カーブが有効になります。 \n• 下端のクリックでノッチを設定します。 \n• 左端カーブのクリックでローシェルフを設定します。 \n• 右端カーブのクリックでハイシェルフを設定します。 \n• 画面左端の領域のクリックでハイパスを設定します。 \n• 画面右端の領域のクリックでローパスをクリックします。 \n• カーブのダブルクリックでベル(バンドパス)を設定します。 \n• ラベルのダブルクリックでその帯域を無効にします。
eq+.global_gain.desc=デバイスの出力ゲインを調節します。
eq+.adaptive-q.desc=各帯域のゲイン設定に比例したQ(帯域幅)の調節をします。
eq+.mode.desc=デバイスで使用するオーバーサンプリング量です:
eq+.band_solo.desc=注視する帯域の試聴用にバンドパスフィルターを置きます。 \n\nメモ: グラフィカルインターフェイスで選択した帯域横のハンドル (↔) のドラッグでソロ機能を一時的に有効にします。マウスボタンを話すことでソロは解除されます。
eq+.band_selector.desc=注視する帯域です。
eq+.display_range.desc=グラフィカルインターフェイスの垂直表示範囲です。
eq+.inspector_bands.title=帯域ごとのコントロールです [バンド 1 ~ 8]
eq+.inspector_bands.desc=モード設定を含め、有効帯域ごとに次の要素が表示されます: \n\n• オンオフスイッチ (電源アイコン) \n• フィルターモード \n• 周波数 \n• ゲイン \n• Q (帯域幅)
eq+.display_pre.title=入力スペクトラム表示 [切替]
eq+.display_pre.desc=入力オーディオを (暗いスペクトラムとして) 可視化にします。
eq+.display_post.title=出力スペクトラム表示 [切替]
eq+.display_post.desc=出力オーディオを (明るいカーブとして) 可視化にします。
eq+.show_analyzer=アナライシス設定表示
eq+.select_band_1=バンド 1 を選択
eq+.select_band_2=バンド 2 を選択
eq+.select_band_3=バンド 3 を選択
eq+.select_band_4=バンド 4 を選択
eq+.select_band_5=バンド 5 を選択
eq+.select_band_6=バンド 6 を選択
eq+.select_band_7=バンド 7 を選択
eq+.select_band_8=バンド 8 を選択
eq+.reference_chooser.title=リファレンスオーディオソース
eq+.reference_chooser.desc=画面に紫色のカーブとして表示されるオーディオソースです。
#eq-2
eq-5.mode1.desc=バンド1で利用可能なモードです:\nHigh-pass (2-pole) → 12dB/oct仕様\nHigh-pass (4-pole) → 24dB/oct仕様\nBell → ゲインバリアブルノード\nLow-self → ゲインバリアブルフィルター\n​
eq-5.mode_middle.desc=バンド 2、3、4で利用可能なモードです:\nBell → ゲインバリアブルノード\nNotch → 周波数の鋭いカット\n
eq-5.mode5.desc=バンド5で利用可能なモードです:\nHigh-pass (2-pole) → 12dB/oct仕様\nHigh-pass (4-pole) → 24dB/oct仕様\nBell → ゲインバリアブルノード\nHigh-self → ゲインバリアブルフィルター\n​
eq-5.amount.desc=全帯域のゲイン設定をスケールし、効果の調節をおこないます。
eq-5.shift.desc=全帯域の周波数設定のオフセットをおこないます。
eq-5.display.desc=グラフィカルエディターを可視化にします:\n​None → 表示なし\nPre → 入力を表示します (暗いスペクトラム)\nPost → 出力を表示します (明るいカーブ)\nBoth → 入力と出力の両方を表示します
eq-dj.gain.desc=この帯域に適用するゲインです。
eq-dj.low_freq.desc=低域と中域が交わる周波数です。
eq-dj.high_freq.desc=中域と高域が交わる周波数です。
eq-dj.interface.title=グラフィカルインターフェイス
eq-dj.interface.desc=各帯域は異なる色 (低域は赤、中域は黄、高域は青) で識別できます。クロスオーバー周波数は縦線のクリックで調節できます。


#filter.
filter-device.display.title=スペクトラム表示
filter-device.display.desc=出力オーディオスペクトラムです。ドッド操作で周波数調節 (左右) とレゾナンス設定 (上下) が可能です。 \n\n暗いスペクトラ表示は入力信号、明るいカーブは出力信号を示します。

ladder.amount_adsr.desc=フィルター周波数に作用するADSR (エンベロープ) モジュレーションの深さです。 
ladder.amount_lfo.desc=フィルター周波数に作用する LFO モジュレーションの深さです。 
ladder.amount_ef.desc=エンベロープフォロワーによるフィルター周波数モジュレーションの深さです。 
ladder.adsr_path.title=ゲートソース
ladder.adsr_path.desc=エンベロープトリガーのためのノートパスです。
ladder.lfo_wave.desc=LFOで使用する波形です。
ladder.lfo_retrig.desc=ノートトリガーごとにLFO波形を頭から再スタートをします。
ladder.lfo_rate.desc=LFO周波数
ladder.lfo_phase.desc=LFOのフェイズオフセットです。
ladder.ef_attack.desc=レベル増加のトランジションスピードです。
ladder.ef_release.desc=レベル減少のトランジションスピードです。
resonator_bank.frequency.desc=2ポールバンドパスフィルターの各バンドの中心周波数です。
resonator_bank.reso.desc=各帯域のフィルターレゾナンスです。
resonator_bank.gain.desc=各帯域のゲインです。
resonator_bank.global_frequency.desc=全帯域に適用する中心周波数のオフセットです。
resonator_bank.global_reso.desc=全帯域に適用するレゾナンスのオフセットです。
resonator_bank.global_gain.desc=全帯域に適用するゲインスケーラーです。
resonator_bank.kbt.desc=全帯域の中心周波数に作用する入力ノート信号のピッチです。 \n\nメモ: このデバイスがオーディオトラックで使用されている場合、その前にデバイスのNote Receiver (ノートレシーバー) を置くことで機能します。
resonator_bank.glide.desc=キーボードトラッキングの有効時、新しいノートを受信した際の帯域周波数オフセットのトランジションタイムです。
resonator_bank.display.title=グラフィカルインターフェイス
resonator_bank.display.desc=フィルター帯域は、各々番号ラベルの円で示され、ドラッグ操作で、中心周波数 (左右)とゲイン (上下)調節が可能です。 \n\n暗いスペクトラム表示は入力信号。明るいカーブは出力信号を示します。
vocoder.modulator_chain.desc=デバイスの入力信号を処理/置換えするエフェクトチェーンです。そのスペクトラムが分析され、キャリアに埋め込まれます。
vocoder.gain.desc=ポストチェーンゲインです。
vocoder.monitor.desc=デバイス出力でこのチェーンを直接モニター (ポストゲイン) します。
vocoder.interface.title=スペクトラム表示
vocoder.interface.desc=キャリア (黄)、モジュレーター (青緑) のスペクトラムとウェット出力 (白) を表示します。 \n\n垂直線の調節でバンドパスの周波数帯域の最低 (赤) と最高 (青) を設定します。2つの水平線 (紫) はフロア (下) とシーリング (上) レベルの調節をします。
vocoder.floor.desc=エクスパンダーのスレッショルドレベルです。信号がこの設定値を下回る場合はよりアッテネートされます。
vocoder.ceiling.desc=リミッターのスレッショルドレベルです。信号がこの設定値を上回る場合は、このレベル以下になるように抑えられます。
vocoder.low_frequency.desc=最も低いバンドパスフィルターの中心周波数です。(モジュレーターとキャリアセクションで一致します)
vocoder.high_frequency.desc=最も高いバンドパスフィルターの中心周波数です。(モジュレーターとキャリアセクションで一致します)
vocoder.formant.desc=アナライシス側に適用するフォルマントシフトです。
vocoder.brightness.desc=スペクトラムのバランスを再調整するための、高域 (正数値) または低域 (負数値) を強調します。
vocoder.band_width.desc=構築されたバンドパスフィルター個々の帯域幅を相対的に調節します。設定値に比例して幅が広がります。
vocoder.stereo.desc=両セクションで使用するチャンネルです:
vocoder.bands.title=ボコーダーバンド数 [8, 16, 24 … 80]
vocoder.bands.desc=モジュレーター (分析) とキャリア (処理) セクションのフィルターバンド数です。
vocoder.shape.desc=使用されるバンドパスの焦点です:\n​Broader → 緩やかな傾斜で包括的に作用\n​Steeper → 狭く特定の帯域に作用\n
vocoder.attack.desc=バンドレベルの増加時のトランジションスピードです。
vocoder.release.desc=バンドレベルの減少時のトランジションスピードです。
vocoder.freeze.desc=全モジュレーターバンドの現在レベルを保持します。
vocoder.carrier_chain.desc=モジュレーターのスペクトラムにフィルターした信号を提供するインストゥルメント/エフェクトチェーンです。


#hardware.
hw_clock_out.mode.desc=このユニットの同期モードです:\n​CLOCK → 再生中に送信先\nPLAY → 再生時に一度のみトリガー\nSTOP → 停止時に一度のみトリガー\nNOTE → ノートオンごとにトリガー\nNOTE → ユニットを無効\n
hw_clock_out.path.title=シンクディスティネーション
hw_clock_out.path.desc=同期信号のオーディオディスティネーション(送信先)です。
hw_clock_out.count.desc=トリガー間の拍数 (レート単位)です。
hw_clock_out.rate_unit.desc=クロックレートの基準単位です:\n​1/96 → 96分音符 (24拍)\n​1/64 → 64分音符 (16拍)\n​1/48 → 48分音符 (12拍)\n​1/32 → 32分音符 (8拍)\n​1/24 → 24分音符 (6拍)\n​1/16 → 16分音符 (4拍)\n​1/12 → 12分音符 (3拍)\n​1/8 → 8分音符 (2拍)\n​1/6 → 4分音符三連\n​1/4 → 4分音符\n​1/3 → 2分音符三連\n​1/2 → 2分音符\n​1 → 1小節\n​2 → 2小節\n​4 → 4小節\n​8 → 8小節\n
hw_clock_out.pulse_length.desc=トリガーごとの持続時間です:\n​0.5ms → 2000Hz\n​1ms → 1000Hz\n​5ms → 200Hz\n10ms → 100Hz\n50% → [クロックモード内] 設定単位の半分\n
hw_clock_out.display.title=出力グラフ [表示]
hw_clock_out.display.desc=直近のトリガー信号を示します。 \n\nメモ: 同期信号は非常に速く、トリガーがすべて表示されない場合があります。
hw_clock_out.trigger.desc=クリックをしてトリガー信号を送信します。
hw_clock_out.groove.desc=トランスポートのグルーブ (有効の場合) をクロックモードに適用します。
hw_clock_out.gate.desc=[クロックモードで両方のユニットが存在する場合] ユニット2が起動するまで、ユニット1の出力をゲートします。
hw_clock_out.unit_two.title=ユニット2
hw_clock_out.unit_two.desc=ゲート設定以外、パラメーターはユニット1と同一です。
hw_cv_instrument.ac.desc=DCカップルされていないインターフェイスを使用する場合、AC (直流) モードに切替ます。
hw_cv_instrument.pitch_cv_out.title=ピッチ CV ディスティネーション
hw_cv_instrument.pitch_cv_out.desc=CV ピッチ信号のオーディオディスティネーション (送信先) です。
hw_cv_instrument.gate_out.title=ゲートディスティネーション
hw_cv_instrument.gate_out.desc=ゲート (ノート オン/オフ) 信号のオーディオディスティネーション (送信先) です。
hw_cv_instrument.gate_level.desc=出力されるゲート信号のゲインです。
hw_cv_instrument.gate_invert.desc=ゲート信号の状態を反転にします。
hw_cv_instrument.mode.desc=ピッチのチューニングです:\n​Automatic → パスのピッチCV出力とオーディオを使用したセルフチューニング\n​Manual → ルートキー (ゼロポイント) とオクターブ範囲設定によるチューニング\n
hw_cv_instrument.auto_tune.desc=クリックをすると自動チューニングプロトコルが開始されます。
hw_cv_instrument.manual_root.desc=値ゼロを送信する必要がある際のセンター (ルート) ノートです。
hw_cv_instrument.manual_range.desc=オクターブレンジスケーラー (上下) です。
hw_cv_out.value.desc=CVとして送信されるレベルです。ノブのチューニングは機能しますが、オートメーション/モジュレーターを割り当てた方が、良い結果を得られます。
hw_cv_out.path.title=CV ディスティネーション
hw_cv_out.path.desc=CV 信号のオーディオでィスティネーション (送信先) です。
hw_cv_out.smooth.desc=出力される CV 信号に適用する遅延時間です。
hw_cv_out.display.title=出力グラフ [表示]
hw_cv_out.display.desc=直近の CV 値を示します。
hw_fx.out_gain.desc=出力されるオーディオに適用するゲインです。
hw_instrument.note_path.title=ノートディスティネーション
hw_instrument.note_path.desc=出力されるノートとMIDI信号のパスです。
hw_instrument.note_channel.desc=出力されるメッセージのチャンネルをそのまま ('Keep Ch.') にするか、全メッセージを特定のチャンネルにルーティングするのかの設定です。
hw_instrument.note_clock.desc=設定したパスにMIDIクロックを送信します。
hw_instrument.note_mpe.desc=有効にした場合、チャンネルは動的に割当てられ、ピッチベンドレンジの設定が使用されます。
hw_instrument.note_pb_range.desc=MPEモード時、このピッチベンドレンジが使用されます。
hw_instrument.gain.desc=戻ってくるオーディオに適用するゲインです。


#keyboard.
organ.drawbars.title=ハーモニックドローバー [ボリュームスライダー]
organ.drawbars.desc=オルガン順 (左から右) のコントロールです: \n• オクターブ下 (16') \n• 5度 (5⅔') \n• 基音 (8') \n• オクターブ上 (4') \n• オクターブ + 5度 (2⅔') \n• 2オクターブ上 (2') \n• 2オクターブ + 長3度 (1⅗') \n• 2オクターブ上 + 5度 (1⅓') \n• 3オクターブ上 (1')
organ.model.desc=各倍音で使用する音波です:\n​Rich → 三角波形風のトーンホイール\n​Pure → サイン波形風のトーンホイール\n​Full → サイン波形のトーンホイール\n
organ.retrigger.desc=各倍音をゼロから再トリガーをして、音の発生を滑らかにします。
#organ.sub
#organ.5
#organ.fundamental
#organ.8
#organ.12
#organ.15
#organ.17
#organ.19
#organ.22


#midi.
midi.led.title=メッセージインジケーター [LED]
midi.led.desc=そのチャンネルのメッセージを受信した際に点滅します。
midi.channel.desc=生成された全情報を扱うMIDIチャンネルです。 \n\nメモ: デバイスを追加するMIDI情報は影響を受けません。
midi.auto_send.desc=有効にした場合、メイン地が変更される度に、指定されたすべてのメッセージが送信されます。
midi.send_now.desc=クリックをすることで、指定されたすべてのメッセージをトリガー送信します。

channel_filter.button.title=チャンネル選択 [切替]
channel_filter.button.desc=クリック可能なボタンです。有効にした場合、明るく白く表示され、そのチャンネルのメッセージがすべて通過します。
channel_map.value.title=チャンネル再マッピング [1 ~ 16]
channel_map.value.desc=ドラッグで値変更をします。このチャンネルで受信したメッセージを別のチャンネルの情報として設定します。(明るく白く表示されている時のみ再マッピングが発生します)
midi_cc.knob.desc=定義されたコントローラー (CC) の値を送信します。
midi_cc.cc.desc=送信されるコントローラー情報の値です。
midi_cc.label.title=ユーザーラベル [テキスト]
midi_cc.label.desc=(コントローラー情報が設定されている) 構成ノブのオプションラベルです。
midi_cc.flush.desc=クリックで、すべての構成ノブの現在値を順番に送信します。
midi_program_change.program.desc=プログラムチェンジ情報です。 \n\nメモ: プロジェクトがオーディオエンジンに読み込まれた場合、Send Now (いますぐ送信)ボタンのクリック、あるいはAuto Send (自動送信) オプション有効時に値を変更した場合にプログラムチェンジ情報を (有効にした場合はバンクセレクト情報と共に) 送信します。
midi_program_change.msb_on.desc=バンクセレクト情報 (CC 0) を各プログラムチェンジ情報と共に送信します。
midi_program_change.lsb_on.desc=バンクセレクト情報 (CC 32) を各プログラムチェンジ情報と共に送信します。
midi_program_change.msb_value.desc=バンクセレクト情報をMSB (CC 0) として送信します。
midi_program_change.lsb_value.desc=バンクセレクト情報をLSB (CC 32) として送信します。
midi_program_change.chain.title=CHAIN デバイスチェーン
midi_program_change.chain.desc=これらの情報を送信された際に対して、あらゆる種類のデバイス/プラグインからプログラムチェンジ/バンクセレクト情報を分離、あるいはアンチクリック機能を使用します。
midi_program_change.chain_only.desc=プログラムチェンジ/バンクセレクト情報をデバイスチェーンのみに送信します。(デバイスの出力に送られません)
midi_program_change.chain_anti-click.desc=プログラムチェンジ/バンクセレクト情報の送信前にデバイスチェーンの出力レベルを一時的に下げます。
midi_program_change.chain_decay.desc=アンチクリックフェードアウトを有効にした際の時間です。
midi_song_select.message.desc=ソングセレクト情報です・ \n\nメモ: プロジェクトがオーディオエンジンに読み込まれた場合、Send Now (いますぐ送信)ボタンのクリック、あるいはAuto Send (自動送信) オプション有効時に値を変更した場合に情報を送信します。


#note_fx.
arpeggiator.pitch_enable.desc=ステップごとのトランスポーズ値として使用するオフセット設定です。
arpeggiator.global_velo.desc=全ステップに適用するベロシティスケーラーです。
arpeggiator.global_length.desc=全ステップに適用するゲート長スケーラーです。
arpeggiator.pattern.desc=トリガーノートの順番です:\n​Chords → 各ステップですべてのノート演奏\nUp → 上昇の繰り返し\nDown → 下降の繰り返し\nUp/Down → 上昇と下降の繰り返し\nUp/Down2 → 上昇と下降の繰り返しで、折り返しの上端と下端ノートを二度繰り返す\nDown/Up → 下降と上昇の繰り返し\nDown/Up2 → 下降と上昇の繰り返しで、折り返しの上端と下端ノートを二度繰り返す\nRandom → ランダム順\nFlow → おさえた順でノート演奏\nUp+In → 最高と最低を中心ノートに向かって繰り返し\nDown+In → 最低と最高を中心ノートに向かって繰り返し\nBlossom Up → 中心から循環上昇\nBlossom Down → 中心から循環下降\nLow&Up → 低音のペダル演奏と上昇\nLow&Down → 低音のペダル演奏と下降\nHi&Down → 高音のペダル演奏と上昇\nHi&Down → 高音のペダル演奏と下降\n
arpeggiator.octaves.desc=オクターブ範囲を設定します。現在のオクターブから上のオクターブ範囲を指定します。
arpeggiator.retrigger.desc=ステップ1から新しいノート演奏をします。
arpeggiator.time_mode.desc=有効にした場合、ノート値をステップ長に設定します。
arpeggiator.time_rate.desc=各ステップの持続時間です。
arpeggiator.rate.desc=レート(速度)を定義づけるノート間隔 (ノートの種類) です:\n1/1 → 全音\n1/2 → 半音\n1/4 → 4分\n1/16 → 16分\n1/32 → 32分\n1/64 → 64分\n​
arpeggiator.note_type.desc=デバイスのレート (演奏の細かさ) を定義づけに使用するノートの長さです:\nStraight → ベースレート等倍\nDotted → ベースレート x1.5倍\nTriples → ベースレート x2/3\n​
arpeggiator.groove.desc=トランスポートのグルーブ (有効の場合) をノートの演奏タイミングに適用します。
arpeggiator.count.desc=ステップ数設定です。
arpeggiator.step_pitch.title=トランスポーズ量 [スライダー]
arpeggiator.step_pitch.desc=ステップごとの半音オフセット単位のピッチ設定です。
arpeggiator.step_skip.title=ステップスキップ [切替]
arpeggiator.step_skip.desc=選択ステップの演奏をスキップしてその次のステップにジャンプする設定です。トランスポーズと組み合わせたパターンを構築するのに適した設定です。
arpeggiator.step_velo.title=ベロシティレベル [スライダー]
arpeggiator.step_velo.desc=各ステップのベロシティ設定 (パーセント単位) です。
arpeggiator.step_length.title=ゲート長 [スライダー]
arpeggiator.step_length.desc=ステップごとのゲート長設定です。設定値は (ベースレートとノートタイプで設定された) ステップ長に対する割合 (パーセント単位) になります。
arpeggiator.leds.title=ポジションLED [表示]
arpeggiator.leds.desc=現在の演奏ステップを点灯で示します。
arpeggiator.humanize.desc=ベロシティとノート/ステップの開始時タイミングの両方を相対的にランダム化します。(ステップのタイミングは前後にランダムシフトします。)
arpeggiator.pressure_velo.desc=ポリプレッシャー情報の入力による各ノートのベロシティに動的変化を加えます。(MPEフレンドリー機能です。)
arpeggiator.overlapping.desc=(全体のゲート設定を100%以上に設定した場合の) ノート演奏のオーバーラップ (重なり) を許可します。無効の場合、新しいノートは古いノートを打ち消します。
arpeggiator.start_on_note.desc=最初のノートを受信した際にトリガー出力をします。それ以外の場合、次のグリッド間隔まで、ノートレート値は待機します。
arpeggiator.release_immediately.desc=最後のノートを離した際に停止をします。それ以外の場合、最終ステップは通常のレート周期として継続します。
arpeggiator.octave_handling.desc=追加オクターブの処理方法:
diatonic_transposer.root.desc=スケール/モードのルートノートです。
diatonic_transposer.mode.desc=使用するスケール/モードです。
diatonic_transposer.shift.desc=入力ノートに適用する半音単位のオフセットです。
diatonic_transposer.foreigners.desc=キースケール外のノート処理方法:\n​Filter → スケール"アウト"ノートを無視\n​Constrain → "アウト"ノートを最も近い"イン"ノートに矯正
micro-pitch.mode.desc=入力ノートのリターン方法:
micro-pitch.root.desc=ピッチシフトが適用されない音律の開始ノートです。
micro-pitch.octave.desc=12 Noteモードではルートキーの1オクターブ上ノートまで半音でシフトします。 \n\nEDOモードでは分割数 (Divisions) に従った間隔で音程が割り振られます。 
micro-pitch.notes.title=ノート 1 から 11 [0.00 ~ +24.00 st]
micro-pitch.notes.desc=中央の11音それぞれに半音単位基準のシフトが適用されます。 \n\nメモ: シフトに分数を入力することも可能です。例えば、'3/2' と入力をした場合、値は '7.02 st' になります。
micro-pitch.a3.desc=A3ノートを基準にした、ノート範囲全体の周波数オフセットです。(従来は A3 = '440 Hz')
micro-pitch.amount.desc=ドライ/ウェットバランス設定です。平均律 ('0 %') から完全に設定値の完全適用 ('100 %') まで、その混ざり具合を設定します。
micro-pitch.visual.title=スケールビジュアライゼーション [表示]
micro-pitch.visual.desc=ルートとオクターブ上のキーを基準に上 (12時の箇所) から、全ノートのピッチ間隔を相対的に表示します。 \n\n画面上の分割線は一般的な平均律を示し、ノートがそのピッチに設定されている場合、細い線表示のままで、調律が施された場合、そのノートの線は太く表示されます。
micro-pitch.edo_divisions.desc=均等分割の間隔を決定付ける数です。
micro-pitch.edo_visual.title=EDOビジュアライゼーション [表示]
micro-pitch.edo_visual.desc=ノートのピッチ間隔を可視化した表示で、トリガーノートがどの度数を演奏しているのかを確認する際に役立ちます。 (この表示は最大24ノート分割まで表示可能で、それ以上の細かさの場合、視覚化はされないことにご注意ください)
micro-pitch.too_much_edo.title=可視化ポイント過多
micro-pitch.too_much_edo.desc=分割数が24を超えています。残念ながら内容を表示できません。
micro-pitch.scala.title=メモ: Scalaファイルサポート
micro-pitch.scala.desc=12音または7音のScala (SCL) 形式のファイルをMicro-pitchデバイスにドラッグして取込むことが可能です。 \n\n12音スケールの場合、全ノートに直接適用します。7音スケールの場合、右列 (ルートCの白鍵ノート) に7音が適用され、残りに5つのノートにはその補完値が適用されます。
multi-note.enable.desc=このノートを有効にします。
multi-note.pitch.desc=入力ノートのピッチオフセットを設定します。('0'は入力ピッチのままになります)
multi-note.velocity.desc=入力ノートのベロシティオフセットを設定します。('0'は入力ベロシティのままになります)
note_delay.offs.desc=ノートオフ情報にディレイを適用するかどうかを設定します。 \n\n注意: ノートオフディレイを無効にしている場合、ノートディレイタイムよりも短いノートは発音しません。
note_echo.mute.desc=入力されてくるノート信号を無視します。
note_echo.mode.desc=有効にした場合、ノート長は16分音符に設定します。
note_echo.time.desc=タイムベースのノート長設定です。16分音符モードをオフにした際に使用します。
note_echo.beats.desc=16分音符の数によるノート長設定です。
note_echo.beat_offset.desc=ノート長を少しだけ長く (正数値)、または短く (負数値) スケールします。
note_echo.echos.desc=ノートごとの最大エコー数を設定します。無限リピート無効時にこの設定を使用します。
note_echo.infinity.desc=ノートごとのエコーを無限に繰り返します。
note_echo.velocity.desc=各エコーの開始ベロシティの固定値です。
note_echo.mono.desc=最後の入力ノートのみを繰り返します。
note_echo.stop.desc=クリックをして、全ノートとエコーを切ります。
note_echo.display.title=出力ビジュアライゼーション
note_echo.display.desc=このデバイスのノート出力を反映します。(オリジナルノートとそのエコーを含む）
note_echo.fb_mode.desc=ノートとフィードバックパラメーター (紫色) の相互作用方法です: \nX → パラメーター値を乗算 \n+ → パラメーター値を加算
note_echo.feedback_time.desc=連続するエコー間の時間変化です。
note_echo.feedback_time_random.desc=連続するエコー間の時間変化のランダム度合いです。
note_echo.feedback_gate.desc=連続するエコー間のノート長変化です。
note_echo.feedback_velocity.desc=連続するエコー間のベロシティーオフセットです。
note_echo.feedback_pitch.desc=連続するエコー間のピッチオフセットです。 \n\nメモ: オリジナルノートピッチは (下の) 最大と最小のフィードバックピッチ設定の間にある場合、この値はトランスポーズ量として連続するエコーのピッチシフトに適用します。エコーピッチが最大/最小に達した場合、オリジナルノートピッチに戻るようにシフトします。
note_echo.feedback_pitch_min.desc=フィードバックトランスポーズの最高ピッチです。
note_echo.feedback_pitch_max.desc=フィードバックトランスポーズの最低ピッチです。
note_filter.low_note.desc=通過可能な最低ノートです。
note_filter.high_note.desc=通過可能な最高ノートです。
note_filter.low_velocity.desc=通過可能な最低ベロシティです。
note_filter.high_velocity.desc=通過可能な最高ベロシティです。
note_harmonizer.harmony_path.title=ハーモニーソース
note_harmonizer.harmony_path.desc=入力ノート信号のパスです。 \n\nこのソースからのすべての有効ノートは大まかなキー構造として分析され、どのノートをこのデバイスに到着させるのかを適切に調節します。
note_harmonizer.incoming_key.desc=入力ノートのキーに合わせてパラメーターを設定します。ハーモニーの再形成に役立ちます。
note_latch.mode.desc=使用中のラッチ動作:\n​by Chord → ノートをオンにしたまま演奏\n​by Toggle → 同じノートの演奏時にオンとオフを繰り返す\n​by Velocity → スレッショルド設定に達したノートをオンにしたまま\n
note_latch.threshold.desc=ベロシティスレッショルドです (ベロシティモード時)。ベロシティが上回ったノートはラッチされ、下回ったノートは無視、あるいは (そのピッチがラッチ済みの場合は)ノートオフを扱います。
note_latch.mono.desc=一度に1つのノートのみラッチされます。(最終ノート優先)
note_latch.transport_stop.desc=トランスポートが停止する度にラッチ/保持されたノートをすべて終了にします。
note_latch.kill.desc=クリックでラッチ/保持されたノートをすべて終了にします。
note_length.mode.desc=有効にした場合、ノート長は16分音符に設定します。
note_length.time.desc=タイムベースのノート長設定です。16分音符モードをオフにした際に使用します。
note_length.beats.desc=16分音符の数によるノート長設定です。
note_length.beat_offset.desc=ノート長を少しだけ長く (正数値)、または短く (負数値) スケールします。
note_length.trigger.desc=ノートトリガー時: \n押した際 → ノートオン情報でノートオンをトリガーします。 \n離した際 → ノートオン情報でノートオフをトリガーします。
note_length.velocity_fixed.desc=(ノートトリガーのベロシティの代わりに) すべてのノートに固定のベロシティ設定を適用します。
note_length.velocity_level.desc=新規ノートで使用する固定のベロシティ値です。
note_pitch_shifter.octave.desc=オクターブ(12半音)単位のピッチシフト量です。
note_pitch_shifter.semitone.desc=半音 (しばし"st"、または音楽的な半音) 単位のピッチシフト量です。
note_pitch_shifter.fine.desc=ピッチシフトの微調節です。単位は半音に対してのパーセンテージになります。 \n\n設定例: \n• '0.00 %' 設定はシフト無し \n• '+50.0 %' 設定は50セントアップ \n• '-66.7 %' は2/3半音下
note_velocity.input_middle.desc=入力ベロシティレベルに対するミドルベロシティ出力レベル設定です。
note_velocity.output_minimum.desc=最小入力ベロシティ ('1') を受信した際の出力ベロシティです。
note_velocity.output_middle.desc=中間値の入力ベロシティを受信した際の出力ベロシティです。
note_velocity.output_maximum.desc=最大入力ベロシティ ('127') を受信した際の出力ベロシティです。
note_velocity.random.desc=(Lo、Mid、Hi設定によって) 定義された出力範囲のランダム度合いです。
note_velocity.display.title=グラフィカルインターフェイス
note_velocity.display.desc=クリック可能3つの円: "L" (Lo)、"M" (Mid) と"H" (Hi) でベロシティ特性を設定します。上下のドラッグで入力ベロシティに対する出力ベロシティを設定します。"M"ラベルは左右のドラッグで、ベロシティ入力値に対する出力値を設定します。 \n\n画面の水平方向は入力ベロシティで垂直方向は出力ベロシティです。
transposition_map.key.desc=ピッチクラストランスポーズのルートキーです。
transposition_map.shift.desc=ピッチクラストランスポーズ前の、半音単位の入力ノートオフセットです。
transposition_map.octave.desc=ノートのオクターブ選択方法です: \nAuto/自動 → 一番近いのを選択 \nUp/上 → 次のオクターブ上を優先 \nDown/下 → 次のオクターブ下を優先
transposition_map.transform.title=トランスフォームグリッド [マトリクス]
transposition_map.transform.desc=12x12 のグリッドで、入力ピッチクラス (左右) と出力ピッチクラス (上下) を示し、入力ピッチのトランスポーズされた出力の設定をします。


#reverb.
reverb-device.mode.desc=初期反射のための空間シミュレーションの種類です。
reverb-device.size.desc=初期反射のための空間シミュレーションの相対的なサイズです。
reverb-device.predelay.desc=初期反射発生するまでの時間です。
reverb-device.difussion.desc=初期反射の分散に対する滑らかさです。
reverb-device.buildup.desc=離散反射の分散に対する滑らかさです。
reverb-device.time.desc=リバーブの継続時間です。
reverb-device.late_mix.desc=後半全体に対するレベルスケーラーです。
reverb-device.low_freq.desc=低域のクロスオーバー周波数です。
reverb-device.low_factor.desc=リバーブタイムに対する低域の相対的なリバーブタイムです。
reverb-device.high_freq.desc=高域のクロスオーバー周波数です。
reverb-device.high_factor.desc=リバーブタイムに対する高域の相対的なリバーブタイムです。
reverb-device.tank_fx_chain.desc=反射ブロック内のデバイス/プラグインを挿入するためのチェーンです。
reverb-device.display.title=スペクトラムディスプレイ
reverb-device.display.desc=出力されるオーディオのスペクトラム表示です。ドッド操作で低域 ("L") と高域 ("H") のそれぞれの周波数 (左右) と相対的なリバーブタイム (上下) の調節をします。


#routing.
audio_receiver.gain.desc=受信された信号に適用するゲインです。
audio_receiver.mix.desc=デバイス出力が受信した信号量です。(デバイス入力されたドライ信号と混ざります)
note_receiver.mute_input.desc=デバイスに着信したノートをバイパスします。
note_receiver.mute_source.desc=ノートソースパスを経由して受信したノートをバイパスします。


#synth.
fm-4.oscillator_enable.desc=三角波オシレーターを有効にします。
fm-4.oscillator_ratio.desc=入力されてくるノートピッチ信号を基準にしたオシレーターピッチ設定です。 \n\nメモ: 整数値 (倍音) のみを設定する場合は、小数点の左側をドラッグ操作します。
fm-4.oscillator_frequency_offset.desc=オシレーターの周波数をシフトします。
fm-4.oscillator_modulation.desc=オシレーターから発する全モジュレーション信号のスケーラーです。
fm-4.noise_enable.desc=ノイズジェネレーターユニットを有効にします。
fm-4.noise_cutoff.desc=ノイズジェネレーターユニットの12dB/oct ローパスフィルターのカットオフ周波数です。
fm-4.noise_reso.desc=ノイズジェネレーターユニットの12dB/oct ローパスフィルターのレゾナンスです。
fm-4.noise_drive.desc=ポストフィルターに適用するドライブです。
fm-4.noise_modulation.desc=このノイズジェネレーターユニットから発する全モジュレーション信号のスケーラーです。
fm-4.mix_level.desc=この要素からオーディオミックスバスに送る量です。
fm-4.matrix.title=モジュレーションマトリクス
fm-4.matrix.desc=FM量を扱うマトリクス表です。 \n\n縦列はソースで、ラベルは個々のオシレーター (数字) とノイズジェネレーターユニット ("N") を示します。 \n\n横列はディスティネーションで、4つのオシレーターがターゲットになります。 \n\nすべての設定値は、ソースユニットの"Mod" (有効) 値にスケールされます。
phase-4.osc_enable.desc=オシレーターを有効にします。
phase-4.osc_phase.desc=オシレーターのフェイズオフセットです。シェイピング (フェイズディストーション) の適用に影響します。
phase-4.osc_algo.desc=シェイプが調節された際に通過するソース波形とパスを決定します:
phase-4.osc_formant.title=フォルマント [倍音 1 (基音) ~ 9]
phase-4.osc_formant.desc=波形内に追加したサイン周期として倍音を挿入します。
phase-4.osc_ratio.title=ピッチレシオ [0 ~ 99 : 1 ~ 99]
phase-4.osc_ratio.desc=オシレーターピッチを分子と分母のペアでスケールします。 \n\n設定例: \n• '1:1' 変更はありません。 \n• '6:1' 6倍 (600%) に倍算します。 \n• '1:4' 25% (2オクターブ下) にスケールダウンします。 \n• '4:3' およそ 133% (純正律の完全4度上) に設定します。 \n• '0:x' ピッチバス出力をゼロにして、周波数オフセットとモジュレーション信号の入力のみをコントロールします。
phase-4.osc_kbt.desc=入力されたノートのピッチをオシレーターのピッチバスに追加します。
phase-4.osc_freq.desc=キーボードトラッキングが無効の際のオシレーターチューニングです。
phase-4.osc_pitch_offset.desc=オシレーターのピッチをシフトします。
phase-4.osc_stereo.desc=右チャンネルの周波数オフセットを逆に適用します。
phase-4.osc_freq_offset.desc=オシレーターの周波数をシフトします。
phase-4.osc_shape.desc=フェイズディストーションの適用量です。現在のアルゴリズムの相対的なポジションとして解釈できます。
phase-4.osc_order.desc=有効にした場合、フェイズディストーションの前にフェイズモジュレーションを適用します。
phase-4.osc_mod.desc=全体のフェイズモジュレーション量です。全オシレーターの設定をスケーリングします。
phase-4.osc_r_mod.desc=R (赤) オシレターからこのオシレーターへのフェイズモジュレーションの相対的な深さです。
phase-4.osc_y_mod.desc=Y (黄) オシレターからこのオシレーターへのフェイズモジュレーションの相対的な深さです。
phase-4.osc_b_mod.desc=B (青) オシレターからこのオシレーターへのフェイズモジュレーションの相対的な深さです。
phase-4.osc_m_mod.desc=M (赤紫) オシレターからこのオシレーターへのフェイズモジュレーションの相対的な深さです。
phase-4.osc_volume.desc=このオシレーターからオーディオバスに送られるレベルです。
phase-4.filter_feedback.desc=フィルター出力からその入力に適用されるフィードバックです。
phase-4.filter_drive.desc=プリフィルターに適用するゲイン量です。
phase-4.filter_r_mod.desc=R (赤) オシレターからこのオシレーターへのフィルターフリクェンシーモジュレーションの深さです。
phase-4.filter_y_mod.desc=Y (黄) オシレターからこのオシレーターへのフィルターフリクェンシーモジュレーションの深さです。
phase-4.filter_b_mod.desc=B (青) オシレターからこのオシレーターへのフィルターフリクェンシーモジュレーションの深さです。
phase-4.filter_m_mod.desc=M (赤紫) オシレターからこのオシレーターへのフィルターフリクェンシーモジュレーションの深さです。
phase-4.global_shape.desc=全オシレーターに適用する相対的なシェイピング量です。
phase-4.global_mod.desc=全オシレーターに適用する相対的なフェイズモジュレーション量です。
phase-4.global_xy.title=グローバル XY パッド [インターフェイス]
phase-4.global_xy.desc=円ラベル"4"は、XとY軸上で全体のシェイプとモジュレーションを操作します。 \n\n画面上では個々のオシレーターのシェイプとモジュレーションを各々設定できます。その際の最大設定値は"4"の設定で、"4"はこれらのパラメーターを相対的に扱います。
polymer.osc_slot.title=オシレータースロット [7モデル]
polymer.osc_slot.desc=オシレーター設定です。 \n\nヘルプ画面を下にスクロールすることで、ヘッダーで選択したオシレーターモデルに関する解説にアクセスします。
polymer.filter_slot.title=フィルタースロット [5モデル]
polymer.filter_slot.desc=フィルター設定です。 \n\nヘルプ画面を下にスクロールすることで、ヘッダーで選択したフィルターモデルに関する解説にアクセスします。
polymer.aeg_slot.title=エンベロープスロット [4モデル]
polymer.aeg_slot.desc=エンベロープ設定です。 \n\nヘルプ画面を下にスクロールすることで、ヘッダーで選択したエンベロープモデルに関する解説にアクセスします。
polymer.sub_sync.title=サブオシレーターリトリガー [トグル]
polymer.sub_sync.desc=メインオシレーターをサブオシレーターピッチにハードシンクします。
polymer.sub_blend.title=サブブレンド [0.00 ~ 100 %]
polymer.sub_blend.desc=メインオシレーター ('0 %') とサブオシレーター ('100 %') の混ざり具合を設定します。
polymer.sub_wave.title=サブオシレーター波形 [様々な選択肢]
polymer.sub_wave.desc=出力波形を選択します: \nSine → サイン波 \nHalf-sine → 整流サイン波 \nTriangle → 三角波 \nPulse 50% → 矩形波Square wave \nPulse 25% → 4次倍音を持つパルス波
polymer.sub_octave.title=サブオシレーターオクターブ [様々な選択肢]
polymer.sub_octave.desc=オクターブによるピッチディチューン設定です: \n0 → オクターブシフト無し \n-1 → 1オクターブ下 (8vb) \n-2 → 2オクターブ下 (15mb)
polymer.noise_blend.title=ノイズブレンド [0.00 ~ 100 %]
polymer.noise_blend.desc=メイン+サブオシレーター ('0 %') とノイズジェネレーター ('100 %') の混ざり具合を設定します。
polymer.feg_to_subnoise.title=サブとノイズにFEGを適用 [切替]
polymer.feg_to_subnoise.desc=フィルターエンベロープジェネレーター (FEG) をサブオシレーターとノイズジェネレーター出力に適用します。
polymer.high-pass.title=ハイパスカットオフ [19.4 ~ 33.5 kHz]
polymer.high-pass.desc=不要な低域を取り除くための周波数設定です。
polysynth.osc_pitch.desc=オシレーターのピッチをシフトします。
polysynth.osc_shape.desc=メインのノコギリ波 ('50 %') と1オクターブ上のパルス波 ('0 %')、あるいはパルスワイズ制御された1オクターブ上のノコギリ波 ('100 %') の混ざり具合を設定します。
polysynth.osc_sub.desc=基礎波形 ('0 %') と1オクターブ下のパルス波 ('100 %') の混ざり具合を設定します。
polysynth.osc_sync.desc=(無音の) マスターシンクオシレーターのセミトーンオフセットです。ティンバーシフト効果を生み出します。
polysynth.osc_spread.desc=全ユニゾンボイスの全体の広がりに使用します。
polysynth.osc_width.desc=このオシレーターのユニゾンボイスのステレオ広がりです。
polysynth.osc_oct.desc=オルガン表記のオクターブオフセットです。8' はオリジナルオクターブ、16' 1オクターブ下など
polysynth.osc_pw.desc=(シェイプ設定が50%以外の場合の) サブノコギリ波とパルス波の幅設定です。サブパルス波のフェイズオフセットとしても機能します。
polysynth.osc_sub_pw.desc=サブパルス波の幅 (パルスワイズ) コントロールです。
polysynth.osc_retrig.desc=ノートトリガーごとにゼロフェイズから再スタートします。
polysynth.osc_voices.desc=ノート演奏ぼボイストリガー数です。
polysynth.osc_pan.desc=ステレオパンニングポジションです。
polysynth.mix_blend.desc=オシレーターの組み合わせです:
polysynth.mix_mix.desc=オシレーター1と2間のブレンドポジションです。
polysynth.mix_noise.desc=オシレーター ('0 %') とホワイトノイズジェネレーター ('100 %') の混ざり具合です。
polysynth.mix_filt_fm.desc=ミックスセクションからの（オーディオレートでの) フィルターフリクェンシーモジュレーション量です。
polysynth.mix_hpf.desc=ハイパスフィルターコンポーネントのカットオフ周波数です。
polysynth.mix_hpf_mode.desc=ハイパスフィルターコンポーネントのモードです:
polysynth.mix_hpf_reso.desc=ハイパスフィルターコンポーネントのレゾナンスです。
polysynth.mix_drive.desc=フィルターセクション前に適用するゲインです。
polysynth.mix_feedback.desc=フィルターセクション直前に適用するフィードバックです。
polysynth.filter_shaper.desc=ポストフィルターに適用するシェイピング量です。
polysynth.filter_shaper_mode.desc=シェイピングの適用方法です:\n​OFF → エフェクトオフ\nSOFT → ソフトクリッピング\n​SINE → サイン波形シェイピング\n​2ND → 2次倍音強調\n​HYST → ゼロ付近に装飾を追加\n​RECT → 整流バージョンをブレンド\n​FOLD → スレッショルドで折り返し\n
sampler.env_mode.desc=アンプリチュードエンベロープの種類です:\n​AHDSR → 追加サスティンとループを装備したマルチステージエンベロープ\nShot → サンプル開始から終了までのワンショット再生\n
sampler.env_fade-in.desc=無音 (サンプル開始時間) からフルアンプリチュードまでのランプ時間です。
sampler.env_fade-out.desc=フルアンプリチュードから無音 (サンプル終了時間) までのランプ時間です。 
sampler.zparams_modulators.title=ゾーンパラメーター 1、2、３
sampler.zparams_modulators.desc=[マルチサンプルモード] 現在トリガーされているゾーンのパラメーター値に対するモジュレーションソースです。

#the_grid.
the_grid.timebase.desc=レートに使用する単位です。
the_grid.length.desc=現在のタイムベースに従ったデバイスフェイズ信号の波長です。
the_grid.offset.desc=タイムベース単位によるタイミングオフセットです。出力を早く (正数値) または遅く (負数値) します。
the_grid.shuffle.desc=トランスポートのグルーブ (有効の場合) をデバイスのフェイズ信号に適用します。
the_grid.free-run.desc=トランスポートの状況に関わらず、継続動作します。
the_grid.jellybeans.title=グリッドオーバービューディスプレイ
the_grid.jellybeans.desc=現在読み込まれているグリッドパッチの概要表示とクリック操作をします。(ディスプレイやシーケンスと同様) インターフェイスモジュールは黒で表示され、その他の全モジュールは各々の色設定で表示されます。画面のクリックでグリッドエディターウィンドウが表示され、もう一度クリックすることで閉じます。現在の表示領域は青色のビューポートで囲われ、ビューポートのクリック&ドラッグで、グリッドエディターの表示領域の位置を変更できます。

fx_grid.note_path.title=ノートソース
fx_grid.note_path.desc=入力されてくるノート信号のパスです。
#poly_grid


#utility.
dc_offset.dc.desc=入力信号に値を追加します。 \n\n注意: オーディオ信号パスの場合、このデバイスは同じオーディオバス送られる (異なるアプリケーションからであったとしても) すべてのオーディオ信号に多大な影響を与える可能性があります。従いまして、このデバイスの使用に注意が必要です。
dual_pan.left.desc=左のオリジナル信号にパンニングを適用します。
dual_pan.right.desc=右のオリジナル信号にパンニングを適用します。
dual_pan.law.title=パンロウ [イコールゲインまたはハイブリッド]
dual_pan.law.desc=パンニングが左右のイコールゲイン、あるいはより滑らかなハイブリッド方程式で処理されます。
test_tone.freq.desc=サイン波の周波数です。
test_tone.gain.desc=サイン波のレベルです。
time_shift.ms.desc=タイムのシフト量です。正数値は入力信号にディレイ (遅延) を加え、負数値はタイミングを前にします。
time_shift.samples.desc=タイムのシフト量です。正数値は入力信号にディレイ (遅延) を加え、負数値はタイミングを前にします。
time_shift.mode.title=単位 [ミリ秒またはサンプル数]
time_shift.mode.desc=タイムシフト設定に使用する単位です。
tool.left-.desc=左チャンネルを反転します。
tool.right-.desc=右チャンネルを反転します。
tool.swap.desc=左右チャンネルを入れ替えます。(その他の全設定後に適用します)
tool.amp.desc=適用されたゲインです。
tool.pan.desc=出力のステレオパンポジションです。
tool.width.desc=入力信号の相対的な広がりです。 (設定値 '100 %' は変化無しです)
