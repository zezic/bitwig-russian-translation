module-category.I/O.desc=このデバイスに入出力する信号に使用します。
module.gate_in.desc=ノートゲート信号を供給します。
module.phase_in.desc=デバイスのフェイズ信号を供給します。
module.pitch_in.desc=ノートピッチ信号を供給します。
module.velocity_in.desc=ノートベロシティ信号を供給します。
module.gain_in.desc=ノートゲインエクスプレッションを供給します。
module.pan_in.desc=Sノートパンエクスプレッションを供給します。
module.pressure_in.desc=ノートポリプレッシャー信号を供給します。
module.timbre_in.desc=ティンバーエクスプレッションを供給します。S
module.audio_in.desc=オーディオ信号を供給します。
module.audio_out.desc=デバイスの出力バスへのパスです。
module.audio_sidechain.desc=選択したプロジェクトパスからのオーディオ信号を供給します。
module.hw_in.desc=S選択した外部パスからのオーディオ信号を供給します。
module.hw_out.desc=選択したオーディオ出力バスへのパスです。
module.cv_in.desc=選択した外部パスからのコントロール電圧(CV)信号を供給します。
module.cv_out.desc=選択した外部CVバスへのパスです。
module.cv_pitch_out.desc=選択したCV出力ピッチバスへのパスです。
module.key_on.desc=指定したノートチャンネルからのノートゲート信号を供給します。
module.keys_held.desc=現在おさえている鍵盤数です。
module.transport_playing.desc=アプリケーションの再生状態を供給します。
module.modulator_out.desc=入力された信号をモジュレーター信号として利用可能にします。

module-category.Display.desc=ノートテイクと視覚化に使用します。
module.label.desc=大型テキストウィジェットです。
module.comment.desc=小型テキストウィジェットです。
module.oscilloscope.desc=デュアルトレース仕様のオシロスコープです。
module.spectrum.desc=最大4つの信号に対応したスペクトログラムです。
module.vu_meter.desc=アベレージメーターです。
module.xy.desc=2次元コントロールパッドです。
module.value_readout.desc=様々なドメイン用のステレオ数値表示です。

module-category.Phase.desc=ラップされたフェイス信号の出力に使用します。
module.phasor.desc=オシレータータイプのコントロールを備えたフェイズシグナルジェネレーターです。
module.ø_bend.desc=カーブ曲線をフェイズ信号にインポーズします。
module.ø_pinch.desc=S字カーブ曲線をフェイズ信号にインポーズします。
module.ø_reset.desc=トリガーごとに入力されたフェイズ信号を '0' にリセットします。
module.ø_scaler.desc=入力されたフェイズ信号を相対的に速くまたは遅くスケールします。
module.ø_reverse.desc=適切なフェイズ信号を反転させます。
module.ø_wrap.desc=信号をフェイズ範囲にラップします。
module.pitch_→_ø.desc=ピッチ信号のオクターブをフェイズ信号としてラップします。
module.ø_counter.desc=連続したトリガー信号を個々のフェイズ値に変換します。
module.ø_formant.desc=入力された信号をおよそ '0.5' に増幅します。
module.ø_lag.desc=フェイズ範囲内のラグプロセッサーです。
module.ø_mirror.desc=入力されたフェイズ信号を増幅し、反映します。
module.ø_shift.desc=入力されたフェイズ信号をオフセットします。
module.ø_sinemod.desc=入力されたフェイズ信号をサイン波でモジュレートします。
module.ø_skew.desc=入力されたレベルを'0.5' にランプする設定です。
module.ø_sync.desc=入力されたフェイズ信号を増幅し、ラップします。
module.ø_split.desc=最大8つの出力ポートにフェイズ信号を等しく分配します。

module-category.Data.desc=シーケンサーおよびその他のルックアップです。
module.gates.desc=イベントシーケンサーです。
module.pitches.desc=ものピッチシーケンサーです。
module.steps.desc=ステップシーケンサー、ルックアップテーブルなどです。
module.triggers.desc=サイクルごとにNトリガーを均等に生成します。
module.probabilities.desc=確率を用いたイベントシーケンサーです。
module.ø_pulse.desc=パルスルックアップモジュールです。
module.ø_saw.desc=ソールックアップモジュールです。
module.ø_sine.desc=サインルックアップモジュールです。
module.ø_triangle.desc=トライアングルルックアップモジュールです。
module.ø_window.desc=コサインウィンドウモジュールです。 
module.array.desc=記録可能なルックアップテーブルです。

module-category.Oscillator.desc=周期的なシグルナジェネレーターです。
module.pulse.desc=幾何学的なパルスオシレーターです。
module.sawtooth.desc=幾何学的なノコギリ波オシレーターです。
module.sine.desc=サイン波オシレーターです。
module.triangle.desc=幾何学的な三角波オシレーターです。
module.wavetable.desc=ウェーブテーブルオシレーターです。特別なユニゾンモードと処理オプションを装備します。
module.sub.desc=サブオシレーターです。
module.phase-1.desc=フェイズディストーション(PD)オシレーターです。
module.swarm.desc=ユニゾンオシレーターです。
module.sampler.desc=Bitwigのサンプルデバイスのモジュールバージョンです。

module-category.Random.desc=非周期的でランダムなシグナルジェネレーターです。
module.noise.desc=ホワイト/ピンクノイズジェネレーターです。
module.s/h_lfo.desc=フリー/ビートシンクのランダムオシレーターです。
module.chance.desc=ランダムロジックに重きをおいたシグナルジェネレーターです。
module.dice.desc=均一乱数ジェネレーターです。

module-category.LFO.desc=周期的な低周波オシレーターです。
module.lfo.desc=フリー/ビートシンクの幾何学オシレーターです。
module.clock.desc=ヘルツ(Hz) 単位で設定するフェイズシグナルジェネレーターです。
module.transport.desc=同期されたフェイズシグナルジェネレーターです。

module-category.Envelope.desc=エンベロープの作成は変更に使用します。
module.adsr.desc=アンプリファイアを装備した4段階のエンベロープです。
module.ad.desc=アンプリファイアを装備した2段階、ループ可能のエンベロープです。
module.ar.desc=アンプリファイアを装備した3段階のエンベロープです。
module.pluck.desc=アンプリファイアを装備した撥弦スタイルのエンベロープです。
module.follower_rf.desc=セグメントタイムを持つエンベロープエクストラクターです。
module.slope_↗.desc=信号の立ち上がりのスロープシェイパーです。
module.slope_↘.desc=信号の立ち下がりのスロープシェイパーです。
module.follower.desc=対称的なエンベロープエクストラクターです。

module-category.Filter.desc=周波数依存のアンプリファイヤーです。
module.low-pass_ld.desc=レゾナントローパス仕様のラダーフィルターです。
module.low-pass_sk.desc=レゾナントローパス仕様のサイレンキーフィルターです。
module.svf.desc=高レゾナントのマルチモードフィルターです。
module.xp.desc=15種のフィルター構成を持つラダー親和デバイスです。
module.high-pass.desc=可変スロープを持つハイパスフィルターです。
module.low-pass.desc=可変スロープを持つローパスフィルターです。
module.comb.desc=レゾナンスを備えたコムフィルターです。

module-category.Shaper.desc=リニアとノンリニアのウェーブシェイパーです。
module.chebyshev.desc=ハーモニクスをターゲットにできるノンリニアシェイパーです。
module.distortion.desc=ジェントルディストーションです。
module.quantizer.desc=信号の解像度を低減します。
module.rectifier.desc=正と負の信号エクスカーションを個別にスケールします。
module.saturator.desc=ラウド/クワイエット設定 + バイポーラースキューを備えたウェーブシェイパーです。
module.wavefolder.desc=各サイクルで自己反映します。
module.curve.desc=定義された入力と出力レベルをリマップします。

module-category.Delay.desc=フィードバックが可能のディレイ機能です。
module.delay.desc=シンプルなディレイです。
module.long_delay.desc=時間または拍単位で設定するディレイです。フィードバック接続が可能です。
module.mod_delay.desc=モジュレーションディレイです。内部フィードバックループを備えます。
module.all-pass.desc=ディレイとして構成されたオールパスフィルターです。
module.recorder.desc=信号キャプチャーデバイスです。

module-category.Mix.desc=信号ルーターとミキサーです。
module.blend.desc=2つの入力信号のためのクロスフェーダーです。
module.mixer.desc=最大6チャンネルのステレオミキサーです。
module.pan.desc=パンニングコントロールです。
module.stereo_width.desc=信号の(ステレオ)幅をコントロールします。
module.select.desc=2つの入力信号のためのセレクターです。
module.toggle.desc=信号ゲートです。
module.merge.desc=最大で8つの入力ポートを扱うルーターです。1つまたは隣接した2つの入力信号を同時に送ります。
module.split.desc=最大で8つの出力ポートを扱うルーターです。1つまたは隣接した2つの入力信号を同時に送ります。
module.lr_gain.desc=信号の左右チャンネルを個別に扱うゲインコントロールです。
module.stereo_merge.desc=信号を左/右とミッド/サイドコンポーネントで構築します。
module.stereo_split.desc=信号を左/右とミッド/サイドコンポーネントに分離します。

module-category.Level.desc=アンプリチュードベースの機能、値とコンバーターです。
module.level.desc=デシベル (dB) で設定された定数です。
module.value.desc=パーセンテージ (%) で設定された定数です。
module.attenuate.desc=シグナルアッテネーターです。
module.bias.desc=シグナルオフセットです。
module.gain_-_db.desc=デシベルゲインコントロールです。
module.gain_-_vol.desc=ボリュームゲインコントロールです。
module.velo_mult.desc=ベロシティコントロールのスケーラーです。
module.average.desc=シグナルアベレージャーです。
module.bend.desc=信号に変数カーブをインポーズします。
module.clip.desc=シグナルクリッパーです。
module.lag.desc=ラグプロセッサーです。
module.level_scaler.desc=入力されたユニポーラー信号を定義されたデシベル範囲にスケールします。
module.value_scaler.desc=入力されたユニポーラー信号を定義された値範囲にスケールします。
module.am/rm.desc=ドライキャリア、アンプリチュードモジュレーション、リングモジュレーション間のクロスフェードをします。
module.hold.desc=レベルサスティナー
module.sample_/_hold.desc=レベルサンプラー
module.bi→uni.desc=バイポーラー信号をユニポーラーに変換します。
module.uni→bi.desc=ユニポーラー信号をバイポーラーに変換します。

module-category.Pitch.desc=ピッチ信号の出力と処理に使用します。
module.pitch.desc=ピッチとして設定された定数です。
module.octaver.desc=オクターブピッチシフターです。
module.ratio.desc=レシオベースのピッチシフターです。
module.transpose.desc=セミトーンピッチシフターです。
module.pitch_quantize.desc=指定または現在おさえているピッチクラスのための入力された信号をクォンタイズします。
module.by_semitone.desc=正確なセミトーンに入力された信号をクォンタイズします。
module.pitch_scaler.desc=定義されたピッチ範囲に入力されたユニポーラー信号をクォンタイズします。
module.zero_crossings.desc=ラフピッチエスティメーター (推定器) です。

module-category.Math.desc=算術演算子と関数です。
module.constant.desc=定数に使用する大きな正確な数字です。
module.add.desc=2つの信号を追加します。
module.divide.desc=1つの信号を別に分割します。
module.multiply.desc=2つの信号を乗算します。
module.subtract.desc=2つの信号を減算します。
module.abs.desc=信号をその大きさと符号成分に分離します。
module.ceil.desc=すべての10進数を次に整数に切り上げます。
module.floor.desc=すべての10進数を前の整数に切り捨てます。
module.minmax.desc=2つの信号の現在の高い値と低い値を提供します。
module.quantize.desc=信号に設定されたステップサイズを使用します。
module.round.desc='0.5'未満の小数値をすべて切り捨て、'0.5'以上の小数値はすべて10進数の整数値に切り上げます。
module.product.desc=すべての入力を乗算します。
module.sum.desc=すべての入力を加算します。
module.db_→_lin.desc=デシベル値をリニアアンプリチュードに変換します。
module.exp.desc=オイラー数 € の結果を供給して入力値を引き上げます。
module.lin_→_db.desc=リニアアンプリチュードをデシベル値に変換します。
module.log.desc=入力値に自然対数を供給します。
module.power.desc=信号を別の信号のパワーまで引き上げます。

module-category.Logic.desc=ロジック信号を出力するコンパレーターなどです。
module.button.desc=ロジック信号を送る切替です。
module.trigger.desc=ロジック信号を送るモメンタリータイプの切替です。
module.clock_divide.desc=Nパルスごとにトリガーをするクロック信号を分割します。
module.clock_quantize.desc=次のクロックパルスまで、トリガー信号をディレイさせます。
module.gate_length.desc=トリガー時にデュレーションを設定するロジックパルスを生成します。
module.gate_repeat.desc=入力が高い時にデュレーションを設定するロジックパルスを切り返し生成します。
module.logic_delay.desc=高または低ロジック状態時にディレイをします。
module.latch.desc=すべてのトリガー信号は出力状態の切り替えまたは設定に使用します。
module.n-latch.desc=すべてのトリガー信号は複数の出力状態の切り替えに使用します。
module.\=.desc=2つの信号がおよそ同じかどうかを評価するコンパレーターです。
module.≥.desc=信号が別の信号と同じかそれ以上かどうかを評価するコンパレーターです。
module.>.desc=信号が別の信号以上かどうかを評価するコンパレーターです。
module.≤.desc=信号が別の信号と同じかそれ以下かどうかを評価するコンパレーターです。
module.<.desc=信号が別の信号以下かどうかを評価するコンパレーターです。
module.≠.desc=2つの信号が同じではないかどうかを評価するコンパレーターです。
module.not.desc=ロジックインバーターです。
module.and.desc=全入力が正しいかどうかを求めるロジックゲートです。
module.or.desc=任意の入力が正しいかどうかを求めるロジックゲートです。
module.xor.desc=1つの入力が正しいかどうかを求めるロジックゲートです。
module.nand.desc=任意の入力が誤りかどうかを求めるロジックゲートです。
module.nor.desc=全入力が誤りかどうかを求めるロジックゲートです。
module.xnor.desc=全入力が合致しているかどうかを求めるロジックゲートです。
