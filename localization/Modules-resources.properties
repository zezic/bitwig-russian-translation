#i/o.
i/o.signal_in.desc=Signal to be sent
i/o.out.desc=Signal received
i/o.chooser.desc=Signal path to be used
i/o.affect_lifetime.desc=When device is polyphonic, keeps voices alive while this module is active
i/o.smoothing.desc=Applies smoothing to this signal
i/o.cv_mode.title=Mode [AC or DC]
i/o.cv_mode.desc=Whether your audio interface is using direct current (DC) or alternating current (AC)
i/o.cv_smooth.desc=Amount of time being averaged to smooth the signal
i/o.cv_smooth_filt.desc=Cutoff frequency for a 4-pole low-pass filter applied to the incoming CV signal
i/o.cv_gain.desc=Gain applied to the incoming CV signal

gate_in.out.desc=Note gate signals received by the device
phase_in.out.desc=Phase signal, as configured by the device
phase_in.note.title=Note: Settings are in the device Inspector
phase_in.note.desc=All settings for this signal are in the device's Inspector Panel, in the \n"Ø Device Phase" section.
pitch_in.out.desc=Note pitch signals received by the device
pitch_in.note_priority.desc=Whether to prefer to Lowest or Highest (pitch-wise) notes, the Last notes played (time-wise), or to use the device's current setting (Default)
pitch_in.note_priority_curr.title=Current Note Priority
pitch_in.note_priority_curr.desc=Indicates a Note Priority setting other than Default
velocity_in.out.desc=Note velocity signals received by the device
gain_in.out.desc=Note gain expression signals received by the device
pan_in.out.desc=Note pan expression signals received by the device
pressure_in.out.desc=Unipolar note poly pressure signals received by the device (or if channel aftertouch is received, those values are applied to all voices)
timbre_in.out.desc=Bipolar timbre expression signals received by the device
timbre_in.relative.desc=Offsets the current signal to a zero value from note start
audio_in.out.desc=Signal received from the device's audio in buss
audio_out.in.desc=Signal sent out of the device's audio buss
audio_out.threshold.desc=Threshold level used to determine if a signal is active
audio_out.timeout.desc=Timeout used to determine if a signal is active
audio_out.clipping.title=Output clipping mode [off, hard, or soft]
audio_out.clipping.desc=Type of clipping applied to the audio output
audio_sidechain.out.desc=Audio signals from a selected project path
audio_sidechain.path.title=Audio Path
audio_sidechain.path.desc=Project path to use
hw_in.out.desc=Audio signals from a selected external path
hw_in.path.title=Audio Path
hw_in.path.desc=Incoming audio hardware path to use
hw_out.in.desc=Signals sent to a selected external path
hw_out.path.title=Audio Path
hw_out.path.desc=Outgoing audio hardware path to use
cv_in.out.desc=Control voltage (CV) signals from a selected external path
cv_in.path.title=Control Voltage Path
cv_in.path.desc=Incoming CV path to use
cv_out.in.desc=Signals sent to a selected external CV output buss
cv_out.path.title=Control Voltage Path
cv_out.path.desc=Outgoing CV path to use
cv_pitch_out.in.desc=Signals sent to a selected external CV output pitch buss
cv_pitch_out.path.title=Control Voltage Pitch Path
cv_pitch_out.path.desc=Outgoing CV pitch path to use
cv_pitch_out.range.desc=Octave range that the incoming signal is scaled to
cv_pitch_out.root.desc=Note that is triggered with a zero value
key_on.out.desc=Note gate signals received by the device for one specified note and channel
key_on.note.desc=Note whose gate signal is provided
key_on.channel.desc=Channel whose note's are tested ('0' for all channels)
key_on.learn.desc=On click, sets the Note and Channel parameters based on the next incoming note
keys_held.out.desc=Number of keys currently active at the device's input
transport_playing.out.desc=High-logic state if the application's transport is playing; low-logic if it is stopped
modulator_out.in.desc=Signals to use for the modulator \n\nNote: Modulator signals run at the application's sample rate and are mono (incoming stereo signals will be summed).
modulator_out.modulator.title=Modulator Out
modulator_out.modulator.desc=For wireless control of parameters


#display.
display.signal_in.desc=Signal to be displayed
display.signal_in1.desc=Signal in 1 for display
display.signal_in2.desc=Signal in 2 for display
display.signal_in3.desc=Signal in 3 for display
display.signal_in4.desc=Signal in 4 for display
display.signal_out1.desc=Signal out 1, passed from the input without change
display.signal_out2.desc=Signal out 2, passed from the input without change
display.out.desc=Signal out, passed from the input without change

comment.comment.title=Comment Display [text]
comment.comment.desc=Display for comment entered in the Inspector Panel
comment.title.title=Title Display [text]
comment.title.desc=Module name, if the user has defined it (in the Inspector Panel), shown in the module's color
comment.entry.title=Comment Entry Area [text]
comment.entry.desc=Entry area for comment(s) to be shown
label.label.title=Label Display [text]
label.label.desc=Module name (set in the Inspector Panel), shown in the module's color
xy.x_out.desc=Signal representing the X position
xy.y_out.desc=Signal representing the Y position
xy.pad.title=XY Control Pad [interface]
xy.pad.desc=For moving the XY pair with one click or touch
xy.x_value.desc=Current X value (also useful for assigning a modulator to it)
xy.y_value.desc=Current Y value (also useful for assigning a modulator to it)
xy.x_bipolar.title=X Bipolar [toggle]
xy.x_bipolar.desc=Sets the range of the x-axis from '-1' to '+1'
xy.y_bipolar.title=Y Bipolar [toggle]
xy.y_bipolar.desc=Sets the range of the y-axis from '-1' to '+1'
oscilloscope.trigger_in.desc=[When in Slow or Fast mode] \nTrigger clears and redraws the module's trace
oscilloscope.mode.title=Mode [slow, fast, or pitch]
oscilloscope.mode.desc=Set the tracking speed to Slow or Fast, or set to follow the device's incoming note Pitch signals
oscilloscope.display.title=Voice Shown [last voice or all voices]
oscilloscope.display.desc=Either display the last voice of each signal, or show the sum of all voices (which can easily go out of range)
value_readout.mode.title=Display Unit [1, dB, st, Hz]
value_readout.mode.desc=The unit used to display the signal. Either raw signal values (1), decibel levels (dB), note pitch and semitones (st), or note pitch and frequency in Hertz (Hz).


#phase.
phase.phase_in.desc=Signal in for phase processing
phase.step_in.desc=Trigger advances to the next step
phase.reset_in.desc=Trigger resets to step 1 when the next clock trigger arrives
phase.pitch_in.desc=Pitch signal input, whose octave will be used to generate a phase out \n\nSome example values: \n• Any C input → '0.000' output \n• Any F♯/G♭ input → '0.500' output \n• A super sharp B input → '0.999' output
phase.out.desc=Phase signal out
phase.gate_out.desc=Gate signal that is high logic ('+1') for the first half of the phase ramp

ø_reverse.stereo-ness.desc=Which channels are phase reversed:
ø_bend.amount.desc=Curve factor used, where '0 %' results in no change, positive values impose a logarithmic-type curve, and negative values impose an exponential one
ø_pinch.amount.desc=S-curve factor used, where '0 %' results in no change, positive values impose a logarithmic-type S-curve, and negative values impose an exponential one
ø_reset.logic_in.desc=Trigger shifts the signal input to zero
ø_reset.reset_pre-cord.desc=Pre-cord connects device's note gate signals to Reset In
ø_scaler.logic_in.desc=Trigger resets the process
ø_scaler.rate.desc=Scales the phase rate by a factor, where '1.0' (100%) represents no change, '2.0' is twice as fast, and '0.33' is roughly one-third the speed
ø_scaler.ratio.title=Scaling Ratio [0 to 99 : 1 to 99]
ø_scaler.ratio.desc=Scales the module's rate as a numerator:denominator pair \n\nSome example settings: \n• '1:1' represents no change. \n• '6:1' is six times faster (600%). \n• '1:4' slows down to 25% (a quarter the original speed, or one phase ramp for every four of the input signal). \n• '0:x' zeroes out the ratio.
ø_counter.step_count.desc=Number of steps to advance thru
ø_formant.amount.desc=Amount of formant shift to apply
ø_lag.amount.desc=Amount of time before the current phase input level is reached
ø_mirror.amount.desc=Amount to shift and then reflect the phase input
ø_shift.amount.desc=Percentage to offset the phase input, with negative values shifting the signal late and positive value moving it earlier
ø_sinemod.depth.desc=Amplitude of the sine modulator signal
ø_sinemod.cycles.desc=Number cycles in the sine modulator signal
ø_sinemod.add.desc=Adds the input signal to the modulated signal
ø_skew.amount.desc=Level of the incoming signal to be remapped to '+0.5'
ø_sync.amount.desc=Amount to shift and then wrap the phase input
ø_split.phase_in.desc=Signal in to be offset across the successive out ports. \n\nFor example, '2' Out Ports will send a signal shifted by 50 % (180 º) to the second out port. And '5' Out Ports would send a signal shifted by 20 % (72 º) to the second out port, by 40 % (144 º) to the third out port, and so on.
ø_split.out1.desc=Phase signal out 1, same as the original input
ø_split.out2and.desc=Phase signal out 2, etc.


#data.
data.phase_in.desc=Drives the module's data lookup
data.logic_out.desc=Gate signal out based on the current phase position
data.pitch_out.desc=Pitch signal out based on the current phase position
data.out.desc=Signal out based on the current phase position
data.phase_track.desc=Pre-cord uses device phase (plus any incoming phase signal) to drive module's phase
data.step_count.desc=Number of steps
data.sharpness.desc=How precise (as opposed to averaged) the waveform is
data.modulator.title=Modulator Out
data.modulator.desc=For wireless control of parameters

gates.steps.title=Steps [toggles]
gates.steps.desc=One toggle for each available step
gates.mode.title=Output Mode [T(rigger) or G(ate)]
gates.mode.desc=For each enabled step, sends a gate signal for either 50% of its duration (trigger) or 100% of its duration, allowing ties when successive steps are enabled (gate)
pitches.steps.title=Steps [pitch sliders]
pitches.steps.desc=One pitch slider for each available step. Light frames surround each C, such as the top, bottom, and center rows. Background colors indicate whether that row houses a natural note (gray) or an accidental (black). \n\nWhen clicking and dragging a pitch slider, holding [SHIFT] disables snapping to semitones, allowing micro-pitches.
pitches.offset.desc=Octave offset for the step display, where '0' keeps middle C at center and '+1' shifts the display up an octave, etc.
pitches.octaves.desc=Note range shown at one time on the module
steps.steps.title=Steps [sliders]
steps.steps.desc=One value slider for each available step
steps.bipolar.desc=Sets the range of each step from '-1' to '+1'
steps.interpolation.desc=Crossfades adjacent values based on phase input (instead of only outputting set values)
probabilities.logic_out.desc=Gate signal out based on the probability of the step at the current phase position
probabilities.steps.title=Steps [sliders]
probabilities.steps.desc=One slider for the probability of each available step. This means that a step set to '100 %' will always trigger, a step set to '0 %' will never trigger, a step set to '50 %' will trigger half of the time, etc.
ø_pulse.pw.desc=Percentage of each cycle that the pulse wave stays negative
array_module.read_in.desc=Position sent to output
array_module.write_in.desc=Position written to
array_module.value_in.desc=Signal to be captured
array_module.gate_in.desc=Trigger copies Value to the Write position
array_module.size.desc=Length (number of addresses) used by the array
array_module.normalize.desc=Uses true phase signals (of range '0' to almost '+1') for Read and Write in ports. \n\nOtherwise "index" values are expected (of range '0' to almost the array's Size value).


#oscillator.
oscillator.gate_in.desc=Trigger restarts the oscillator's phase
oscillator.reset_pre-cord.desc=Pre-cord connects device's note gate signals to Retrigger In
oscillator.phase_in.desc=Offsets the oscillator's phase
oscillator.pitch_in.desc=Control input added to the pitch buss
oscillator.out.desc=Signal out
oscillator.keytrack.desc=Pre-cord connects device's pitch signals to module's pitch buss
oscillator.ratio.title=Pitch Ratio [0 to 99 : 1 to 99]
oscillator.ratio.desc=Scales the module's pitch as a numerator:denominator pair \n\nSome example settings: \n• '1:1' represents no change, the same as '2:2', '7:7', etc. \n• '6:1' multiplies by six (600%). \n• '1:4' scales down to 25% (or two octaves down). \n• '4:3' scales to about 133% (or up a perfect fourth in just intonation). \n• '0:x' zeroes out the pitch buss, leaving the frequency offset solely in control.
oscillator.pitch_shift.desc=Shifts the module's pitch
oscillator.stereo-ize.desc=Applies the inverse frequency offset to the right channel
oscillator.frequency_shift.desc=Shifts the module's frequency
oscillator.phase_mod_embed.desc=Depth of phase modulation from sub oscillator
oscillator.reset_pre-cord_embed.desc=Pre-cord retriggers the oscillator on each note
oscillator.reset_sub_embed.title=Retrigger with Sub [toggle]
oscillator.reset_sub_embed.desc=Pre-cord retriggers the oscillator with the sub oscillator's output \n\nNote: The working toggle is in the Polymer interface itself, above.

pulse.pw.desc=Percentage of each cycle that the pulse wave stays positive
pulse.sync.desc=Semitone offset of the root waveform's pitch for a shift in timbre
saw.shape.desc=Bends the descent of the sawtooth slightly upward or downward
saw.sync.desc=Semitone offset of the root waveform's pitch for a shift in timbre
sine.skew.desc=Tilts the waveshape from a sine toward a kinked sawtooth or ramp
sine.fold.desc=Wraps the waveshape back around, creating additional cycles
triangle.skew.desc=Tilts the waveshape from a traditional triangle toward a sawtooth or ramp
triangle.fold.desc=Wraps the waveshape back around, creating additional cycles
wavetable.display.title=Wavetable Display
wavetable.display.desc=Shows the currently loaded wavetable, as well as the current position from the summed Table Index value. Clicking on the display calls up the wavetable browser. \n\nDrag a WT wavetable file (or Serum- or WaveEdit-compatible WAV file) onto the display to load it. 
wavetable.index.desc=Current table being played, as interpolated from the available tables
wavetable.index_in.desc=Control input added to the Index
wavetable.unison_voices.desc=Number of voices used for Unison mode, or "Off"
wavetable.unison_mode.title=Unison Mode [various options]
wavetable.unison_mode.desc=Unison method used:
wavetable.unison_detune.desc=Bipolar width used that all unison voices are spread across
wavetable.unison_spread.desc=Stereo width of the unison voices
wavetable.show_unison.title=Show Unison Settings
wavetable.show_unison.desc=Displays the unison parameters on the module face
wavetable.unison_section.title=Unison Parameters [various]
wavetable.unison_section.desc=See the Inspector section below for details
wavetable.no_interpolation.title=Disable Index Interpolation [toggle]
wavetable.no_interpolation.desc=When enabled, only uses tables from the loaded file (instead of freely crossfading between them)
wavetable.phase_distribution.title=Harmonic Phases [various options]
wavetable.phase_distribution.desc=How the phase of each harmonic is handled:
wavetable.spread_with_unison.title=Spread Unison Phases [toggle]
wavetable.spread_with_unison.desc=Gives a different phase offset for each unison voice, resulting in a smoother unison sound with less beating
sub.waveshape.desc=Output shapes to choose from:
sub.octave.desc=Pitch detune options by octave:
phase-1.algorithm.title=Algorithm [various shapes]
phase-1.algorithm.desc=Defines the waveshape used across all possible Shape settings:
phase-1.shape.desc=Determines the waveshape within the current Algorithm
phase-1.formant.title=Formant [harmonic 1 (fundamental) to 9]
phase-1.formant.desc=Harmonic inserted as additional sine cycles within the waveshape
phase-1.feedback.desc=Amount of output signal fed back for phase modulation
swarm.spread.desc=Width of detuning applied
swarm.skirt.desc=Fine-tunes the detuning distribution
swarm.wave.title=Waveform [various waves]
swarm.wave.desc=Waveshape to use for each voice of the swarm
sampler.gate_in.desc=Trigger/retrigger playback of the selected sample(s) \nPre-cord connects device's note gate signals
sampler.pitch_in.desc=Control input added to the pitch buss (and for sample selection in multisample mode)\nPre-cord connects device's note gate signals
sampler.velocity_in.desc=[Multisample mode] Velocity signal for sample selection\nPre-cord connects device's note velocity signals \n\nNote: All in ports on this module are mono.
sampler.zparams.title=Zone Parameters 1, 2, and 3
sampler.zparams.desc=[Multisample mode] Parameter values for the currently triggered zone(s)
sampler.select.desc=[Multisample mode] Determines what zone(s) are triggered based on their Select range
sampler.pitch.desc=Playback frequency control (does not affect sample selection)
sampler.play_mode.title=Play Mode
sampler.play_mode.desc=Method of audio playback/control:
sampler.speed.desc=Controls playback speed. (In Repitch mode, this also affects pitch.)
sampler.formant.desc=[Cycles mode] Formant shift as a timbre control 
sampler.grain.desc=[Textures mode] Length of each audio grain
sampler.motion.desc=[Textures mode] Amount of animation added to the playhead
sampler.freeze.desc=Holds the playhead in place, requiring you to control it via Position modulation
sampler.ram.title=Load In RAM [toggle]
sampler.ram.desc=Allows playhead/loop modulations
sampler.playhead.desc=Offsets the playhead's current position
sampler.position.desc=Scaled between the sample's start and end markers
sampler.loop_start.desc=Relatively offsets the position of the loop
sampler.loop_length.desc=Scales the loop end time
sampler.zone_area.title=Zone Controls
sampler.zone_area.desc=Controls specific to the loaded sample(s)


#random.
random.trigger_in.desc=Trigger causes a new random value at output
random.trigger_pre-cord.desc=Pre-cord connects device's note gate signals to Trigger In, causing updated random output on each note played
random.chance_in.desc=Directly sets the Chance parameter
random.out.desc=Random signal out
random.chance.desc=Likelihood that an incoming trigger will produce a trigger out
random.stereo.desc=Generates independent values for the left and right channels

noise.type.title=Noise Type [white or pink]
noise.type.desc=Selects the random distribution to be either white (equal energy per frequency) or pink (equal energy per octave)
s/h_lfo.smoothing.desc=Amount of interpolation applied
s/h_lfo.feedback.desc=Correlation of successive output values, where positive settings trend toward small changes over time (à la Brownian motion) and negative settings can lead to repeating patterns
s/h_lfo.epoch.desc=Length of sequence (number of steps) used by the Feedback loop
chance.trigger_in.desc=Trigger causes a possible event at output
chance.out.desc=Short trigger signals
dice.out.desc=Random unipolar value


#lfo.
lfo.gate_in.desc=Trigger restarts the LFO's phase
lfo.phase_in.desc=Offsets the LFO's phase
lfo.rate_in.desc=Control input added to the rate buss
lfo.out.desc=Signal out
lfo.logic_out.desc=High logic for the first half of the period, and low logic for the second half
lfo.modulator.title=Modulator Out
lfo.modulator.desc=For wireless control of parameters
lfo.waveshape.title=Waveshape [triangle, pulse, sine, teeth]
lfo.waveshape.desc=Base waveforms to choose from, varied by the Skew parameter
lfo.skew.desc=Waveshape variation amount
lfo.rate.desc=Frequency, in the current Timebase
lfo.timebase.title=Timebase [frequency or note length]
lfo.timebase.desc=Unit used for Rate
lfo.phase_all.desc=Shifts the module's phase
lfo.phase_offset.desc=Relatively shifts the right channel's phase
lfo.bipolar.desc=Scales the module's output from roughly '-1' to '+1'

clock.rate.desc=Rate in Hertz
transport.timebase.title=Timebase [bars or beat-length]
transport.timebase.desc=Unit used for rate
transport.length.desc=Wavelength of the device's phase signal, in the current Timebase
transport.offset.desc=Timing offset in Timebase units, to shift the output early (positive) or late (negative)
transport.shuffle.desc=Applies Applies the transport's groove (when enabled) to this module
transport.free-run.desc=Continues running regardless of the transport status


#envelope.
envelope.signal_in.desc=Signal to be scaled by the envelope signal
envelope.signal_slope_in.desc=Signal to be scaled
envelope.gate_in.desc=High logic starts the attack stage; low logic starts the release
envelope.gate_pre-cord.desc=Pre-cord connects device's note gate signals to Gate In
envelope.trigger_in.desc=Trigger starts the attack stage\n
envelope.trigger_pre-cord.desc=Pre-cord connects device's note gate signals to Trigger In
envelope.signal_out.desc=Input signal with the envelope applied
envelope.signal_slope_out.desc=Signal out
envelope.env_out.desc=Envelope signal
envelope.modulator.title=Modulator Out
envelope.modulator.desc=For wireless control of parameters
envelope.attack.desc=Rise time from current envelope value to 100%
envelope.decay.desc=Fall time after the attack stage
envelope.sustain.desc=Level where the decay stage ends
envelope.release.desc=Fall time from current envelope value to 0%
envelope.attack_curve.desc=Slope of attack stage ('0 %' is linear)
envelope.decay_curve.desc=Slope of decay stage ('0 %' is linear)
envelope.release_curve.desc=Slope of release stage ('0 %' is linear)
envelope.lifetime.desc=When device is polyphonic, keeps voices alive while this envelope generator is active

ad_module.looping.desc=Restarts the envelope whenever the "trigger" input remains high
follower.signal_in.desc=Signal to have its envelope extracted
follower_rf.rise.desc=Transition speed for increasing levels
follower_rf.fall.desc=Transition speed for decreasing levels
follower_rf.avg_mode.title=Averaging Mode [peak or RMS]
follower_rf.avg_mode.desc=Switch between faster- and slower-moving averages, respectively
follower.time.desc=Transition speed for all level changes
follower.rms.desc=Uses RMS for signal averaging, which follows the slower "body" of the sound instead of signal peaks
slope_↗.time.desc=Slew time for rising signal changes
slope_↘︎.time.desc=Slew time for falling signal changes


#filter.
filter.signal_in.desc=Signal to be filtered
filter.cutoff_in.desc=Control input added to the cutoff buss
filter.out.desc=Signal out
filter.cutoff.desc=Frequency where 3 dB of attenuation occurs
filter.reso.desc=Amount of feedback applied within the filter
filter.keytrack.desc=Amount of device's pitch signals added to module's cutoff buss
filter.slope.title=Slope [various]
filter.slope.desc=Steepness of the filter, in dB/oct
filter.poles.title=Poles [each pole represents another -6 dB/oct]
filter.poles.desc=Steepness of the filter
filter.linearity.title=Linearity [symmetric or asymmetric]
filter.linearity.desc=How gain is applied for resonance
filter.enable_embed.title=Filter Enabled [toggle]
filter.enable_embed.desc=When disabled, the filter is bypassed
filter.gain_embed.desc=Gain applied at the filter's input
filter.feg_embed.desc=Depth of filter frequency modulation from the filter EG

svf.cutoff.desc=Frequency where 3 dB of attenuation occurs (or the center frequency for band-pass modes)
svf.mode.title=Filter Mode [low-, band-, or high-pass]
svf.mode.desc=Type of filter used
comb.cutoff.desc=Frequency where 3 dB of attenuation occurs
comb.reso.desc=Amount of feedback applied within the filter
comb.feedback_invert.title=Feedback Polarity [normal or inverted]
comb.feedback_invert.desc=Sign used for scaling feedback


#shaper.
shaper.signal_in.desc=Signal to be shaped
shaper.out.desc=Shaped signal out

chebyshev.amount.desc=Partial to target for emphasis ('3.0' represents an octave and a fifth up, for example)
distortion.amount.desc=Amount of gain applied
quantizer.amount.desc=Sets the amplitude steps used as a level
rectifier.positive_amount.desc=Scaling used for all positive values
rectifier.negative_amount.desc=Scaling used for all negative values
wavefolder.amount.desc=Gain applied before the signal is folded back
curve.low_out.desc=Lowest output level used
curve.high_out.desc=Highest output level used
curve.curve.desc=Curve factor used, where '0 %' results in no change, positive values impose a logarithmic-type curve, and negative values impose an exponential one 


#delay.
delay.signal_in.desc=Signal to be delayed
delay.cutoff_in.desc=Control input added to the delay time buss
delay.out.desc=Delayed signal out
delay.unit.title=Delay Unit [time or note duration]
delay.unit.desc=Unit used to set delay time
delay.time.desc=Time-based setting for delay time
delay.beats.title=Beats of Delay [1 to 8]
delay.beats.desc=Number of beats used for delay time
delay.offset.desc=Scales the beat unit used, with clickable detents at even, triplet, and dotted values
delay.feedback.desc=Amount of output signal fed back
delay.low-pass.desc=Low-pass cutoff frequency for feedback signal
delay.clipping.title=Feedback clipping mode [soft or hard]
delay.clipping.desc=Type of clipping in the feedback loop

long_delay.out.desc=Delayed signal out \n\nNote: To create a feedback loop between modules, insert this module. It is specially configured to allow feedback connections.
all-pass.time.desc=Time of the delay
all-pass.gain.desc=Amount of gain compensation applied, with '100 %' canceling out the effect
recorder.signal_in.desc=Signal to be recorded
recorder.record_in.desc=Sets whether recording is occurring \n\nNote: This in port is mono.
recorder.play_in.desc=Sets whether playback is occurring \n\nNote: This in port is mono.


#mix.
mix.signal_in.desc=Signal in
mix.signal_in1.desc=Signal in 1
mix.signal_in2.desc=Signal in 2
mix.signal_in2and.desc=Signal in 2, etc.
mix.signal_out1.desc=Signal out 1
mix.signal_out2.desc=Signal out 2
mix.signal_out2and.desc=Signal out 2, etc.
mix.out.desc=Signal out

blend.mix.desc=Balance between in 1 and in 2, as a ratio
blend.mode.title=Blending Mode [equal gain or equal power]
blend.mode.desc=Power rule used for crossfading the two signals
mixer.signal_in.desc=Channel 1 signal in
mixer.signal_in2.desc=Channel 2 signal in
mixer.signal_in3.desc=Channel 3 signal in
mixer.signal_in4.desc=Channel 4 signal in
mixer.signal_in5.desc=Channel 5 signal in
mixer.signal_in6.desc=Channel 6 signal in
mixer.volume.desc=Volume scaling of channel 1
mixer.panning.desc=Stereo panning position of channel 1
mixer.solo_mute.title=Ch 1 Solo & Active [toggles]
mixer.solo_mute.desc=Solo status of channel 1 (S), and whether channel 1 is audible or not (speaker icon)
pan.placement.desc=Stereo panning position for the incoming signal
stereo_width.width.desc=Relative width of the incoming signal ('100 %' represents no change)
select.logic_in.desc=Low value routes in 1 to output;\n high value uses in 2
toggle.active.desc=Whether the signal is passed thru or zeroed out
merge.select.desc=Controls which in port(s) are sent to the output
merge.inputs.desc=Number of in ports provided
merge.interpolation.title=Interpolation [nearest or linear]
merge.interpolation.desc=Whether only one in port is used at a time (nearest), or a blend of two adjacent ports is used (linear)
merge.wrap.desc=Offsets the range so that a high Select value wraps around to in port 1
merge.normalize.desc=Uses a Select signal range of '0' to '+1', regardless of the in port count
split.select.desc=Controls which out port(s) receive the input
split.outputs.desc=Number of out ports provided
split.interpolation.title=Interpolation [nearest or linear]
split.interpolation.desc=Whether only one out port is used at a time (nearest), or the input is blended between two adjacent out ports (linear)
split.wrap.desc=Offsets the range so that a high Select value wraps around to out port 1
split.normalize.desc=Uses a Select signal range of '0' to '+1', regardless of the out port count
lr_gain.left.desc=Amount of gain applied to the left channel
lr_gain.right.desc=Amount of gain applied to the right channel
stereo_merge.left.desc=Signal placed on the left of the stereo output
stereo_merge.right.desc=Signal placed on the right of the stereo output
stereo_merge.mid.desc=Signal placed in the middle of the stereo output
stereo_merge.side.desc=Signal placed on the sides of the stereo output
stereo_split.left.desc=Left content of the stereo input
stereo_split.right.desc=Right content of the stereo input
stereo_split.mid.desc=Middle content of the stereo input
stereo_split.side.desc=Side content of the stereo input


#level.
level.signal_in.desc=Signal to be processed
level.signal_in1.desc=Signal in 1
level.signal_in2.desc=Signal in 2
level.mod_in.desc=Modulation signal in
level.out.desc=Signal out
level.bipolar.title=Bipolar [toggle]
level.bipolar.desc=Sets the range of all controls from '-100 %' ('-1') to '+100 %' ('+1')
level.stereo-ize.desc=Uses the inverse control value for the right channel

level_module.value.desc=Defined level set in decibels
value.value.desc=Defined level set as a percentage, meaning '100 %' outputs a full-scale signal ('+1')
attenuate.amount.desc=Amount of incoming signal passed thru
bias.amount.desc=Percentage level added
gain_-_vol.amount.desc=Decibels of scaling applied, configured as a volume fader
gain_-_db.amount.desc=Decibels of scaling applied
velo_mult.depth.desc=Downward range for scaling. \n\nAt '0 %', velocity is ignored, and the signal passes at maximum (read: unattenuated). At any other setting, a maximum velocity will pass a maximum signal, and a lower velocity attenuates the signal relatively.
velo_mult.slew.desc=Amount of time before the new velocity level is reached
velo_mult.response.desc=Transition curve, for different uses:
average.amount.desc=Amount of time being averaged
bend.amount.desc=Curve factor used, where '0 %' results in no change, positive values impose a logarithmic-type curve, and negative values impose an exponential one
clip.level.desc=Level at which the signal will clip
curve.xy.title=Clickable Curve Interface
curve.xy.desc=With points for the highest input/output level \n[+], the lowest input/output value [-], and the curvature used (shown in the middle of the line)
curve.low_in.desc=Lowest input level remapped (incoming values below this level will be clipped at the Out Low level)
curve.high_in.desc=Highest input level remapped (incoming values above this level will be clipped at the Out High level)
lag.amount.desc=Amount of time before the current input level is reached
level_scaler.low.desc=Level output when '0' is received at input
level_scaler.high.desc=Level output when '1' is received at input
level_scaler.graphic.title=Graphic Interface
level_scaler.graphic.desc=Alternate, logarithmic display for adjusting the levels and visualizing the current output
value_scaler.low.desc=Value output (set as percentage) when '0' is received at input
value_scaler.high.desc=Value output (set as percentage) when '1' is received at input
value_scaler.bipolar.desc=Value output (set as percentage) when '1' is received at input
am/rm.carrier_in.desc=Carrier in
am/rm.modulator_in.desc=Modulator in
am/rm.amount.desc=Crossfader blending between carrier only ('0 %'), then amplitude modulation (of the carrier and modulator; '50 %'), and finally ring modulation ('100 %')
am/rm.vca_note.title=Note: VCA simulation
am/rm.vca_note.desc=When set to '50 %' (the default value), this module shifts the incoming modulator signal to be unipolar, providing a convenient shortcut for a traditional VCA (voltage-controlled amplifier) configuration.
hold.logic_in.desc=High-logic sustains the current signal value; low-logic passes all input thru to the output
sample_/_hold.logic_in.desc=Trigger captures the current signal value and outputs it


#pitch.
pitch.in.desc=Signal in to be shaped as pitch signal
pitch.out.desc=Signal out using Bitwig's pitch standard
pitch.offset.title=Note: Processor or Generator
pitch.offset.desc=This module shifts the incoming signal by a set amount. But since it is doing this with addition, the module acts as a generator when no input is provided, which can also be useful.

pitch_module.pitch.title=Pitch
pitch_module.pitch.desc=Defined pitch as note \n(switchable in Inspector Panel)
pitch_module.freq.title=Pitch
pitch_module.freq.desc=Defined pitch as frequency \n(switchable in Inspector Panel)
pitch_module.value.desc=Defined pitch set as readable pitch value, meaning zero represents 'C3' (middle C) and each whole number is a semitone
pitch_module.stereo-ize.desc=Uses the inverse pitch (around '0' or 'C3') for the right channel. \n\nFor example, a setting of 'C4' ('+12') would use 'C2' ('-12') on the right channel. And a setting of 'A2' ('-3') would output 'E3' ('+3')
pitch_module.disp_pitch.title=Show Notes
pitch_module.disp_pitch.desc=Displays pitch as note
pitch_module.disp_freq.title=Show Frequency
pitch_module.disp_freq.desc=Displays pitch as frequency
octaver.amount.desc=Pitch detune options by octave:
ratio_module.ratio.title=Pitch Ratio [0 to 99 : 1 to 99]
ratio_module.ratio.desc=Shifts the incoming pitch via a numerator:denominator pair \n\nSome example settings: \n• '1:1' represents no change, the same as '2:2', '7:7', etc. \n• '6:1' multiplies by six (600%). \n• '1:4' scales down to 25% (or two octaves down). \n• '4:3' scales to about 133% (or up a perfect fourth in just intonation).
transpose.amount.desc=Pitch shift added to incoming signal
transpose.stereo-ness.desc=Which channels are pitch shifted:
transpose.numeric.title=Note: Working in even semitones
transpose.numeric.desc=By dragging the number on the left of the decimal, you will only shift by one full semitone at a time. This preserves the decimal portion. \n\nAs with any relative pitch parameter (like the Micro-pitch device), you can also type fractions. For example, you could type in '3/2' for a just fifth, which Bitwig will convert to '7.02 st'.
pitch_quantize.in.desc=Signal in to be quantized to set (or played) pitch steps
pitch_quantize.pitch_steps.title=Pitch Steps [12 toggles]
pitch_quantize.pitch_steps.desc=Sets whether each pitch class (C, C#, D, etc.) will be used
pitch_quantize.pitch_leds.title=Pitch Steps [12 LEDs]
pitch_quantize.pitch_leds.desc=Visualizes the pitch classes (C, C#, D, etc.) that are held and will be used
pitch_quantize.distribution.title=Note Distribution [uniform or nearest]
pitch_quantize.distribution.desc=Either spaces note steps equally for even rhythms (uniform) or keeps their relative positions for irregular rhythms (nearest)
pitch_quantize.use_notes.desc=Pre-cord uses device's pitch signals to toggle note steps
pitch_quantize.note_source.title=Note Source [menu]
pitch_quantize.note_source.desc=Source of notes for setting note steps
by_semitone.in.desc=Signal in to be quantized to exact semitones
pitch_scaler.low.desc=Pitch output when '0' is received at input
pitch_scaler.high.desc=Pitch output when '1' is received at input
pitch_scaler.value_help.title=Low and High Pitch Values
pitch_scaler.value_help.desc=Defined pitches as readable Bitwig pitch value, meaning zero represents 'C3' (middle C) and each whole number is a semitone
zero_crossings.low.desc=Lowest frequency tracked
zero_crossings.hi.desc=Highest frequency tracked


#math.
math.op_a.desc=Signal A for operation
math.op_b.desc=Signal B for operation
math.signal_in.desc=Signal in
math.signal_in1.desc=Signal in 1
math.signal_in2.desc=Signal in 2
math.signal_in2and.desc=Signal in 2, etc.
math.out.desc=Signal output of result
math.signal_out.desc=Signal output
math.remainder_out.desc=Amount of the original signal removed​

constant.value.desc=Defined value
abs.sign.desc=Polarity of the incoming signal (outputs '+1' for positive or zero, '-1' for negative)
minmax.max.desc=Larger signal of the two inputs
minmax.min.desc=Smaller signal of the two inputs
quantize.step_size.desc=Interval of allowed output values, so a step size of '0.1' ('10 %') would only allow results of '0', '±0.1', '±0.2', etc.


#logic.
logic.op_a.desc=Signal A for assessment
logic.op_b.desc=Signal B for assessment
logic.clock_in.desc=Clock input
logic.reset_in.desc=Resets the internal counter to zero (which sends a trigger output) on the next clock trigger
logic.out.desc=High logic ('+1') for true, \n low logic ('0') for false
logic.gate_out.desc=High logic ('+1') for on, \n low logic ('0') for off

button.gate.desc=Clickable toggle for setting logic output state
button.on_text.title=On Label (text)
button.on_text.desc=Optional text displayed when toggle is on
button.off_text.title=Off Label (text)
button.off_text.desc=Optional text displayed when toggle is off
trigger.signal_in.desc=Signal in to merge with output
trigger.trigger.desc=Clickable trigger for producing a short high-logic state
clock_divide.clock_interval.desc=Cycle length before sending another trigger signal out
clock_quantize.trigger_in.desc=Trigger to pass a gate signal on the next clock pulse
clock_quantize.mode.title=Output Mode [T(rigger) or G(ate)]
clock_quantize.mode.desc=Ends each output gate either when the clock signal returns to zero (trigger) or when the next clock signal arrives (gate)
gate_length.trigger_in.desc=Trigger starts new logic pulse
gate_length.length.desc=High-logic duration for each triggered logic pulse
gate_repeat.gate_in.desc=Starts/stops logic pulses
gate_repeat.length.desc=Duration of each outgoing logic pulse
gate_delay.gate_in.desc=Signal to be treated as a logic signal, with either the whole signal or some of its transitions delayed
gate_delay.delay.desc=Delay time applied \n\nNote: When the Mode is only delaying one type of transition, those transitions must be longer than the delay time to be passed thru.
gate_delay.mode.desc=Which transitions are delayed: \n
latch.toggle_in.desc=Trigger alternates the current output state
latch.set_in.desc=Trigger sets the current output to high logic
latch.reset_in.desc=Trigger sets the current output to low logic
n-latch.trigger_in1.desc=Trigger in 1
n-latch.trigger_in2and.desc=Trigger in 2, etc.
n-latch.gate_out1.desc=High logic ('+1') when corresponding in port received the most recent trigger signal. Otherwise, low logic ('0').
n-latch.gate_out2and.desc=Equivalent to Gate Out 1, etc. 
n-latch.count.desc=Number of in and out port pairs provided
\=.exact.desc=Requires the signals to be identical floating-point values, which may prove too stringent when working with two moving signals
\=.table.title=Truth table
\=.table.desc=A       B       =\n0       0       1\n0       1       0\n1       0       0\n1       1       1
≥.table.title=Truth table
≥.table.desc=A       B       ≥\n0       0       1\n0       1       0\n1       0       1\n1       1       1
≤.table.title=Truth table
≤.table.desc=A       B       ≤\n0       0       1\n0       1       1\n1       0       0\n1       1       1
>.table.title=Truth table
>.table.desc=A       B       >\n0       0       0\n0       1       0\n1       0       1\n1       1       0
<.table.title=Truth table
<.table.desc=A       B       <\n0       0       0\n0       1       1\n1       0       0\n1       1       0
≠.exact.title=Exact Mismatches Only [toggle]
≠.exact.desc=Requires the signals to be non-identical floating-point values, which may prove too stringent when working with two moving signals
≠.table.title=Truth table
≠.table.desc=A       B       ≠\n0       0       0\n0       1       1\n1       0       1\n1       1       0
not.signal_in.desc=Signal for inversion
not.table.title=Truth table
not.table.desc=In      NOT\n1       0\n0       1
and.table.title=Truth table
and.table.desc=A       B       AND\n0       0       0\n0       1       0\n1       0       0\n1       1       1
nand.table.title=Truth table
nand.table.desc=A       B       NAND\n0       0       1\n0       1       1\n1       0       1\n1       1       0
or.table.title=Truth table
or.table.desc=A       B       OR\n0       0       0\n0       1       1\n1       0       1\n1       1       1
nor.table.title=Truth table
nor.table.desc=A       B       NOR\n0       0       1\n0       1       0\n1       0       0\n1       1       0
xor.table.title=Truth table
xor.table.desc=A       B       XOR\n0       0       0\n0       1       1\n1       0       1\n1       1       0
xnor.table.title=Truth table
xnor.table.desc=A       B       XNOR\n0       0       1\n0       1       0\n1       0       0\n1       1       1
