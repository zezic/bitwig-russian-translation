#i/o.
i/o.signal_in.desc=Signal, das gesendet werden soll
i/o.out.desc=Empfangenes Signal
i/o.chooser.desc=Signalpfad, der verwendet werden soll
i/o.affect_lifetime.desc=Sofern das Device polyphon ist, bleiben alle Stimmen aktiv, solange dieses Modul aktiv ist
i/o.smoothing.desc=Glättet das Signal
i/o.cv_mode.title=Modus [AC oder DC]
i/o.cv_mode.desc=Legt fest, ob die Ein- und Ausgänge des Audiointerfaces im Gleichspannungs- (DC) oder Wechelspannungsmodus (AC) betrieben werden
i/o.cv_smooth.desc=Legt den Anteil der Glättung des Signals fest
i/o.cv_smooth_filt.desc=Cutoff-Frequenz des 4-Pol Tiefpassfilters, mit dem das eintreffende CV-Signal bearbeitet wird
i/o.cv_gain.desc=Verstärkt das eintreffende CV-Signal

gate_in.out.desc=Gate-Signale, die vom Device empfangen werden
phase_in.out.desc=Phasensignal, das vom Device empfangen und konfiguriert wird
phase_in.note.title=Hinweis: Die Einstellungen befinden sich im Device-Inspektor
phase_in.note.desc=Alle Einstellungen für dieses Signal befinden sich im Device-Inspektor im Bereich \n"Ø Device Phase".
pitch_in.out.desc=Tonhöhensignale, die vom Device empfangen werden
pitch_in.note_priority.desc=Legt fest, ob die tiefste oder höchste Note priorisiert werden soll, die zuletzt gespielte Note oder ob die aktuelle Einstellung des Devices übernommen werden soll (Standardeinstellung)
pitch_in.note_priority_curr.title=Current Note Priority
pitch_in.note_priority_curr.desc=Zeigt eine Notenpriorisierung an, die von der Standardeinstellung abweicht
velocity_in.out.desc=Anschlagsstärke, die vom Device empfangen wird
gain_in.out.desc=Note Gain Expressions, die vom Device empfangen werden
pan_in.out.desc=Note Pan Expressions, die vom Device empfangen werden
pressure_in.out.desc=Unipolare Poly-Pressure-Signale, die vom Device empfangen werden (falls Channel-Aftertouch-Signale empfangen werden, werden diese Werte auf alle Stimmen angewandt)
timbre_in.out.desc=Bipolare Timbre Expressions, die vom Device empfangen werden
timbre_in.relative.desc=Verschiebt das aktuelle Signal, sodass beim Notenstart das Signal auf der Nulllinie beginnt
audio_in.out.desc=Audiosignal, dass vom Audioeingang des Devices empfangen wird
audio_out.in.desc=Audiosignal, dass aus dem Audioausgang des Devices gesendet wird
audio_out.threshold.desc=Schwellwert, der festlegt, ob ein Signal aktiv ist
audio_out.timeout.desc=Dauer, die festlegt, ob ein Signal aktiv ist
audio_out.clipping.title=Output clipping mode [off, hard, or soft]
audio_out.clipping.desc=Legt die Art des Clippings des Ausgangssignals fest
audio_sidechain.out.desc=Audiosignal eines Signalpfads innerhalb des Projekts
audio_sidechain.path.title=Audio Path
audio_sidechain.path.desc=Signalpfad innerhalb des Projekts, der verwendet werden soll
hw_in.out.desc=Audiosignale eines Eingangs des Audiointerfaces
hw_in.path.title=Audio Path
hw_in.path.desc=Eingang des Audiointerfaces, der verwendet werden soll
hw_out.in.desc=Signale, die zu einem Audioausgang gesendet werden sollen
hw_out.path.title=Audio Path
hw_out.path.desc=Ausgang des Audiointerfaces, der verwendet werden soll
cv_in.out.desc=CV-Signal eines Eingangs des Audiointerfaces
cv_in.path.title=Control Voltage Path
cv_in.path.desc=CV-Eingang, der verwendet werden soll
cv_out.in.desc=Signale, die zu einem CV-Ausgang gesendet werden sollen
cv_out.path.title=Control Voltage Path
cv_out.path.desc=CV-Ausgang, der verwendet werden soll
cv_pitch_out.in.desc=Signale, die zu einem Tonhöhen-CV-Ausgang gesendet werden sollen
cv_pitch_out.path.title=Control Voltage Pitch Path
cv_pitch_out.path.desc=Tonhöhen-CV-Ausgang, der verwendet werden soll
cv_pitch_out.range.desc=Oktavbereich, auf den das eintreffende Signal skaliert wird
cv_pitch_out.root.desc=Grundton, der vom Wert null getriggert wird
key_on.out.desc=Gate-Signale, die vom Device für eine spezifische Noten- und Kanalnummer empfangen werden
key_on.note.desc=Note, die das Gate-Signel erzeugt
key_on.channel.desc=Kanal, auf dem die Note empfangen wird ('0' steht für alle Kanäle)
key_on.learn.desc=Mit einem Klick wird die Note und der Kanal der nächsten empfangenen Note verwendet
keys_held.out.desc=Anzahl der Tasten, die gerade am Device-Eingang aktiv sind
transport_playing.out.desc=Hat den Status high-aktiv, solange die Wiedergabe der Transportsteuerung läuft, und low-aktiv, wenn sie gestoppt ist
modulator_out.in.desc=Signale zur Verwendung mit einem Modulator \n\nHinweis: Modulatorsignale verwenden die Sampling-Rate des Programms und sind in Mono (eintreffende Stereosignale werden zu Mono summiert).
modulator_out.modulator.title=Modulator Out
modulator_out.modulator.desc=Zur kabellosen Steuerung von Parametern


#display.
display.signal_in.desc=Signal, das angezeigt werden soll
display.signal_in1.desc=Eingang für Signal 1, das angezeigt werden soll
display.signal_in2.desc=Eingang für Signal 2, das angezeigt werden soll
display.signal_in3.desc=Eingang für Signal 3, das angezeigt werden soll
display.signal_in4.desc=Eingang für Signal 4, das angezeigt werden soll
display.signal_out1.desc=Ausgang für Signal 1, das vom Eingang unverändert weitergeleitet wurde
display.signal_out2.desc=Ausgang für Signal 2, das vom Eingang unverändert weitergeleitet wurde
display.out.desc=Ausgang für Signale, die vom Eingang unverändert weitergeleitet wurden

comment.comment.title=Comment Display [text]
comment.comment.desc=Anzeige für Kommentare, die im Inspektor-Panel eingegeben werden
comment.title.title=Title Display [text]
comment.title.desc=Name des Moduls, falls Sie einen individuellen Namen (im Inspektor-Panel) vergeben haben, angezeigt in der Farbe des Moduls
comment.entry.title=Comment Entry Area [text]
comment.entry.desc=Eingabeereich für Kommentare
label.label.title=Label Display [text]
label.label.desc=Name des Moduls (der im Inspektor-Panel vergeben wird), angezeigt in der Farbe des Moduls
xy.x_out.desc=Signal, das den Wert der X-Position ausgibt
xy.y_out.desc=Signal, das den Wert der Y-Position ausgibt
xy.pad.title=XY Control Pad [interface]
xy.pad.desc=Zum Verschieben des XY-Paars mit einem Klick oder Touch
xy.x_value.desc=Aktueller Wert der X-Achse (der auch gut als Modulationsziel dienen kann)
xy.y_value.desc=Aktueller Wert der Y-Achse (der auch gut als Modulationsziel dienen kann)
xy.x_bipolar.title=X Bipolar [toggle]
xy.x_bipolar.desc=Legt den Wertebereich der X-Achse von '-1' bis '+1' fest
xy.y_bipolar.title=Y Bipolar [toggle]
xy.y_bipolar.desc=Legt den Wertebereich der Y-Achse von '-1' bis '+1' fest
oscilloscope.trigger_in.desc=[Beim Modus 'Slow' oder 'Fast'] \nEin Trigger-Signal startet die Anzeige des Signals erneut
oscilloscope.mode.title=Mode [slow, fast, or pitch]
oscilloscope.mode.desc=Schaltet zwischen einer langsamen und schnellen Tracking-Geschwindigkeit um, oder legt fest, ob die Tonhöhe eintreffender Noten für das Tracking verwendet werden soll
oscilloscope.display.title=Voice Shown [last voice or all voices]
oscilloscope.display.desc=Zeigt entweder die letzte Stimme jedes Signals an, oder die Summe aller Stimmen (was dazu führen kann, das der Anzeigebereich zu klein wird)
value_readout.mode.title=Display Unit [1, dB, st, Hz]
value_readout.mode.desc=Die Einheit, in der das Signal angezeigt wird, entweder als reine Zahlenwerte (1), Dezibelwerte (dB), Noten und Halbtonschritte (st) oder Noten und Frequenz in Hertz (Hz).


#phase.
phase.phase_in.desc=Eingang für das zu bearbeitende Phasensignal
phase.step_in.desc=Trigger-Eingang, mit dem zum nächsten Schritt weitergeschaltet wird
phase.reset_in.desc=Trigger-Eingang, mit dem zum ersten Schritt zurückgesprungen wird
phase.pitch_in.desc=Tonhöheneingang, dessen Oktavinformation verwendet wird, um das Phasensignal zu erzeugen \n\nEinge Beispielwerte: \n• Alle C-Tonhöhen → Ausgangsignal '0.000' \n• Alle F♯/G♭-Tonhöhen → Ausgangsignal '0.500' \n• Ein viel zu hoch intoniertes B → Ausgangsignal '0.999'
phase.out.desc=Ausgang des Phasensignals
phase.gate_out.desc=Gate-Signal, das während der ersten Hälfte der Phasen-Wellenform high-aktiv ist ('+1')

ø_reverse.stereo-ness.desc=Legt fest, bei welchen Kanälen die Phase gedreht wird:
ø_bend.amount.desc=Wert, der die Form der Kurve ändert. '0 %' bedeutet keine Veränderung, mit positiven Werten bekommt die Kurve eine logarithmische Form, mit negativen Werten eine exponentielle Form
ø_pinch.amount.desc=Wert, der die Kurve in eine S-Form ändert. '0 %' bedeutet keine Veränderung, mit positiven Werten bekommt die Kurve eine logarithmische S-Form, mit negativen Werten eine exponentielle S-Form
ø_reset.logic_in.desc=Trigger-Eingang, mit dem das Signal auf null zurückgesetzt wird
ø_reset.reset_pre-cord.desc=Pre-Cord, welches das Gate-Signal eintreffender Noten mit den Reset-Eingang verbindet
ø_scaler.logic_in.desc=Trigger-Eingang, mit dem die Bearbeitung zurückgesetzt wird
ø_scaler.rate.desc=Skaliert die Geschwindigkeit des Phasensignals. Der Faktor '1.0' (100%) bedeutet keine Veränderung, '2.0' verdoppelt die Geschwindigkeit, und '0.33' reduziert sie auf ca. ein Drittel des ursprünglichen Werts
ø_scaler.ratio.title=Scaling Ratio [0 to 99 : 1 to 99]
ø_scaler.ratio.desc=Skaliert die Geschwindigkeit des Phasensignals mit Hilfe eines Zähler-Nenner-Paars. \n\nEinige Beispiele: \n• '1:1' bedeutet keine Veränderung. \n• '6:1' ist sechsmal schneller (600%). \n• '1:4' ist um 25% langsamer (ein Viertel der usprünglichen Geschwindigkeit, oder ein Phasendurchgang für vier Eingangssignale). \n• '0:x' erzeugt kein Phasensignal am Ausgang.
ø_counter.step_count.desc=Anzahl der Schritte eines Phasendurchgangs
ø_formant.amount.desc=Grad der Formantenverschiebung
ø_lag.amount.desc=Verzögerungdauer, die das Phasensignal benötigt, um den aktuellen Eingangspegel zu erreichen
ø_mirror.amount.desc=Anteil, um das das Phaseneingangssignal verschoben und dann gespiegelt wird
ø_shift.amount.desc=Prozentsatz, um das das Phaseneingangssignal verschoben. Negative Werte verzögern das Signal, und positive Werte ziehen das Signal zeitlich nach vorne
ø_sinemod.depth.desc=Pegel des Sinusmodulatorsignals
ø_sinemod.cycles.desc=Anzahl der Durchgänge des Sinusmodulatorsignals
ø_sinemod.add.desc=Addiert das Eingangssignal zum modulierten Signal
ø_skew.amount.desc=Pegel des Eingangssignals, das um '+0.5' zentriert wird
ø_sync.amount.desc=Grad der Verschiebung und Begrenzung des Phaseneingangssignal
ø_split.phase_in.desc=Eingang für das  Phasensignal, das auf mehrere Ausgänge verteilt wird. \n\nBei '2' Ausgängen wird die Phase des zweiten Signals um 50 % (180 º) verschoben. Bei '5' Ausgängen wird die Phase des Signals am zweiten Ausgang um 20 % (72 º) verschoben, am dritten Ausgang um 40 % (144 º) usw.
ø_split.out1.desc=Phasensignalausgang 1, der das Eingangssignal unverändert ausgibt
ø_split.out2and.desc=Phasensignalausgang 2, etc.


#data.
data.phase_in.desc=Eingang für ein Phasensignal, das die Lookup-Tabelle des Moduls steuert
data.logic_out.desc=Ausgang für ein Gate-Signal, basierend auf der aktuellen Phasenposition
data.pitch_out.desc=Ausgang für ein Tonhöhensignal, basierend auf der aktuellen Phasenposition
data.out.desc=Ausgangssignal, basierend auf der aktuellen Phasenposition
data.phase_track.desc=Pre-Cord, welches das Phasensignal des Devices (und alle weiteren eintreffenden Phasensignale) verwendet, um die Lookup-Tabelle des Moduls zu steuern
data.step_count.desc=Anzahl der Schritte
data.sharpness.desc=Legt fest, wie präzise (im Gegensatz zu geglättet) die Wellenform ist
data.modulator.title=Modulator Out
data.modulator.desc=Zur kabellosen Steuerung von Parametern

gates.steps.title=Steps [toggles]
gates.steps.desc=Ein/Ausschalter für jeden verfügbaren Schritt
gates.mode.title=Output Mode [T(rigger) or G(ate)]
gates.mode.desc=Sendet bei jedem aktivierten Schritt ein Gate-Signal mit entweder 50 % (Trigger) oder 100 % der Schrittlänge, wodurch gebundene Noten bei aufeinanderfolgenden Schritten ermöglicht werden (Gate)
pitches.steps.title=Steps [pitch sliders]
pitches.steps.desc=Es gibt einen Tonhöhenregler pro verfügbarem Schritt. Jedes C wird durch einen hellen Rahmen hervorgehoben, wie man an der unteren, mittleren und oberen Zeile sehen kann. Weiße und schwarze Tasten werden durch die Hintergrundfarbe voneinander abgesetzt. \n\nWenn beim Verschieben des Tonhöhenreglers die SHIFT-Taste gedrückt wird, wird das Einrasten auf Halbtönen vermieden und somit mikrotonales Arbeiten möglich.
pitches.offset.desc=Verschiebt die angezeigte Oktave nach oben oder unten. Bei '0' bleibt das mittlere C in der Mitte der Anzeiuge zentriert, '+1' verschiebt die Anzeige um eine Oktave nach oben usw.
pitches.octaves.desc=Notenumfang, der in der Anzeige des Moduls dargestellt wird
steps.steps.title=Steps [sliders]
steps.steps.desc=Es gibt einen Regler pro verfügbarem Schritt
steps.bipolar.desc=Legt den Wertebereich jeden Schritts auf '-1' bis '+1' fest
steps.interpolation.desc=Blendet die Werte aufeinanderfolgender Regler ineinander über (anstatt die Werte unmittelbar auszugeben)
probabilities.logic_out.desc=Ausgang für ein Gate-Signal, basierend auf Wahrscheinlichkeit des Schritts an der aktuellen Phasenposition
probabilities.steps.title=Steps [sliders]
probabilities.steps.desc=Es gibt pro Schritt einen Wahrscheinlichkeitsregler. Das bedeutet, dass ein Schritt immer ein Gate-Signal ausgibt, wenn er auf '100 %' steht. Bei '0 %' wird nie ein Gate-Signal ausgegeben, und bei '50 %' wird in der Hälfte der Fälle ein Gate-Signal ausgegeben usw.
ø_pulse.pw.desc=Pulsebreite, angegeben als Prozentwert des negativen Anteils der Pulsewelle
array_module.read_in.desc=Position, die zum Ausgang gesendet wird
array_module.write_in.desc=Position, die beschrieben wird
array_module.value_in.desc=Eingangssignal, das verarbeitet wird
array_module.gate_in.desc=Ein Trigger-Signal kopiert den Wert des Eingangsignals auf die Schreibposition
array_module.size.desc=Länge (Anzahl der Adressen), die von Array verwendet wird
array_module.normalize.desc=Verwendet Phasensignale (im Bereich '0' bis '+1') an den Lese- und Schreibeingängen. \n\nAndernfalls werden "Index-Werte" für die Lese- und Schreibeingänge verwendet (die Werte zwischen '0' und der Größe des Arrays haben können).


#oscillator.
oscillator.gate_in.desc=Ein Trigger-Signal startet die Phase des Oszillators neu
oscillator.reset_pre-cord.desc=Pre-Cord, welches das Gate-Signal eintreffender Noten mit dem Retrigger-Eingang verbindet
oscillator.phase_in.desc=Verschiebt die Phase des Oszillators
oscillator.pitch_in.desc=Eingang für die Tonhöhe, die zur Tonhöhe des Oszillators addiert wird
oscillator.out.desc=Ausgangssignal
oscillator.keytrack.desc=Pre-Cord, welches das Tonhöhensignal des Devices mit dem Tonhöheneingang des Moduls verbindet
oscillator.ratio.title=Pitch Ratio [0 to 99 : 1 to 99]
oscillator.ratio.desc=Skaliert die Tonhöhe des Moduls mit Hilfe eines Zähler-Nenner-Paars. \n\nEinige Beispiele: \n• '1:1' bedeutet keine Veränderung, genauso wie '2:2', '7:7', etc. \n• '6:1' multipliziert um Faktor 6 (600%). \n• '1:4' verringert die Tonhöhe um 25%  (oder um zwei Oktaven nach unten). \n• '0:x' erzeugt kein Signal, sodass die Tonhöhe ausschließlich mit dem Regler 'Frequency Offset' festgelegt wird.
oscillator.pitch_shift.desc=Verschiebt die Tonhöhe des Moduls
oscillator.stereo-ize.desc=Wendet den invertierten Tonhöhen-Offset auf den rechten Kanal an
oscillator.frequency_shift.desc=Verschiebt die Frequenz des Moduls
oscillator.phase_mod_embed.desc=Tiefe der Phasenmodulation vom Sub-Oszillator
oscillator.reset_pre-cord_embed.desc=Pre-Cord, das den Oszillator durch empfangene Noten steuert
oscillator.reset_sub_embed.title=Retrigger with Sub [toggle]
oscillator.reset_sub_embed.desc=Pre-Cord, das den Oszillator durch den Ausgang des Sub-Oszillators steuert \n\nHinweis: Der Ein/Ausschalter befindet sich auch in der Polymer-Oberfläche selbst

pulse.pw.desc=Pulsebreite, angegeben als Prozentwert des positiven Anteils der Pulsewelle
pulse.sync.desc=Halbton-Offset der Tonhöhe der Grundwellenform, zur Veränderung der Klangfarbe
saw.shape.desc=Biegt die ansteigende Flanke der Sägezahn-Wellenform nach oben oder unten
saw.sync.desc=Halbton-Offset der Tonhöhe der Grundwellenform, zur Veränderung der Klangfarbe
sine.skew.desc=Verschiebt die Kurvenform einer Sinuswelle hin zu einer Sägezahn- oder Ramp-Wellenform
sine.fold.desc='Bricht' das obere Ende der Wellenform um. So werden mehr Durchgänge und somit mehr Obertöne erzeugt.
triangle.skew.desc=Neigt die Dreieick-Wellenform hin zu einer Sägezahn- oder Rechteck-Wellenform
triangle.fold.desc='Bricht' das obere Ende der Wellenform um. So werden mehr Durchgänge und somit mehr Obertöne erzeugt.
wavetable.display.title=Wavetable Display
wavetable.display.desc=Zeigt den aktuell geladenen Wavetable an, sowie den aktuellen Wert des Table-Index-Reglers. Ein Klick auf die Anzeige ruft den Wavetable-Browser auf. \n\nSie können eine WT-Wavetable-Datei (oder auch eine Serum- oder WaveEdit-kompatible WAV-Datei) direkt auf die Anzeige ziehen, um sie zu laden. 
wavetable.index.desc=Aktuell gespielter Wavetable, der aus den vorhandenen Wavetables interpoliert wird
wavetable.index_in.desc=Eingang, dessen Signal zum Index-Parameter addiert wird
wavetable.unison_voices.desc=Anzahl der Stimmen im Unisono-Modus, oder "Off"
wavetable.unison_mode.title=Unison Mode [various options]
wavetable.unison_mode.desc=Legt das verwendete Unisono-Verfahren fest:
wavetable.unison_detune.desc=Grad der Verstimmung der Unisono-Stimmen
wavetable.unison_spread.desc=Stereobreite der Unisono-Stimmen
wavetable.show_unison.title=Show Unison Settings
wavetable.show_unison.desc=Zeigt die Unisono-Parameter auf der Moduloberfläche an
wavetable.unison_section.title=Unison Parameters [various]
wavetable.unison_section.desc=Weitere Details befinden sich unten im Inspektor-Bereich
wavetable.no_interpolation.title=Disable Index Interpolation [toggle]
wavetable.no_interpolation.desc=Falls dieser Parameter aktiviert ist, werden ausschließlich Wavetables verwendet, die sich in der Wavetable-Datei befinden (es findet aber keine Überblendung mehr statt)
wavetable.phase_distribution.title=Harmonic Phases [various options]
wavetable.phase_distribution.desc=Legt fest, wie die Phasenlage der Harmonischen behandelt wird:
wavetable.spread_with_unison.title=Spread Unison Phases [toggle]
wavetable.spread_with_unison.desc=Spielt jede Unisono-Stimme mit einer anderen Phasenlage ab. Somit entsteht ein weicherer Unisono-Sound mit weniger Schwebungen
sub.waveshape.desc=Legt die Ausgangswellenform fest:
sub.octave.desc=Legt die Oktavelage fest:
phase-1.algorithm.title=Algorithm [various shapes]
phase-1.algorithm.desc=Legt die Wellenform für alle Shape-Einstellungen fest:
phase-1.shape.desc=Legt die Wellenform innerhalb des aktuellen Algorithmus fest
phase-1.formant.title=Formant [harmonic 1 (fundamental) to 9]
phase-1.formant.desc=Harmonische Obertöne, die als zusätzliche Sinuswellen der ursprünglichen Wellenform hinzugefügt werden
phase-1.feedback.desc=Feedback-Anteil des Ausganssignals, das zur Phasenmodulation verwendet wird
swarm.spread.desc=Grad der Verstimmung
swarm.skirt.desc=Feineinstellung der Stimmenverteilung
swarm.wave.title=Waveform [various waves]
swarm.wave.desc=Wellenform, die jede Stimme des Schwarms verwendet
sampler.gate_in.desc=Startet die Wiedergabe der ausgewählten Samples \nDas Pre-Cord stellt automatisch eine Verbindung zu den Gate-Signalen der empfangenen Noten des Devices her
sampler.pitch_in.desc=Tonhöheneingang, dessen Signal zur Tonhöhe des Devices addiert wird (sowie zur Sample-Auswahl im Multisample-Modus)\nDas Pre-Cord stellt automatisch eine Verbindung zu den Tonhöhensignalen der empfangenen Noten des Devices her
sampler.velocity_in.desc=[Multisample-Modus] Anschlagsstärke, zur Auswahl der Samples \nDas Pre-Cord stellt automatisch eine Verbindung zu der Anschlagsstärke der empfangenen Noten des Devices her \n\nHinweis: Alle Eingänge dieses Moduls sind mono.
sampler.zparams.title=Zone Parameters 1, 2, and 3
sampler.zparams.desc=[Multisample-Modus] Ausgang der Parameterwerte der aktuell abgespielten Zonen
sampler.select.desc=[Multisample-Modus] Legt fest, welche Zonen getriggert werden, basierend auf ihrem 'Select'-Parameter
sampler.pitch.desc=Legt die Wiedergabegeschwindigkeit fest (wirkt sich nicht auf die Sample-Auswahl aus)
sampler.play_mode.title=Play Mode
sampler.play_mode.desc=Legt die Art der Audiowiedergabe fest:
sampler.speed.desc=Legt die Wiedergabegeschwindigkwit fest (Im Repitch-Modus ändert sich auch die Tonhöhe.)
sampler.formant.desc=[Cycles-Modus] Verschiebung der Formanten, zur Änderung der Klangfarbe 
sampler.grain.desc=[Textures-Modus] Länge jedes Audio-Grains
sampler.motion.desc=[Textures-Modus] Anteil der 'Animation' der Wiedergabe
sampler.freeze.desc='Friert' die Widergabe an einer Stelle ein, sodass die Wiedergabeposition manuell eingestellt oder moduliert werden kann
sampler.ram.title=Load In RAM [toggle]
sampler.ram.desc=Ermöglicht die Modulation der Wiedergabe- und Loop-Position
sampler.playhead.desc=Verschiebt die aktuelle Wiedergabeposition
sampler.position.desc=Legt die Position für den Wiedergabestart im Bereich zwischen den Markierungen für Sample-Start und Sample-Ende fest
sampler.loop_start.desc=Verschiebt den Loop-Bereich
sampler.loop_length.desc=Verschiebt den Endpunkt des Loops
sampler.zone_area.title=Zone Controls
sampler.zone_area.desc=Regler für die aktuell geladenen Samples


#random.
random.trigger_in.desc=Ein Trigger-Signal erzeugt einen zufälligen Wert am Ausgang
random.trigger_pre-cord.desc=Das Pre-Cord verbindet die Gate-Signale der empfangenen Noten des Devices mit dem Trigger-Eingang, sodass mit jeder gespielten Note ein zufälliger Wert am Ausgang anliegt
random.chance_in.desc=Steuert den 'Chance'-Parameter
random.out.desc=Zufallsswert am Ausgang
random.chance.desc=Wahrscheinlichkeit, dass ein Signal am Trigger-Eingang ein Ausgangssignal erzeugt
random.stereo.desc=Erzeugt unabhängige Werte für den linken und rechten Kanal

noise.type.title=Noise Type [white or pink]
noise.type.desc=Legt die Art des Rauschens fest. Weiß verteilt die Energie gleichmässig auf alle Frequenzen, rosa verteilt die Energie gleichmässig auf alle Oktaven
s/h_lfo.smoothing.desc=Grad der Glättung des Signals
s/h_lfo.feedback.desc=Korrelationsgrad von aufeinanderfolgenden Ausgangswerten. Positivere Einstellungen können kleinere Wertesprünge zur Folge haben, negative Einstellungen können zu sich wiederholenden Mustern führen
s/h_lfo.epoch.desc=Länge der Sequenz (Anzahl der Schritte) des Feedback-Loops
chance.trigger_in.desc=Ein Trigger-Signal erzeugt ein mögliches Ausgangssignal
chance.out.desc=Kurze Trigger-Signale
dice.out.desc=Zufälliger unipolarer Wert


#lfo.
lfo.gate_in.desc=Ein Trigger-Signal startet die Phase des LFOs neu
lfo.phase_in.desc=Verschiebt die Phase des LFOs
lfo.rate_in.desc=Eingang zur Steuerung der LFO-Geschwindigkeit
lfo.out.desc=Ausgangssignal
lfo.logic_out.desc=High-aktiv während der ersten Hälfte des Wellenformdurchgangs, low-aktiv während der zweiten Hälfte
lfo.modulator.title=Modulator Out
lfo.modulator.desc=Zur kabellosen Steuerung von Parametern
lfo.waveshape.title=Waveshape [triangle, pulse, sine, teeth]
lfo.waveshape.desc=Basiswellenformen, die zur Auwahl stehen und mit dem Skew-Parameter veriiert werden können
lfo.skew.desc=Grad der Veriation der Wellenform
lfo.rate.desc=Frequenz, basierend auf der aktuellen Zeitbasis
lfo.timebase.title=Timebase [frequency or note length]
lfo.timebase.desc=Einheit der Geschwindigkeit
lfo.phase_all.desc=Verschiebt die Phase des Moduls
lfo.phase_offset.desc=Verschiebt die Phase des rechten Kanals
lfo.bipolar.desc=Legt den Wertebereich des Ausgangs auf '-1' bis '+1' fest

clock.rate.desc=Geschwindigkeit in Hertz
transport.timebase.title=Timebase [bars or beat-length]
transport.timebase.desc=Einheit der Geschwindigkeit
transport.length.desc=Wellenlänge des Phasensignals des Devices, basierend auf der aktuellen Zeitbasis
transport.offset.desc=Timing-Offset in der Einheit der Zeitbasis. Positive Werte ziehen das Ausgangssignal zeitlich nach vorne, negative Werte verzögern das Signal
transport.shuffle.desc=Verwendet die aktuelle Groove-Einstellung der Transportsteuerung (falls aktiviert) für das Modul
transport.free-run.desc=Die Wiedergabe läuft weiter, unabhängig vom aktuellen Status der Transportsteuerung


#envelope.
envelope.signal_in.desc=Eingangssignal, das durch den Hüllkurvengenerator skaliert wird
envelope.signal_slope_in.desc=Signal, das skaliert wird
envelope.gate_in.desc=Ein Signal mit Status high-aktiv startet die Attack-Phase, low-aktiv startet die Release-Phase
envelope.gate_pre-cord.desc=Pre-Cord, das die Gate-Signale der empfangenen Noten des Devices mit dem Gate-Eingang verbindet
envelope.trigger_in.desc=Ein Triggersignal startet die Attack-Phase\n
envelope.trigger_pre-cord.desc=Pre-Cord, das die Gate-Signale der empfangenen Noten des Devices mit dem Trigger-Eingang verbindet
envelope.signal_out.desc=Das durch den Hüllkurvengenerator bearbeitete Signal
envelope.signal_slope_out.desc=Signalausgang
envelope.env_out.desc=Hüllkurvensignal
envelope.modulator.title=Modulator-Ausgang
envelope.modulator.desc=Zur kabellosen Steuerung von Parametern
envelope.attack.desc=Anstiegszeit von dem aktuellen Wert der Hüllkurve zu 100 %
envelope.decay.desc=Abstiegszeit nach der Attack-Phase
envelope.sustain.desc=Pegel nach dem Ende der Decay-Phase
envelope.release.desc=Abstiegszeit vom momentanen Hüllkurvenwert zu 0 %
envelope.attack_curve.desc=Kurvenform der Attack-Phase ('0 %' entspricht linear)
envelope.decay_curve.desc=Kurvenform der Decay-Phase ('0 %' entspricht linear)
envelope.release_curve.desc=Kurvenform der Release-Phase ('0 %' entspricht linear)
envelope.lifetime.desc=Wenn das Device polyphon ist, sind Stimmen so lang aktiv, bis die Hüllkurve vollständig durchlaufen ist

ad_module.looping.desc=Startet die Hüllkurve neu, so lange am Trigger-Eingang ein Signal anliegt, das high-aktiv ist
follower.signal_in.desc=Signal, dessen Hüllkurve extrahiert werden soll
follower_rf.rise.desc=Übergangsdauer bei zunehmenden Pegeln
follower_rf.fall.desc=Übergangsdauer bei abnehmenden Pegeln
follower_rf.avg_mode.title=Averaging Mode [peak or RMS]
follower_rf.avg_mode.desc=Schaltet zwischen schneller und langsamer Mittelwertbildung (Averaging) um
follower.time.desc=Übergangsgeschwindigkeit zwischen allen Pegeln
follower.rms.desc=Verwendet RMS zur Mittelwertbildung. RMS-Werte geben eher die empfundene Lautstärke wieder und nicht die reinen Signalspitzen
slope_↗.time.desc=Verzögerungszeit für ansteigende Signalflanken
slope_↘︎.time.desc=Verzögerungszeit für fallende Signalflanken


#filter.
filter.signal_in.desc=Signal, das gefiltert werden soll
filter.cutoff_in.desc=Eingang zur Steuerung des Cutoffs
filter.out.desc=Ausgangsignal
filter.cutoff.desc=Frequenz, bei welcher der Pegel um 3dB abgesenkt wird
filter.reso.desc=Feedback-Anteil innerhalb des Filters
filter.keytrack.desc=Anteil, mit dem vom Device empfangene Tonhöhensignale die Cutoff-Frequenz des Filters steuern
filter.slope.title=Slope [various]
filter.slope.desc=Flankensteilheit des Filters, in dB/Oktave
filter.poles.title=Poles [each pole represents another -6 dB/oct]
filter.poles.desc=Flankensteilheit des Filters
filter.linearity.title=Linearity [symmetric or asymmetric]
filter.linearity.desc=Legt die Art der Resonanzverstärkung fest
filter.enable_embed.title=Filter Enabled [toggle]
filter.enable_embed.desc=Aktiviert oder deaktiviert das Filter
filter.gain_embed.desc=Verstärkung am Filtereingang
filter.feg_embed.desc=Anteil der Modulation der Filterfrequenz durch den Filterhüllkurvengenerator (EG)

svf.cutoff.desc=Frequenz, bei welcher der Pegel um 3dB abgesenkt wird (oder die Mittenfrequenz eines Bandpassfilters liegt)
svf.mode.title=Filter Mode [low-, band-, or high-pass]
svf.mode.desc=Art des verwendeten Filters
comb.cutoff.desc=Frequenz, bei welcher der Pegel um 3dB abgesenkt wird
comb.reso.desc=Feedback-Anteil innerhalb des Filters
comb.feedback_invert.title=Feedback Polarity [normal or inverted]
comb.feedback_invert.desc=Legt die Phasenlage des Feedbacksignals fest


#shaper.
shaper.signal_in.desc=Signal, das bearbeitet werden soll
shaper.out.desc=Bearbeitetes Ausgangssignal

chebyshev.amount.desc=Oberton, der verstärkt werden soll ('3.0' bedeutet beispielsweise eine Oktave und eine Quinte aufwärts)
distortion.amount.desc=Grad der Verstärkung
quantizer.amount.desc=Legt den Pegel der einzelnen Schritte respektive die Auflösung des Quantisierers fest
rectifier.positive_amount.desc=Skalierung, die für alle positiven Werte verwendet wird
rectifier.negative_amount.desc=Skalierung, die für alle negativen Werte verwendet wird
wavefolder.amount.desc=Grad der Verstärkung, bevor das Signal gefaltet wird
curve.low_out.desc=Pegel des niedrigsten Ausgangssignals
curve.high_out.desc=Pegel des höchsten Ausgangssignals
curve.curve.desc=Verwendete Kurvenform, wobei '0 %' einem linearen Verlauf entsprechen. Positive Werte erzeugen eine logarithmische und negative Werte eine exponentiale Kurvenform 


#delay.
delay.signal_in.desc=Signal, das verzögert werden soll
delay.cutoff_in.desc=Eingang, mit dessen Signal die Delay-Zeit gesteuert wird
delay.out.desc=Ausgang des verzögerten Signals
delay.unit.title=Delay Unit [time or note duration]
delay.unit.desc=Einheit, mit der die Delay-Zeit eingestellt wird
delay.time.desc=Zeitbasierte Einstellung der Delay-Zeit
delay.beats.title=Beats of Delay [1 to 8]
delay.beats.desc=Anzahl der Schläge, die für die Delay-Zeit verwendet werden
delay.offset.desc=Verschiebt die verwendeten Schläge des Delays, mit klickbaren Voreinstellungen für gerade, triolische oder punktierte Werte
delay.feedback.desc=Feedback-Anteil des Ausgangssignals
delay.low-pass.desc=Cutoff-Frequenz des Tiefpassfilters im Feedback-Signal
delay.clipping.title=Feedback clipping mode [soft or hard]
delay.clipping.desc=Art des Clippings im Feedback-Loop

long_delay.out.desc=Ausgang des verzögerten Signals \n\nHinweis: Fügen Sie dieses Modul zwischen zwei Module ein, um einen Feedback-Loop zu erzeugen. Es ist speziell dafür ausgelegt, um Feedback-Verbindungen zu erstellen.
all-pass.time.desc=Dauer des Delays
all-pass.gain.desc=Grad der Lautstärkekompensation. Eine Einstellung von '100 %' bedeutet die Auslöschung des Effekts
recorder.signal_in.desc=Signal, das aufgenommen werden soll
recorder.record_in.desc=Legt fest, ob die Aufnahme startet \n\nHinweis: Dieser Eingang ist mono.
recorder.play_in.desc=Legt fest, ob die Wiedergabe startet \n\nHinweis: Dieser Eingang ist mono.


#mix.
mix.signal_in.desc=Eingangssignal
mix.signal_in1.desc=Eingangssignal 1
mix.signal_in2.desc=Eingangssignal 2
mix.signal_in2and.desc=Eingangssignal 2 etc.
mix.signal_out1.desc=Ausgangssignal 1
mix.signal_out2.desc=Ausgangssignal 2
mix.signal_out2and.desc=Ausgangssignal 2 etc.
mix.out.desc=Ausgangssignal

blend.mix.desc=Mischverhältnis zwischen Eingang 1 und 2
blend.mode.title=Blending Mode [equal gain or equal power]
blend.mode.desc=Modus der Überblendung von zwei Signalen
mixer.signal_in.desc=Eingangsignal Kanal 1
mixer.signal_in2.desc=Eingangsignal Kanal 2
mixer.signal_in3.desc=Eingangsignal Kanal 3
mixer.signal_in4.desc=Eingangsignal Kanal 4
mixer.signal_in5.desc=Eingangsignal Kanal 5
mixer.signal_in6.desc=Eingangsignal Kanal 6
mixer.volume.desc=Lautstärkeeinstellung von Kanal 1
mixer.panning.desc=Position im Stereopanorama von Kanal 1
mixer.solo_mute.title=Ch 1 Solo & Active [toggles]
mixer.solo_mute.desc=Solo-Status (S) und Mute-Status (Lautsprechersymbol) von Kanal 1
pan.placement.desc=Position im Stereopanorama für das eintreffende Signal
stereo_width.width.desc=Stereobreite des eintreffenden Signals ('100 %' bedeutet keine Änderung)
select.logic_in.desc=Ein niedriger Eingangspegel sendet Eingang 1 zum Ausgang, ein hoher Pegel sendet Eingang 2 zum Ausgang
toggle.active.desc=Legt fest, ob das Eingangssignal zum Ausgang weitergeleitet wird oder nicht
merge.select.desc=Legt fest, welche Eingänge zum Ausgang weitergeleitet werden
merge.inputs.desc=Anzahl der Eingänge
merge.interpolation.title=Interpolation [nearest or linear]
merge.interpolation.desc=Legt die Anzahl der Eingänge fest, die gleichzeitig zum Ausgang gesendet werden: ein Eingang (nearest) oder eine Mischung aus zwei nebeneinanderliegenden Eingängen (linear)
merge.wrap.desc=Verschiebt den Wertebereich des Select-Eingangs, sodass ein hoher Select-Wert wieder den Eingang 1 auswählt
merge.normalize.desc=Verwendet einen Wertebereich von '0' bis '+1' für den Select-Eingang, unanhängig von der Anzahl der Eingänge
split.select.desc=Legt fest, zu welchen Ausgängen das Eingangssignal weitergeleitet werden soll
split.outputs.desc=Anzahl der Ausgänge
split.interpolation.title=Interpolation [nearest or linear]
split.interpolation.desc=Legt die Anzahl der Ausgänge fest, zu denen das Eingangssignal gleichzeitig gesendet werden soll: ein Ausgang (nearest) oder eine Mischung aus zwei nebeneinanderliegenden Ausgängen (linear)
split.wrap.desc=Verschiebt den Wertebereich des Select-Eingangs, sodass ein hoher Select-Wert wieder den Eingang 1 auswählt
split.normalize.desc=Verwendet einen Wertebereich von '0' bis '+1' für den Select-Eingang, unanhängig von der Anzahl der Ausgänge
lr_gain.left.desc=Verstärkung des linken Kanals
lr_gain.right.desc=Verstärkung des rechten Kanals
stereo_merge.left.desc=Der linke Kanal eines Stereo-Ausgangssignals
stereo_merge.right.desc=Der rechte Kanal eines Stereo-Ausgangssignals
stereo_merge.mid.desc=Der Mittenanteil eines Stereo-Ausgangssignals
stereo_merge.side.desc=Der Seitenanteil eines Stereo-Ausgangssignals
stereo_split.left.desc=Der linke Kanal des Stereo-Eingangssignals
stereo_split.right.desc=Der rechte Kanal des Stereo-Eingangssignals
stereo_split.mid.desc=Der Mittenanteil des Stereo-Eingangssignals
stereo_split.side.desc=Der Seitenanteil des Stereo-Eingangssignals


#level.
level.signal_in.desc=Signal, das bearbeitet werden soll
level.signal_in1.desc=Eingangssignal 1
level.signal_in2.desc=Eingangssignal 2
level.mod_in.desc=Modulationssignaleingang
level.out.desc=Ausgangssignal
level.bipolar.title=Bipolar [toggle]
level.bipolar.desc=Legt den Bereich aller Regler von '-100 %' ('-1') bis '+100 %' ('+1') fest
level.stereo-ize.desc=Verwendet den invertierten Wert für den rechten Kanal

level_module.value.desc=Pegel in Dezibel
value.value.desc=Pegel als Prozentangabe. '100 %' gibt den Maximalwert ('+1') am Ausgang aus
attenuate.amount.desc=Anteil des Eingangssignals, das weitergeleitet wird
bias.amount.desc=Prozentwert, der zum Signal addiert wird
gain_-_vol.amount.desc=Dezibelwert, mit dem das Eingangssignal skaliert wird, konfiguriert als Lautstärkeregler
gain_-_db.amount.desc=Dezibelwert, mit dem das Eingangssignal skaliert wird
velo_mult.depth.desc=Grad der Abschwächung des Eingangssignals. \n\n Bei '0 %' wird die Anschlagsstärke ignoriert und das Signal wird unverändert zum Ausgang weitergeleitet. Bei allen anderen Werten wird das Signal abhängig von der Anschlagsstärke abgeschwächt: Eine maximale Anschlagsstärke führt zur unveränderten Weiterleitung des Eingangssignals, niedrigere Anschlagsstärken schwächen das Eingangssignal proportional ab.
velo_mult.slew.desc=Zeit, die benötigt wird, bis der neue Pegel der Anschlagsstärke erreicht ist
velo_mult.response.desc=Kurvenform der Übergangszeit, für verschiedene Zwecke:
average.amount.desc=Legt die Zeitspanne fest, von dem der Durchschnittswert ermittelt werden soll
bend.amount.desc=Verwendete Kurvenform. '0 %' bedeutet keine Veränderung, mit positiven Werten bekommt die Kurve eine logarithmische Form, mit negativen Werten eine exponentielle Form
clip.level.desc=Pegel, ab dem das Signal clippen soll
curve.xy.title=Clickable Curve Interface
curve.xy.desc=Hier befinden sich Punkte für den höchsten Ein/Ausgangspegel \n[+], den niedrigsten Ein/Ausgangswert [-] und ein Punkt zum Einstellen der Kurvenform (in der Mitte der Linie)
curve.low_in.desc=Niedrigster Eingangspegel, der neu zugeordnet wird (falls Eingangspegel diesen Wert unterschreiten, wird trotzdem der eingetregene Wert verwendet)
curve.high_in.desc=Höchster Eingangspegel, der neu zugeordnet wird (falls Eingangspegel diesen Wert überschreiten, wird trotzdem der eingetregene Wert verwendet)
lag.amount.desc=Zeit, die benötigt wird, bis der aktuelle Eingangspegel erreicht ist
level_scaler.low.desc=Level output when '0' is received at input
level_scaler.high.desc=Level output when '1' is received at input
level_scaler.graphic.title=Graphic Interface
level_scaler.graphic.desc=Alternate, logarithmic display for adjusting the levels and visualizing the current output
value_scaler.low.desc=Ausgangspegel (als Prozentangabe), der gesendet wird, wenn das Eingangssignal den Wert '0' hat
value_scaler.high.desc=Ausgangspegel (als Prozentangabe), der gesendet wird, wenn das Eingangssignal den Wert '1' hat
value_scaler.bipolar.desc=Ausgangspegel (als Prozentangabe), der gesendet wird, wenn das Eingangssignal den Wert '1' hat
am/rm.carrier_in.desc=Eingang für das Carrier-Signal
am/rm.modulator_in.desc=Eingang für das Modulator-Signal
am/rm.amount.desc=Crossfader, der zwischen dem Carrier-Signal ('0 %'), Amplitudenmodulation (des Carrier- und Modulatorsignals; '50 %') und schließlich Ringmodulation ('100 %') überblendet
am/rm.vca_note.title=Note: VCA simulation
am/rm.vca_note.desc=Wenn dieser Regler auf '50 %' eingestellt ist (Standardeinstellung), verschiebt dieses Modul das eintreffende Modulatorsignal in einen unipolaren Wertebereich, und kann so eine einfache VCA-Konfiguration (Voltage-Controlled Amplifier) ersetzen.
hold.logic_in.desc=Ein high-aktives Signal 'friert' den momentanen Wert des Eingangspegels ein, ein low-aktives Signal leitet das Eingangssignal unverändert an den Ausgang weiter
sample_/_hold.logic_in.desc=Ein Trigger-Signal schickt den momentanen Wert des Eingangssignals an den Ausgang


#pitch.
pitch.in.desc=Eingang für ein Tonhöhensignal
pitch.out.desc=Ausgang für das Tonhöhensignal
pitch.offset.title=Note: Processor or Generator
pitch.offset.desc=Dieses Modul veschiebt das Eingangssignal um einen bestimmen Wert. Falls kein Eingangssignal anliegt, erzeugt das Modul trotzdem ein Ausgangssignal, basierend auf dem Wert der Verschiebung.

pitch_module.pitch.title=Pitch
pitch_module.pitch.desc=Note, die den Wert des Ausgangssignals bestimmt \n(umschaltbar im Inspektor-Panel)
pitch_module.freq.title=Pitch
pitch_module.freq.desc=Frequenz, die den Wert des Ausgangssignals bestimmt \n(umschaltbar im Inspektor-Panel)
pitch_module.value.desc=Tonhöhe, bei welcher der Wert null der Referenznote 'C3' entspricht, einstellbar in Halbtonschritten und Cents
pitch_module.stereo-ize.desc=Verwendet den invertierten Wert der Tonhöhe (basierend auf '0' bzw. 'C3') für den rechten Kanal. \n\nBei einer Einstellung von 'C4' ('+12') wird beispielsweise der Wert 'C2' ('-12') an den rechten Kanal gesendet. Die Einstellung 'A2' ('-3') wird den Wert 'E3' ('+3') am rechten Kanal ausgeben
pitch_module.disp_pitch.title=Show Notes
pitch_module.disp_pitch.desc=Zeigt die Tonhöhe als einen Notenwert an
pitch_module.disp_freq.title=Show Frequency
pitch_module.disp_freq.desc=Zeigt die Tonhöhe als Frequenz an
octaver.amount.desc=Optionen der Oktavverschiebung der Tonhöhe:
ratio_module.ratio.title=Pitch Ratio [0 to 99 : 1 to 99]
ratio_module.ratio.desc=Skaliert die eintreffende Tonhöhe mit Hilfe eines Zähler-Nenner-Paars. \n\nEinige Beispiele: \n• '1:1' bedeutet keine Veränderung, genausowenig wie '2:2', '7:7' etc. \n• '6:1' multipliziert um Faktor 6 (600%). \n• '1:4' verringert die Tonhöhe um 25%  (oder um zwei Oktaven nach unten). \n• '4:3' erhöht die Tonhöhe auf ca. 133 % (oder eine reine Quarte)
transpose.amount.desc=Tonhöhenverschiebung, die zum eintreffenden Signal addiert wird
transpose.stereo-ness.desc=Legt fest, bei welchen Kanälen die Tonhöhe veschoben werden soll:
transpose.numeric.title=Note: Working in even semitones
transpose.numeric.desc=Indem Sie auf die Zahl vor dem Komma klicken und ziehen, können Sie die Tonhöhe in Halbtonschritten verschieben, ohne die Nachkommastelle (also die Cent-Einstellung) zu verändern. \n\nWie bei allen relativen Tonhöhenwerten (wie dem Micropitch-Device) können Sie auch hier einen Bruch eingeben. Wenn Sie beispielsweise '3/2' für eine reine Quinte eintippen, wird daraus der Wert '7.02 st'.
pitch_quantize.in.desc=Eingang für das Signal, das auf vorher festgelegte (oder gespielte) Noten quantisiert werden soll
pitch_quantize.pitch_steps.title=Pitch Steps [12 toggles]
pitch_quantize.pitch_steps.desc=Legt fest, welche Noten (C, C#, D etc.) für die Quantisierung verwendet werden sollen
pitch_quantize.pitch_leds.title=Pitch Steps [12 LEDs]
pitch_quantize.pitch_leds.desc=Zeigt an, welche Noten (C, C#, D etc.) momentan gehalten und für die Quantisierung verwendet werden
pitch_quantize.distribution.title=Note Distribution [uniform or nearest]
pitch_quantize.distribution.desc=Legt fest, ob das Eingangssignal gleichmäßig (Uniform) auf die aktivierten Noten verteilt wird, oder ob der jeweils nächste Wert (Nearest) verwendet wird. Dies resultiert in geraden oder ungeraden Rhythmen
pitch_quantize.use_notes.desc=Pre-Cord, das die Notensignale des Devices verwendet, um Noten für die Quantisierung ein- oder auszuschalten
pitch_quantize.note_source.title=Note Source [menu]
pitch_quantize.note_source.desc=Noteneingang, dessen Signal die Quantisierungsnoten bestimmt
by_semitone.in.desc=Eingangssignal, das auf exakte Halbtöne quantisiert werden soll
pitch_scaler.low.desc=Tonhöhe, die gesendet wird, wenn am Eingang der Wert '0' anliegt
pitch_scaler.high.desc=Tonhöhe, die gesendet wird, wenn am Eingang der Wert '1' anliegt
pitch_scaler.value_help.title=Low and High Pitch Values
pitch_scaler.value_help.desc=Legt die Tonhöhe als ein von Bitwig lesbaren Wert fest. Der Wert '0' steht für die Tonhöhe 'C3' (mittleres C), und jede ganze Zahl ist ein Halbtonschritt
zero_crossings.low.desc=Die niedrigste Frequenz, die analysiert wird
zero_crossings.hi.desc=Die höchste Frequenz, die analysiert wird


#math.
math.op_a.desc=Eingangssignal A
math.op_b.desc=Eingangssignal B
math.signal_in.desc=Eingangssignal
math.signal_in1.desc=Eingangssignal 1
math.signal_in2.desc=Eingangssignal 2
math.signal_in2and.desc=Eingangssignal 2 etc.
math.out.desc=Ausgang, der das resultierende Signal ausgibt
math.signal_out.desc=Ausgangssignal
math.remainder_out.desc=Anteil des Originalsignals, das entfernt wurde​

constant.value.desc=Definierter Wert
abs.sign.desc=Polarität des eintreffenden Signals (gibt eine '+1' für einen positiven Wert oder null aus, und eine '-1' für negative Werte)
minmax.max.desc=Gibt den größeren Wert der beiden Eingangssignale aus
minmax.min.desc=Gibt den kleineren Wert der beiden Eingangssignale aus
quantize.step_size.desc=Intervall der Ausgangswerte. Eine Schrittgröße von '0.1' ('10 %') würde beispielsweise nur Ausgangswerte von '0', '±0.1', '±0.2' etc. zur Folge haben


#logic.
logic.op_a.desc=Einganssignal A, das analysiert wird
logic.op_b.desc=Einganssignal B, das analysiert wird
logic.clock_in.desc=Eingang für ein Clock-Signal
logic.reset_in.desc=Setzt den internen Zähler beim nächsten Trigger-Signal auf null zurück (und sendet so selbst ein Trigger-Signal am Ausgang)
logic.out.desc=High-aktiv ('+1') für wahr, \n low-aktiv ('0') für falsch
logic.gate_out.desc=High-aktiv ('+1') für ein, \n low-aktiv ('0') für aus

button.gate.desc=Schalter, der den Status des Ausgangs umschaltet
button.on_text.title=On Label (text)
button.on_text.desc=Optionaler Text, der angezeigt wird, wenn der Schalter eingeschaltet ist
button.off_text.title=Off Label (text)
button.off_text.desc=Optionaler Text, der angezeigt wird, wenn der Schalter ausgeschaltet ist
trigger.signal_in.desc=Eingangssignal, das mit dem Ausgangssignal gemischt wird
trigger.trigger.desc=Schalter, der einen kurzen high-aktiven Impuls sendet
clock_divide.clock_interval.desc=Legt die Anzahl der Trigger-Signale fest, die empfangen werden müssen, bevor ein Trigger-Signal ausgegeben wird
clock_quantize.trigger_in.desc=Eingang für ein Trigger-Signal, mit dem beim nächsten Clock-Impuls ein Gate-Signal am Ausgang ausgegeben wird
clock_quantize.mode.title=Output Mode [T(rigger) or G(ate)]
clock_quantize.mode.desc=Legt fest, ob das Gate-Ausgangssignal mit der abfallenden Flanke des Clock-Impulses beendet werden soll (Trigger), oder mit der ansteigenden Flanke des nächsten Clock-Impulses (Gate)
gate_length.trigger_in.desc=Trigger-Eingang, dessen Signal einen neuen Logik-Impuls am Ausgang auslöst
gate_length.length.desc=Dauer des Logik-Impulses, das vom Trigger-Eingang ausgelöst wird
gate_repeat.gate_in.desc=Startet oder stoppt die Logik-Impulse
gate_repeat.length.desc=Dauer jedes Logik-Impulses
gate_delay.gate_in.desc=Signal, das als Logik-Signal behandelt werden soll und bei dem entweder das gesamte Signal oder bestimmte Flanken verzögert werden
gate_delay.delay.desc=Legt die Dauer der Verzögerung fest \n\nHinweis: Wenn ein Modus ausgewählt ist, bei dem nur eine der beiden Flanken verzögert wird, muss die Dauer des betreffenden Abschnitts länger sein als die Delay-Zeit
gate_delay.mode.desc=Legt festm welche Flanke verzögert werden sollen: \n
latch.toggle_in.desc=Trigger-Eingang, dessen Signal den Status des Ausgangs umschaltet
latch.set_in.desc=Trigger-Eingang, dessen Signal den Status des Ausgangs auf high-aktiv setzt
latch.reset_in.desc=Trigger-Eingang, dessen Signal den Status des Ausgangs auf low-aktiv setzt
n-latch.trigger_in1.desc=Trigger-Eingang 1
n-latch.trigger_in2and.desc=Trigger-Eingang 2 etc.
n-latch.gate_out1.desc=High-aktiv ('+1'), wenn der entsprechende Eingang das neueste Trigger-Signal empfangen hat. Andernfalls ist der Ausgang low-aktiv ('0').
n-latch.gate_out2and.desc=Äquivalent zu Gate-Ausgang 1 etc. 
n-latch.count.desc=Anzahl der verfügbaren Ein- und Ausgänge
\=.exact.desc=Legt fest, dass beide Signale die identischen Fließkommawerte aufweisen müssen. Diese Einstellung könnte für Signale zu strikt sein, dessen Wert sich kontinuierlich verändert.
\=.table.title=Truth table
\=.table.desc=A       B       =\n0       0       1\n0       1       0\n1       0       0\n1       1       1
≥.table.title=Truth table
≥.table.desc=A       B       ≥\n0       0       1\n0       1       0\n1       0       1\n1       1       1
≤.table.title=Truth table
≤.table.desc=A       B       ≤\n0       0       1\n0       1       1\n1       0       0\n1       1       1
>.table.title=Truth table
>.table.desc=A       B       >\n0       0       0\n0       1       0\n1       0       1\n1       1       0
<.table.title=Truth table
<.table.desc=A       B       <\n0       0       0\n0       1       1\n1       0       0\n1       1       0
≠.exact.title=Exact Mismatches Only [toggle]
≠.exact.desc=Legt fest, dass beide Signale keine identischen Fließkommawerte aufweisen dürfen. Diese Einstellung könnte für Signale zu strikt sein, dessen Wert sich kontinuierlich verändert.
≠.table.title=Truth table
≠.table.desc=A       B       ≠\n0       0       0\n0       1       1\n1       0       1\n1       1       0
not.signal_in.desc=Eingang, dessen Signal invertiert werden soll
not.table.title=Truth table
not.table.desc=In      NOT\n1       0\n0       1
and.table.title=Truth table
and.table.desc=A       B       AND\n0       0       0\n0       1       0\n1       0       0\n1       1       1
nand.table.title=Truth table
nand.table.desc=A       B       NAND\n0       0       1\n0       1       1\n1       0       1\n1       1       0
or.table.title=Truth table
or.table.desc=A       B       OR\n0       0       0\n0       1       1\n1       0       1\n1       1       1
nor.table.title=Truth table
nor.table.desc=A       B       NOR\n0       0       1\n0       1       0\n1       0       0\n1       1       0
xor.table.title=Truth table
xor.table.desc=A       B       XOR\n0       0       0\n0       1       1\n1       0       1\n1       1       0
xnor.table.title=Truth table
xnor.table.desc=A       B       XNOR\n0       0       1\n0       1       0\n1       0       0\n1       1       1
