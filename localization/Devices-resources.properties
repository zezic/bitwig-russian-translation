device_general.pitch.desc=Device pitch offset, applied at note input
device_general.glide.desc=Portamento time of each new note (from the previous pitch)
device_general.legato.title=Legato Mode [toggle]
device_general.legato.desc=Applies glide only to overlapping notes
device_general.vel.desc=Available dynamic range when using the full range of note velocities
device_general.gain.desc=Gain applied at the output of the device (pre-FX chain)
device_general.pan.desc=Stereo pan position of the instrument output (pre-FX chain)
device_general.width.desc=Stereo width of the processed signal
device_general.mix.desc=Amount of processed signal at device output (blended with dry signal entering the device)
device_general.mix+wet.desc=Amount of processed signal, post Wet/Post FX chain (blended with dry signal entering the device)
device_general.out.desc=Output level of the device
device_general.out+fx.desc=Output level of the device (post-FX chain)

device_general.latency_comp.title=Latency Offset [shown in milliseconds (samples)]
device_general.latency_comp.desc=Offset amount in samples, where negative values shift the audio to be earlier
device_general.latency_trainer.title=Train Latency Offset [trigger]
device_general.latency_trainer.desc=Clicking automatically finds the appropriate latency offset

device_general.spectrum_resolution.desc=Relative resolution of the spectrum display(s)
device_general.spectrum_speed.desc=General rise/fall time of the spectrum display(s)
device_general.spectrum_tilt.desc=Visual boost per successive octave
device_general.spectrum_domain.desc=Frequency display domain
device_general.spectrum_range_low.desc=Quietest amplitude displayed
device_general.spectrum_range_high.desc=Loudest amplitude displayed
device_general.spectrum_style.desc=Drawing method for each input

device_general.note_chain.desc=Pre chain, for inserting devices/plug-ins to process notes (etc.) before they reach the instrument
device_general.fx_chain.desc=FX chain, for inserting devices/plug-ins to process the device's output
device_general.wet_fx_chain.desc=FX chain, for inserting devices/plug-ins to process the effect's wet signal only (pre Mix knob)
device_general.feedback_fx.desc=FX chain, for inserting devices/plug-ins within the effect's feedback loop (pre Mix knob)
device_general.source_fx_chain.desc=FX chain, for inserting devices/plug-ins to process the source note and audio signals
device_general.pre_fx_chain.desc=FX chain, for inserting devices/plug-ins to process the device's incoming audio/note signals
device_general.post_fx_chain.desc=FX chain, for inserting devices/plug-ins to process the effect's output (pre Mix knob)
device_general.audio_sidechain_chain.desc=FX chain, for inserting devices/plug-ins to process the sidechain audio before analysis
device_general.hw_cv_out_chain.desc=Dedicated chain for inserting HW CV Out devices

device_general.audio_path.title=Audio Source
device_general.audio_path.desc=Path for incoming audio signal
device_general.audio_in_path.title=Audio Destination
device_general.audio_in_path.desc=Path for outgoing audio signal
device_general.note_path.title=Note Source
device_general.note_path.desc=Path for incoming note signal

device_general.modulator.title=Modulator Out
modulator_out.modulator.desc=For wireless control of parameters

device_general.adsr_attack.desc=Rise time (at note on) from current envelope value to 100%
device_general.ahdsr_hold.desc=Hold time after the attack stage
device_general.ahdsr_decay.desc=Fall time after the hold stage
device_general.adsr_decay.desc=Fall time after the attack stage
device_general.adsr_sustain.desc=Level where the decay stage ends
device_general.adsr_release.desc=Fall time (on note off) from current envelope value to 0%
device_general.adsr_velo.desc=Available amplitude range when using the full range of note velocities
device_general.adsr_curve.desc=Slope for this stage ('0 %' is linear)
device_general.adsr_segment_curve.desc=Slope of this segment, where '0 %' is linear
device_general.feg_modulator.title=Filter Envelope Generator (FEG)
device_general.feg_modulator.desc=Modulator source for the FEG, should you want to apply it elsewhere
device_general.aeg_modulator.title=Amplitude Envelope Generator (AEG)
device_general.aeg_modulator.desc=Modulator source for the AEG, should you want to apply it elsewhere

device_general.filter_mode.desc=Type of filter used:
device_general.filter_freq.desc=Cutoff/center frequency
device_general.filter_reso.desc=Resonance of the filter section
device_general.filter_kbt.desc=Amount that the pitch of incoming note signal affects the filter frequency
device_general.filter_eg.desc=Depth of filter frequency modulation from the filter EG
device_general.filter_pre-gain.desc=Gain applied before filtering
device_general.filter_post-gain.desc=Gain applied after filtering


#analysis.
analysis.a_channel.desc=Channel of incoming audio displayed:
analysis.b_enable.title=Show Trace B [toggle]
analysis.b_enable.desc=Displays trace B
analysis.b_channel.desc=Channel of selected audio displayed:
analysis.b_path.title=Trace B Source
analysis.b_path.desc=Path of incoming audio signal for trace B
oscilloscope-device.mode.desc=Scope trigger mode:
oscilloscope-device.trigger_hold.desc=Minimum time between triggers
oscilloscope-device.trigger_level.desc=Threshold for trigger
oscilloscope-device.trigger_slope.desc=Direction that threshold should be passed
oscilloscope-device.freeze.title=Freeze [toggle]
oscilloscope-device.freeze.desc=Holds the display
oscilloscope-device.scale.desc=Zoom level as trace print speed
oscilloscope-device.kbt.desc=Zoom level tracks the last incoming note's pitch
oscilloscope-device.kbt_offset.desc=Semitone offset for keyboard tracking
oscilloscope-device.gain.desc=Gain for this trace
oscilloscope-device.link.desc=Uses Trace A's gain setting for Trace B
oscilloscope-device.display.title=Oscilloscope Display
oscilloscope-device.display.desc=Amplitude-domain representative for both trace A (orange) and, when enabled, trace B (blue)
spectrum_analyzer.fall_rate.desc=Relative speed at which the spectrum updates, where '1.00' is frozen and '0.00' is very fast
spectrum_analyzer.display.title=Spectrum Display
spectrum_analyzer.display.desc=Frequency spectra for both trace A (blue) and, when enabled, trace B (orange)


#audio_fx.
audio_fx.wide.desc=Inverts the right processed channel for a broader sound
audio_fx.delay_time.desc=Delay length before LFO modulation
audio_fx.feedback.desc=Amount of output signal fed back
audio_fx.lfo_wave.desc=Waveform used by the LFO
audio_fx.lfo_rate.desc=Frequency of the LFO
audio_fx.lfo_depth.desc=Amount that the LFO modulates delay time
audio_fx.lfo_retrig.desc=Restarts the LFO whenever a new note arrives

blur.time.desc=Delay time for this all-pass unit
blur.feedback.desc=Feedback amount for this all-pass unit
blur.display.title=Graphical Interface
blur.display.desc=Displays the outgoing audio spectrum, along with a dots for controlling the Delay Time (left to right) and Feedback (up and down) of each all-pass unit
chorus.high_cut.desc=Cutoff where higher frequencies begin to be attenuated
chorus.lfo_rphase.desc=Relative phase shift for the LFO modulating the right channel
chorus.display.title=LFO Visualization
chorus.display.desc=Shows the LFO applied to left channel delay (white) and the phase-shifted version applied to the right channel delay (red)
comb.frequency.desc=Frequency for the comb filter (implemented as the corresponding delay time)
comb.display.title=Spectrum Display
comb.display.desc=Displays the outgoing audio spectrum, along with a dot for controlling the Frequency (left to right) and bipolar Feedback (up and down). \n\nThe shaded spectrum represents the incoming signal. The bright curve shows the outgoing signal.
flanger.feedback_polarity.title=Feedback Polarity
flanger.feedback_polarity.desc=Whether feedback is passed through with its original sign (+) or inverted (-)
freq_shifter.range.desc=Maximum frequency shift available, which is scaled by the Frequency Shift parameter
freq_shifter.amount.desc=Current amount of frequency shift, which is multiplied by the Frequency Range parameter
freq_shifter.left_right.desc=Offset of the left channel's frequency shift amount \n\nBetween left and right, the total frequency shift adds up to 200 %. Some example settings: \n• '0 %' is a mono setting, using the same shift amount (100 %) for the left and right channels. \n• '100 %' add a second 100 % to the left side and subtracts it from the right (for a 200 % to 0 % balance). \n• '50 %' adds an additional 50 % to the left channel and subtracts 50 % from the right (for a 150 % to 50 % balance). \n• '-33.33 %' subtracts a third from the left channel (for a 66.66 % to 133.33 % balance).
phaser.frequency.desc=Frequency for the cascaded all-pass filters
phaser.frequency_offset_left.desc=Frequency offset for the left filter channel
phaser.frequency_offset_right.desc=Frequency offset for the right filter channel
phaser.poles.desc=Number of poles in use, which also roughly accounts for the number of peaks and notches in the resulting spectrum
phaser.low_cut.desc=Cutoff where lower frequencies begin to be attenuated, pre phaser
phaser.display.title=Graphical Interface
phaser.display.desc=Clickable circle labeled "P" represents primary filter frequency (left to right) and bipolar feedback amount (up and down). When left and right frequency offsets are in use, clickable "L" and "R" circles are also present. \n\nThe shaded spectrum represents the incoming signal. The bright curve shows the outgoing signal.
pitch_shifter.grain.desc=Changes the windowing rate as a fine adjustment control
ring-mod.path.title=Secondary Audio Source
ring-mod.path.desc=Audio source that is modulated with the device's incoming audio
ring-mod.frequency.desc=[When source is set to "Oscillator"] Sets the frequency of the sine oscillator
ring-mod.gain.desc=Amount of gain applied at the modulation stage
rotary.delay_mod.desc=Range of delay time modulation
rotary.amp_mod.desc=Range of volume modulation
treemonster.pitch.desc=Tuning offset for the sine oscillator
treemonster.threshold.desc=Level at which the sine oscillator is triggered
treemonster.speed.desc=Quickness of oscillator fade-in/-out when exceeding/falling below Threshold
treemonster.ring.desc=Crossfader blending between sine oscillator only ('0 %'), then amplitude modulation of the sine and source audio ('50 %'), and finally ring modulation of those signals ('100 %')
treemonster.low_freq.desc=Low cutoff (using a high-pass filter) of the frequency-detection band
treemonster.high_freq.desc=High cutoff (using a low-pass filter) of the frequency-detection band
treemonster.display.title=Graphical Interface
treemonster.display.desc=The shaded spectrum represents the incoming signal. The bright curve shows the outgoing signal. The current tracked pitch and level is shown by the moving crosshairs. \n\nCrossover frequencies are the clickable vertical lines, and Threshold is the yellow horizontal.
tremolo.depth.desc=Amount that the LFO modulates amplitude/volume


#container.
container.gain.desc=Gain applied at the output of the device (post-FX chain)
container.gain_nofx.desc=Gain applied at the output of the device
container.chains.title=Layer List
container.chains.desc=Scrollable list where each layer is present, along with a '+' icon for adding another one from the Pop-up Browser. \n\nSelecting a layer header expands its full device chain to the right of this device. Each layer can be soloed ('S'), muted ('M'), or have its level adjusted with the gain fader on the right. Like other objects, layers can be de-activated, colored, and renamed.
container.chains_selector.title=Layer List
container.chains_selector.desc=Scrollable list where each layer is present, along with a '+' icon for adding another one from the Pop-up Browser. \n\nThe icon at the start of each header shows if the layer is currently active (circle) or not (moon). The target layer's icon is colored yellow. (In Manual mode, the target layer as set with modulation is blue.) \n\nSelecting a layer header expands its full device chain to the right of this device. Each layer can have its level adjusted with the gain fader on the right. Like other objects, layers can be de-activated, colored, and renamed.
container.note_chains.title=Layer List
container.note_chains.desc=Scrollable list where each layer is present, along with a '+' icon for adding another one from the Pop-up Browser. \n\nSelecting a layer header expands its full device chain to the right of this device. Each layer had an LED on the right, indicating when it is outputting note signal. Like other objects, layers can be de-activated, colored, and renamed.
container.selector.title=Target Layer
container.selector.desc=Layer that receives new notes & audio. When switching from one layer to another, all notes/audio on the previous layer continue until completion, allowing for seamless transitions.\n\nIn any mode, clicking the circle (or sleeping moon) at the left of any layer header makes it the active layer. \n\nIn Manual mode, automation and modulators can control the active layer (the name serves as a modulator target). The active layer can also be changed by clicking and dragging on the name area here, or by clicking the increment/decrement buttons on the right.\n\nIn non-Manual modes, the active layer is set by the mode's rule. And clicking the mode icon overrides the mode's rule, staying on the current layer to allow for easier editing. (Click the icon again to toggle normal behavior.)
container.selector_mode.title=Voice Mode [various options]
container.selector_mode.desc=How the target layer is controlled:
container.selector_channel_all.title=All Channels [toggle]
container.selector_channel_all.desc=[When in Keyswitches, CC, or Program Change modes] Whether signals on all MIDI channels are used
container.selector_channel_single.title=MIDI Channel [1 to 16]
container.selector_channel_single.desc=[When in Keyswitches, CC, or Program Change modes] If not set to All, which MIDI channel is used
container.selector_base_key.title=Base Keyswitch [0 to 127]
container.selector_base_key.desc=Note that will switch to the first layer. Successive notes will be used for all other layers. For example, if set to C0 with three layers: \n• C0 will switch to layer 1. \n• C#0 will switch to layer 2. \n• D0 will switch to layer 3. \n\nNote: Pitches that are used as keyswitches will not trigger sound.
container.selector_cc.title=Control Change Message [0 to 127]
container.selector_cc.desc=Control change message whose entire range is split between the current layers. \n\nFor example, if set to CC1 (mod wheel) with four layers, values of: \n• 0-31 will switch to layer 1. \n• 32-63 will switch to layer 2. \n• 64-95 will switch to layer 3. \n• 96-127 will switch to layer 4.
container.selector_midi_learn.title=MIDI Learn [toggle]
container.selector_midi_learn.desc=Sets the channel and other mode-relevant data based on the next arriving MIDI message
container.x_control.desc=Current X position, crossfading between the A–C and B–D chains
container.y_control.desc=Current Y position, crossfading between the A–B and C–D chains
container.x_modulator.desc=Modulator source for the current X position, should you want to apply it elsewhere
container.y_modulator.desc=Modulator source for the current Y position, should you want to apply it elsewhere
container.low_chain.desc=Chain for inserting devices/plug-ins to process the low frequency band
container.mid_chain.desc=Chain for inserting devices/plug-ins to process the middle frequency band
container.high_chain.desc=Chain for inserting devices/plug-ins to process the high frequency band
container.low_gain.desc=Post-chain gain for the low frequency band
container.mid_gain.desc=Post-chain gain for the middle frequency band
container.high_gain.desc=Post-chain gain for the high frequency band

chain.chain.title=CHAIN Device Chain
chain.chain.desc=For inserting all manner of devices/plug-ins, easily saved as a signal flow preset
drum_machine.chain_scroll.title=Drum Chain Scroller
drum_machine.chain_scroll.desc=Scrolls thru the full set of cells (one available per note), leaving 16 editable at a time
drum_machine.chain_grid.title=Drum Chain Cells
drum_machine.chain_grid.desc=Empty cells are listed by trigger note (double-click to populate). \n\nOccupied chains visualize their device count and can be previewed (play triangle), S(oloed), and M(uted). \n\nNote: Right-click any cell to set up Choke relationships, where multiple cells (think of hi-hats) will only allow one member to sound at a time.
drum_machine.channel_pan.title=Selected Chain Panning [±100 %]
drum_machine.channel_pan.desc=Stereo panning position of selected chain
drum_machine.channel_volume.title=Selected Chain Volume [-∞ dB to +6.0 dB]
drum_machine.channel_volume.desc=Volume (and post meters) of selected chain
drum_machine.channel_solo.title=Selected Chain Solo [toggle]
drum_machine.channel_solo.desc=Solo status of selected chain
drum_machine.channel_mute.title=Selected Chain Mute [toggle]
drum_machine.channel_mute.desc=Mute status of selected chain
drum_machine.hide_detail=Hide internal returns
drum_machine.show_detail=Show internal returns
#fx_layer
fx_selector.note_path.title=Note/MIDI Source
fx_selector.note_path.desc=Path for incoming note and MIDI signals
#instrument_layer
#instrument_selector
mid-side_split.mid_chain.desc=Chain for inserting devices/plug-ins to process the middle portion of the incoming audio signal
mid-side_split.side_chain.desc=Chain for inserting devices/plug-ins to process the side portion of the incoming audio signal
mid-side_split.mid_gain.desc=Gain applied to the middle portion of the audio, before transforming it back into a left–right signal
mid-side_split.side_gain.desc=Gain applied to the side portion of the audio, before transforming it back into a left–right signal
multiband_fx-2.crossover.desc=Frequency where the low and high bands meet
multiband_fx-3.low_freq.desc=Frequency where the low and mid bands meet
multiband_fx-3.high_freq.desc=Frequency where the mid and high bands meet
multiband_fx-3.display.title=Graphical Interface
multiband_fx-3.display.desc=Each band is visualized with a colored circle (low band is red, mid band is yellow, high band is blue), which can be dragged up and down to change that band's gain. The low and high bands can also be dragged left to right, to adjust the corresponding crossover frequency.
#note_fx_layer
#note_fx_selector
replacer.filter_mode.desc=Type of filter used, pre-detection:
replacer.filter_freq.desc=Frequency of the analysis filter
replacer.filter_q.desc=Resonance of the analysis filter
replacer.filter_monitor.desc=Routes the analysis filter straight to the device's audio output, for tuning purposes
replacer.threshold.desc=Level around which note ons and offs are sent to the device chain
replacer.tolerance.desc=Width of the threshold area, with note ons sent when the high threshold is crossed, and note offs sent when returning below the low threshold
replacer.hold.desc=Time that a signal has to fall below the threshold area before a note off is sent to the device chain
replacer.note_pitch.desc=Note pitch sent into the device's chain
replacer.note_velocity.desc=Note velocity sent into the device's chain \n\nNote: This can be modulated.
replacer.chain.desc=Chain for inserting devices/plug-ins that will receive notes generated by the device and any audio processing that follows
replacer.display.title=Graphical Interface
replacer.display.desc=Displays the incoming audio signal (post-filter), along with a draggable blue line at the set Detection Threshold, additional visual lines showing the Detection Range, and a red line visualizing whether a note on (high) or note off (low) has been sent
stereo_split.left_chain.desc=Chain for inserting devices/plug-ins to process the left incoming audio signal
stereo_split.right_chain.desc=Chain for inserting devices/plug-ins to process the right incoming audio signal
stereo_split.left_gain.desc=Gain applied to the left channel
stereo_split.right_gain.desc=Gain applied to the right channel
xy.chains.desc=Full device chain for this quadrant of the mix grid
xy.interface.title=Graphical Interface
xy.interface.desc=The clickable circle ("M") both controls and visualizes the current mix position
#xy_fx
#xy_instrument

#container-legacies.
audio_mod.legacy.title=Note: Legacy Device
audio_mod.legacy.desc=This Bitwig v1 device is included for compatibility with old projects. These older MOD devices have been replaced by modulators, which can be added to any device or plug-in via the modulator pane. \n\nCurrent related devices: \n• Audio Rate modulator \n• Audio Sidechain modulator \n• Envelope Follower modulator \n• HW CV In modulator
lfo_mod.legacy.title=Note: Legacy Device
lfo_mod.legacy.desc=This Bitwig v1 device is included for compatibility with old projects. These older MOD devices have been replaced by modulators, which can be added to any device or plug-in via the modulator pane. \n\nCurrent related devices: \n• LFO modulator \n• Beat LFO modulator \n• Classic LFO modulator
note_mod.legacy.title=Note: Legacy Device
note_mod.legacy.desc=This Bitwig v1 device is included for compatibility with old projects. These older MOD devices have been replaced by modulators, which can be added to any device or plug-in via the modulator pane. \n\nCurrent related devices: \n• Expressions modulator \n• MIDI modulator \n• Keytrack modulator \n• Note Sidechain modulator
step_mod.legacy.title=Note: Legacy Device
step_mod.legacy.desc=This Bitwig v1 device is included for compatibility with old projects. These older MOD devices have been replaced by modulators, which can be added to any device or plug-in via the modulator pane. \n\nCurrent related devices: \n• Steps modulator \n• ParSeq-8 modulator


#delay-devices.
delay-devices.mode.desc=When enabled, sets delay time in 16ᵗʰ notes
delay-devices.time.desc=Time-based delay time, used when the Set in 16ᵗʰ Notes mode switch is off
delay-devices.beats.desc=Number of 16ᵗʰ notes used for delay time
delay-devices.beat_offset.desc=Scales the delay time to be slightly longer (positive values) or shorter (negative ones)
delay-devices.low_cut.desc=Cutoff where lower frequencies begin to be attenuated
delay-devices.high_cut.desc=Cutoff where higher frequencies begin to be attenuated
delay-devices.feedback.desc=Amount of output signal fed back
delay-devices.crossfeed.desc=Amount of output signal fed into the other delay unit
delay-devices.meter.title=Level Meter
delay-devices.meter.desc=Output signal from this unit

#delay-1
delay-2.input.desc=Incoming signal to process:
delay-2.rate.desc=LFO speed for delay time modulation
delay-2.detune.desc=Amount of delay time modulation (where the left and right channels are applied inversely at any moment)
delay-2.right_unit.title=Right Unit [section]
delay-2.right_unit.desc=Right unit provides the device's right output channel, just as the Left unit provides the left. Otherwise, they are functionally identical.
delay-4.gain.desc=Internal level (after pre FX chain) for this unit
delay-4.send.desc=Send level to another unit
delay-4.sends.title=Sends [-∞ dB to 0.0 dB]
delay-4.sends.desc=Send levels to other units
delay-4.volume.desc=Level of this unit going to the audio buss
delay-4.pan.desc=Stereo pan position of this unit
delay-4.global_gain.desc=Relative gain scaler for all input gain, send, and feedback levels
delay-4.units.title=Units 2, 3 & 4 [sections]
delay-4.units.desc=All units are functionally identical


#destruction.
amp.clipping_mode.desc=Clipping model used:
amp.clipping_bias.desc=Amount of asymmetry in clipping stage
amp.clipping_sag.desc=Amount of dip in the signal, modeling the response of tubes to large transients
amp.clipping_drive.desc=Gain used by in clipping stage
amp.clipping_stereo.desc=Makes clipping a fully stereo operation
amp.cabinet_width.desc=Emulated size of the cabinet, from side to side
amp.cabinet_height.desc=Emulated size of the cabinet, from bottom to top
amp.cabinet_depth.desc=Emulated size of the cabinet, from front to back
amp.cabinet_reflect.desc=Amount of rebounding audio in the cabinet model
amp.cabinet_phase.desc=Reverses the phase of the cabinet
amp.cabinet_hue.desc=Cabinet model being used
amp.cabinet_color.desc=Amount of "character" imbued by the cabinet Hue in use
amp.cabinet_mix.desc=Amount of cabinet-affected signal going to the input of the post EQ section
amp.gain.desc=Gain applied, post clipping
bit-8.clock_rate.desc=Sample rate
bit-8.clock_jitter.desc=Amount of fluctuation inserted to the Clock Frequency
bit-8.clock_chance.desc=Percentage of samples (selected at random) that will be heard
bit-8.gate.desc=Threshold for each sample to be passed thru
bit-8.shape_rect.desc=Signal rectification mode:
bit-8.shape_mode.desc=Type of clipping:
bit-8.shape_drive.desc=Amount of gain applied before clipping
bit-8.quantize_mode.desc=Type of quantization:
bit-8.quantize_level.desc=Noise floor for quantization
bit-8.quantize_mode.desc=Quantization algorithm:
bit-8.quantize_squared.desc=Performs quantization in the squared domain
bit-8.quantize_brightness.desc=Amount of error spread with Diffusion algorithm
bit-8.quantize_noise.desc=Stereo noise for Dither algorithm
distortion.drive.desc=Gain applied at the start of the distortion segment
distortion.slew.desc=Maximum transition speed, set as decibel value. Higher levels are equivalent to faster transitions, and lower values slow things down.
distortion.symmetry.desc=Symmetry of the distortion's curve
distortion.dc.desc=Relative signal offset applied after the distortion curve
distortion.pre_freq.desc=Center frequency for the pre-distortion bell filter
distortion.pre_q.desc=Q/steepness for the pre-distortion bell filter
distortion.pre_gain.desc=Gain for the pre-distortion bell filter
distortion.post_low.desc=Cutoff where lower frequencies begin to be attenuated, post distortion
distortion.post_high.desc=Cutoff where higher frequencies begin to be attenuated, post distortion
distortion.display.title=Graphical Interface
distortion.display.desc=Clickable yellow circle represents the pre-distortion filter. Dragging it  changes the Center Frequency (left to right) and the Gain (up and down) — or the Q (up and down) when a modifier key is held. Post-distortion low cut (red) and high cut (blue) frequencies are clickable as well. \n\nThe shaded spectrum represents the incoming signal. The bright curve shows the outgoing signal.
saturator.transfer_graph.title=Curve Display
saturator.transfer_graph.desc=Transfer function generally being applied from the current settings, with current input level shown in white. \n\nThroughout the interface, positive amplitudes are shown in yellow, and negative amplitudes in orange.
saturator.normalize.desc=Constrains the Drive parameter for a maximum output of 1 (by offsetting the Makeup Gain)
saturator.output.desc=Output gain \n\nNote: When Normalize is enabled, this parameter remains available but displays the final amount of gain applied.
saturator.drive.desc=Amount of gain applied before processing
saturator.cutoff.desc=Cutoff for a low-pass filter applied to the saturated signal only
saturator.slope.title=Post Low-pass Slope and Flavor
saturator.slope.desc=Steepness (pole count) of the low-pass filter. "G" modes are gentler, and "R" modes are a bit bumpier.
saturator.quiet_threshold.desc=Level at which the Quiet Threshold is applied, and then continued as signal gets quieter
saturator.loud_threshold.desc=Level at which the Loud Threshold is applied, and then continued as signal gets louder
saturator.loud_threshold_skew.desc=Difference in how Loud Threshold is applied to positive and negative amplitudes
saturator.quiet_knee.desc=Width of transition where Quiet Threshold is applied
saturator.loud_knee.desc=Width of transition where Loud Threshold is applied
saturator.loud_knee_skew.desc=Difference in how Loud Knee is applied to positive and negative amplitudes
saturator.quiet_ratio.desc=Scaling of signal at Quiet Threshold value
saturator.loud_ratio.desc=Scaling of signal at Loud Threshold value
saturator.loud_ratio_skew.desc=Difference in how Loud Ratio is applied to positive and negative amplitudes \n\nNote: For all Skew parameters, positive values emphasize positive amplitudes, and negative Skew values emphasize negative amplitudes.
saturator.interface.title=Interactive Visualization
saturator.interface.desc=Incoming signal shown on the horizontal, with an animated white bar. Output curves shown in yellow (for positive values) and orange (when negative values have a different Skew). \n\nL(oud) and Q(uiet) thresholds are clickable, as are respective range dots for Knee parameters. Dragging vertically on either interface item changes the its Ratio.
saturator.hide_detail=Hide Curve Editor
saturator.show_detail=Show Curve Editor

#drum.
e-clap.decay.desc=Decay time of noise
e-clap.repeat_distance.desc=Time between successive retriggers, for the repeat Duration
e-clap.repeat_duration.desc=Period over which retriggering occurs, at the Repeat interval
e-clap.width.desc=Stereo width of noise
e-clap.cutoff.desc=Cutoff frequency of low-pass filter
e-clap.reso.desc=Resonance of low-pass filter
e-cowbell.osc1pitch.desc=Frequency of oscillator 1
e-cowbell.osc2offset.desc=Tuning of oscillator 2, relative to oscillator 1
e-cowbell.osc_kbt.desc=Uses the pitch of incoming notes for the oscillator (instead of the Pitch setting)
e-cowbell.osc_blend.desc=Crossfader going from oscillator 1 only ('0 %') to oscillator 2 only ('100 %'), and any combination in between
e-cowbell.cutoff.desc=Cutoff frequency of band-pass filter (coming after the Generator section and before Ring modulation)
e-cowbell.reso.desc=Resonance of band-pass filter
e-cowbell.ring_frequency.desc=Frequency of the sine oscillator, which is ring modulated with the filtered Generator section output
e-cowbell.ring_mix.desc=Amount of ring modulated signal (blended with its dry input), sent to device output
e-cowbell.attack.desc=Amplitude attack time
e-cowbell.decay.desc=Amplitude decay time
e-hat.attack.desc=Amplitude attack time
e-hat.decay.desc=Amplitude decay time
e-hat.decay_curve.desc=Curve of the amplitude decay segment
e-hat.comb_frequency.desc=Frequency/delay time of the comb filter, which processes the white noise generator
e-hat.comb_feedback.desc=Feedback setting of the comb filter
e-hat.comb_mix.desc=Amount of comb filtered signal (blended with dry noise), sent to be blended with the FM Hit section
e-hat.cutoff.desc=Cutoff frequency of high-pass filter (coming after the Comb & FM Hit sections are blended)
e-hat.reso.desc=Resonance of high-pass filter
e-hat.display.title=Graphical Interface
e-hat.display.desc=Red circle controls the Comb ("C") filter's frequency and mix setting. Yellow circle controls the frequency and strength of the FM Hit section's Modulation ("M") oscillator. Blue circle controls the carrier frequency and mix setting of the FM Hit ("H") section. And the orange vertical line controls the high-pass filter's cutoff frequency.
e-hat.fm_decay.desc=Decay time of the FM Hit section
e-hat.fm_carrier_frequency.desc=Carrier frequency
e-hat.fm_modulator_frequency.desc=Modulator frequency
e-hat.fm_modulator_amount.desc=Depth/index of modulation for the FM Hit section
e-hat.fm_mix.desc=Amount of FM Hit signal (blended with Comb section's output), sent to the high-pass filter
e-hat.width.desc=Stereo width of noise
e-kick.osc_decay.desc=Decay time of oscillator
e-kick.osc_tune.desc=Frequency of oscillator
e-kick.click.desc=Added impact at note on by briefly doubling the oscillator's frequency
e-kick.osc_tone.desc=Cutoff frequency of low-pass filter
e-kick.pitch_mod_amount.desc=Maximum pitch modulation
e-kick.pitch_mod_curve.desc=Curve of pitch decay segment
e-kick.pitch_mod_time.desc=Time of pitch decay segment
e-snare.osc1tune.desc=Frequency of oscillator 1
e-snare.osc1decay.desc=Decay time of oscillator 1
e-snare.osc2offset.desc=Tuning of oscillator 2, relative to oscillator 1
e-snare.osc2decay.desc=Decay time of oscillator 2, relative to oscillator 1's Decay setting
e-snare.noise_attack.desc=Attack time of noise generator
e-snare.noise_decay.desc=Decay time of noise generator
e-snare.noise_decay_curve.desc=Slope of noise generator's decay segment, where '0 %' is linear, positive values impose a logarithmic-type curve, and negative values impose an exponential one
e-snare.noise_width.desc=Stereo width of noise generator
e-snare.osc_level.desc=Crossfader going from oscillator 1 only ('0 %') to oscillator 2 only ('100 %'), and any combination in between
e-snare.noise_level.desc=Level of noise generator
e-snare.high_cut.desc=Frequency of low-pass filter (processing the mixed output)
e-snare.low_cut.desc=Frequency of high-pass filter (processing the noise generator)
e-snare.q.desc=Resonance for both low- and high-pass filters
#e-tom SHARED WITH E-KICK


#dynamic.
dynamic.input.desc=Amount of gain applied to the incoming signal
dynamic.mode.desc=Averaging technique in use:
dynamic.sidechain_path.title=Audio Sidechain Source
dynamic.sidechain_path.desc=Path for incoming audio sidechain signal, used for the analysis portion of the device
dynamic.output_meter.title=Output Meter
dynamic.output_meter.desc=Outgoing signal
dynamic.reduction_amount.title=Gain Reduction
dynamic.reduction_amount.desc=Amount of compression currently applied

compressor.threshold.desc=Level above which compression is engaged
compressor.ratio.desc=Amount of compression applied. \n\nFor example, a '4.00:1' ratio means that a 4 dB of increase in the incoming signal will cause only a 1 dB increase at output. So large values represent more gain reduction.
compressor.attack.desc=Transition time from no compression to full gain reduction (when input exceeds Threshold)
compressor.release.desc=Transition time from full gain reduction to no compression (when input falls below Threshold)
compressor.output.desc=Amount of gain applied at the output
compressor.makeup.desc=Applies additional gain, based on the Threshold and Ratio settings
compressor.input_meter.title=Input Meter
compressor.input_meter.desc=Incoming signal, with Threshold control on the blue line
compressor.combo_meter.title=History Display
compressor.combo_meter.desc=Shows from bottom to top: \n• Incoming signal (bright gray) \n• Compressed signal (dim gray) \n• Signal reduction amount (blue)
de-esser.frequency.desc=Cutoff frequency for the high-pass filter (pre analysis)
de-esser.mode.desc=Mode of the analysis filter:
de-esser.monitor.desc=Routes the analysis filter straight to the device's audio output, for tuning purposes
de-esser.amount.desc=Relative amount of gain reduction applied to the entire signal when analysis section is triggered
de-esser.meter.title=Gain Reduction Meter
de-esser.meter.desc=Displays the amount of gain reduction currently applied
dynamics.ratio_low.desc=Amount of gain reduction/expansion applied. \n\nFor example, a '2.00:1' ratio means that a 1 dB change at the input will be expressed as a 2 dB change at output. And a '1:4.00' ratio means that a 4 dB of increase in the incoming signal will cause only a 1 dB increase at output.
dynamics.threshold_low.desc=Level below which compression/expansion is engaged
dynamics.knee_low.desc=Range that the "knee" is spread around the lower Threshold, with higher values representing a larger, more gradual range
dynamics.ratio_high.desc=Amount of gain reduction/expansion applied. \n\nFor example, a '1:4.00' ratio means that a 4 dB of increase in the incoming signal will cause only a 1 dB increase at output. And a '2.00:1' ratio means that a 1 dB change at the input will be expressed as a 2 dB change at output.
dynamics.threshold_high.desc=Level above which compression/expansion is engaged
dynamics.knee_high.desc=Range that the "knee" is spread around the upper Threshold, with higher values representing a larger, more gradual range
dynamics.attack.desc=Transition time when the input signal exceeds either Threshold
dynamics.release.desc=Transition time when the input signal falls below either Threshold
dynamics.sidechain_gain.desc=Gain applied to the analysis input
dynamics.display1.title=Interactive Response Display
dynamics.display1.desc=Shows the response curve as an orange line, with a white trace showing the current signal level (with Attack and Release times factored in). Both Threshold levels have a deep blue background that can be dragged left to right. And the far ends of the curve can be dragged up and down to adjust each Ratio.
dynamics.display2.title=History Display
dynamics.display2.desc=Shows the incoming signal (gray) with the amount of gain reduction/expansion (blue). Clicking this display will freeze it until clicked again.
dynamics.meters.title=Combo Meters
dynamics.meters.desc=Shows from left to right: \n• Decibel scale, with two red lines at the current upper and lower Thresholds \n• Incoming signal meter \n• Signal reduction amount (blue) \n• Outgoing signal meter
gate.threshold.desc=Level above which gain reduction is disabled
gate.depth.desc=Maximum amount of gain reduction
gate.attack.desc=Transition time from full gain reduction to none (when input exceeds Threshold)
gate.release.desc=Transition time from no gain reduction to maximum reduction (when input falls below Threshold)
gate.display.title=History Display
gate.display.desc=Shows the incoming signal (gray) with the amount of gain reduction (blue). Clicking this display will freeze it until clicked again.
gate.meters.title=Combo Meters
gate.meters.desc=Shows from left to right: \n• Decibel scale, with a red line at the current Threshold \n• Incoming signal meter \n• Signal reduction amount (blue) \n• Outgoing signal meter
peak_limiter.ceiling.desc=Maximum level allowed out by the device; an incoming amplitude (post Input gain) exceeding this level will engage limiting
peak_limiter.release.desc=Transition time from full gain reduction to no limiting (when input falls below Ceiling)
peak_limiter.input_meter.title=Input Meter
peak_limiter.input_meter.desc=Incoming signal, with Ceiling control on the blue line
peak_limiter.combo_meter.title=History Display
peak_limiter.combo_meter.desc=Shows from bottom to top: \n• Incoming signal (bright gray) \n• Limited signal (dim gray) \n• Signal reduction amount (blue)
transient_control.attack_modulator.title=Attack Modulator
transient_control.attack_modulator.desc=Modulator source for the detected attack signal, as affected by its Time control
transient_control.attack_gain.desc=Gain applied to the device's incoming audio signal when an attack is detected
transient_control.attack_time.desc=Decay time after Gain is applied
transient_control.sustain_modulator.title=Sustain Modulator
transient_control.sustain_modulator.desc=Modulator source for the detected sustain signal, as affected by its Time control
transient_control.sustain_gain.desc=Gain applied to the device's incoming audio signal when a sustain is detected
transient_control.sustain_time.desc=Attack time before Gain is applied
transient_control.displays.title=Dual Display
transient_control.displays.desc=Top display shows the detected Attack (yellow) and Sustain (purple) signals. Each is influenced by its Time parameter. \n\nBottom display shows the device's incoming signal (gray) with the amount of gain reduction/expansion applied (blue). \n\nClicking either display will freeze it until clicked again.
gate.meters.title=Combo Meters


#eq.
eq.enable.desc=Activates the filter band
eq.mode.desc=Available modes for this band:
eq.gain.desc=Settable gain for bell and shelving filters
eq.frequency.desc=Center/cutoff frequency for this band
eq.reso.desc=Steepness/resonance for this band
eq.display.title=Graphical Interface
eq.display.desc=Each band is represented by a labeled circle. Click and drag to change its frequency and gain, right-click to change its mode, or use the scroll wheel/trackpad scrolling when hovering to adjust only the band's Q. See the window footer for other modifier options. \n\nThe shaded spectrum represents the incoming signal. The bright curve shows the outgoing signal.

eq+.display.title=Graphical Interface
eq+.display.desc=Each band with a mode assignment is represented by a labeled circle. Click and drag to change its frequency and gain (or Q), right-click to change its mode, or use the scroll wheel/trackpad scrolling when hovering to adjust only the band's Q. \n\nGestures include (with corresponding cursors on hover): \n\n• Click the filter curve to activate a band. \n• Click the bottom edge for a notch. \n• Click the far left curve for a low-shelf. \n• Click the far right curve for a high-shelf. \n• Click the far left area for a high-pass. \n• Click the far right area for a low-pass. \n• Double-click off the curve to create a bell. \n• Double-click any band to deactivate it.
eq+.global_gain.desc=Gain adjustment for the device's output
eq+.adaptive-q.desc=Adjusts each bands Q setting proportionately to its Gain
eq+.mode.desc=Amount of oversampling used by the device:
eq+.band_solo.desc=Places a band-pass filter around the focused band for auditioning \n\nNote: Dragging the handle (↔) beside the selected band in the graphical interface engages the solo function until the mouse is released.
eq+.band_selector.desc=Which band is being focused on
eq+.display_range.desc=Vertical display range of the graphical interface
eq+.inspector_bands.title=Per Band Controls [for bands 1 thru 8]
eq+.inspector_bands.desc=For each active band with a mode assignment, the following elements are shown: \n\n• Enable switch (power icon) \n• Filter mode \n• Frequency \n• Gain \n• Q
eq+.display_pre.title=Show Incoming Spectrum [toggle]
eq+.display_pre.desc=Whether the incoming audio is visualized (as a shaded spectrum)
eq+.display_post.title=Show Outgoing Spectrum [toggle]
eq+.display_post.desc=Whether the outgoing audio is visualized (as a bright curve)
eq+.show_analyzer=Show Analyzer Settings
eq+.select_band_1=Select Band 1
eq+.select_band_2=Select Band 2
eq+.select_band_3=Select Band 3
eq+.select_band_4=Select Band 4
eq+.select_band_5=Select Band 5
eq+.select_band_6=Select Band 6
eq+.select_band_7=Select Band 7
eq+.select_band_8=Select Band 8
eq+.reference_chooser.title=Reference Audio Source
eq+.reference_chooser.desc=Audio source that is shown as a purple curve in the display
#eq-2
eq-5.mode1.desc=Available modes for band 1:
eq-5.mode_middle.desc=Available modes for bands 2, 3 & 4:
eq-5.mode5.desc=Available modes for band 5:
eq-5.amount.desc=Scales the gain setting of all bands, moderating the effect
eq-5.shift.desc=Offsets the frequency setting of all bands
eq-5.display.desc=Visualization in the graphical editor:
eq-dj.gain.desc=Gain applied to this band
eq-dj.low_freq.desc=Frequency where the low and mid bands meet
eq-dj.high_freq.desc=Frequency where the mid and high bands meet
eq-dj.interface.title=Graphical Interface
eq-dj.interface.desc=Each band is visualized with a different color (low band is red, mid band is yellow, high band is blue). Crossover frequencies are the clickable vertical lines.


#filter.
filter-device.display.title=Spectrum Display
filter-device.display.desc=Displays the outgoing audio spectrum, along with a dot for controlling the Frequency (left to right) and Resonance (up and down). \n\nThe shaded spectrum represents the incoming signal. The bright curve shows the outgoing signal.

ladder.amount_adsr.desc=Depth that the ADSR (Envelope) modulates filter Frequency 
ladder.amount_lfo.desc=Depth that the LFO modulates filter Frequency 
ladder.amount_ef.desc=Depth that the Envelope Follower modulates filter Frequency 
ladder.adsr_path.title=Gate Source
ladder.adsr_path.desc=Note path to trigger the envelope
ladder.lfo_wave.desc=Waveform used by the LFO
ladder.lfo_retrig.desc=Restarts the LFO waveshape on each note trigger
ladder.lfo_rate.desc=Frequency of the LFO
ladder.lfo_phase.desc=Offsets the LFO's phase
ladder.ef_attack.desc=Transition speed for increasing levels
ladder.ef_release.desc=Transition speed for decreasing levels
resonator_bank.frequency.desc=Center frequency for each band's 2-pole band-pass filter
resonator_bank.reso.desc=Resonance for each band's filter
resonator_bank.gain.desc=Gain for each band
resonator_bank.global_frequency.desc=Center frequency offset applied to all bands
resonator_bank.global_reso.desc=Resonance offset applied to all bands
resonator_bank.global_gain.desc=Gain scaler applied to all bands
resonator_bank.kbt.desc=Amount that the pitch of incoming note signal affects the center frequency of all bands \n\nNote: If this device is on an audio track, you could insert a Note Receiver device before it.
resonator_bank.glide.desc=Transition time for band frequency offset, when a new note arrives with Keyboard Tracking enabled
resonator_bank.display.title=Graphical Interface
resonator_bank.display.desc=A numbered circle for each of filter band, controlling center frequency (left to right) and gain (up and down). \n\nThe shaded spectrum represents the incoming signal. The bright curve shows the outgoing signal.
vocoder.modulator_chain.desc=FX chain that processes/replaces the device's input signal, whose spectrum is analyzed and imbued on the Carrier
vocoder.gain.desc=Post-chain gain
vocoder.monitor.desc=Monitors this chain directly (post-Gain) at device output
vocoder.interface.title=Spectrum Display
vocoder.interface.desc=Interactive display showing the Carrier (yellow) and Modulator (turquoise) spectrums, as well as the wet output (white). \n\nAdjustable vertical lines for the lowest (red) and highest (blue) band-pass frequencies. Adjustable horizontal lines (both purple) show the lower Floor and higher Ceiling levels.
vocoder.floor.desc=Expander threshold level, where signals below this level are increasingly attenuated
vocoder.ceiling.desc=Limiter threshold level, where signals above this level are compressed to stay below it
vocoder.low_frequency.desc=Center frequency for the lowest band-pass filter (matched in the Modulator and Carrier sections)
vocoder.high_frequency.desc=Center frequency for the highest band-pass filter (matched in the Modulator and Carrier sections)
vocoder.formant.desc=Formant shift, applied on the analysis side
vocoder.brightness.desc=Rebalances the spectrum, emphasizing either the high end (when set to positive values) or the low end (negative values)
vocoder.band_width.desc=Relative width control for each constructed band-pass filter, with larger values including a broader range
vocoder.stereo.desc=Channels used for both sections:
vocoder.bands.title=Number of Bands [8, 16, 24 … 80]
vocoder.bands.desc=Number of filter bands found in the Modulator (analysis) and Carrier (processing) sections
vocoder.shape.desc=Focus of the band-passes used:
vocoder.attack.desc=Transition speed for increasing band levels
vocoder.release.desc=Transition speed for decreasing band levels
vocoder.freeze.desc=Holds all Modulator bands at their current levels
vocoder.carrier_chain.desc=Instrument/FX chain, to provide the signal that is filtered with the Modulator's spectrum


#hardware.
hw_clock_out.mode.desc=Sync mode for this unit:
hw_clock_out.path.title=Sync Destination
hw_clock_out.path.desc=Audio destination for sync signal
hw_clock_out.count.desc=Number of beats (in Rate Unit) between triggers
hw_clock_out.rate_unit.desc=Base unit for Clock rate:
hw_clock_out.pulse_length.desc=Positive duration of each trigger:
hw_clock_out.display.title=Output Graph [display]
hw_clock_out.display.desc=Scope of recent trigger signals \n\nNote: Sync signals are very quick, and each trigger may not be visualized.
hw_clock_out.trigger.desc=Clicking transmits a trigger signal
hw_clock_out.groove.desc=Applies the transport's groove (when enabled) to Clock mode
hw_clock_out.gate.desc=[When both units are in Clock mode] Gates the output of unit one until unit two fires
hw_clock_out.unit_two.title=Unit Two
hw_clock_out.unit_two.desc=Identical parameters to unit one, except for the Gate setting
hw_cv_instrument.ac.desc=Switches to alternating current (AC) mode, for interfaces that aren't DC coupled
hw_cv_instrument.pitch_cv_out.title=Pitch CV Destination
hw_cv_instrument.pitch_cv_out.desc=Audio destination for CV pitch signal
hw_cv_instrument.gate_out.title=Gate Destination
hw_cv_instrument.gate_out.desc=Audio destination for gate (note on/off) signal
hw_cv_instrument.gate_level.desc=Gain for outgoing gate signals
hw_cv_instrument.gate_invert.desc=Flips the states of the gate signal
hw_cv_instrument.mode.desc=How pitch is tuned:
hw_cv_instrument.auto_tune.desc=Clicking initiates the automatic tuning protocol
hw_cv_instrument.manual_root.desc=Center note, where a value of zero should be sent
hw_cv_instrument.manual_range.desc=Range scaler, in octaves (up and down)
hw_cv_out.value.desc=Level to be sent as CV. Turning the knob works, but assigning automation/modulator(s) might be better.
hw_cv_out.path.title=CV Destination
hw_cv_out.path.desc=Audio destination for CV signal
hw_cv_out.smooth.desc=Lag time applied to outgoing CV signal
hw_cv_out.display.title=Output Graph [display]
hw_cv_out.display.desc=Scope of recent CV values
hw_fx.out_gain.desc=Gain applied to the outgoing audio
hw_instrument.note_path.title=Note Destination
hw_instrument.note_path.desc=Path for outgoing note and MIDI signals
hw_instrument.note_channel.desc=Whether outgoing messages use their channel ('Keep Ch.'), or routes all messages to a specific channel
hw_instrument.note_clock.desc=Sends MIDI clock to the set path
hw_instrument.note_mpe.desc=When enabled, channels are allocated dynamically and the set pitch bend range is used
hw_instrument.note_pb_range.desc=When in MPE mode, the pitch bend range in use
hw_instrument.gain.desc=Gain applied to the returning audio


#keyboard.
organ.drawbars.title=Harmonic Drawbars [volume sliders]
organ.drawbars.desc=Controls in organ order (from left to right): \n• Down an octave (16') \n• The fifth (5⅔') \n• The fundamental (8') \n• The octave (4') \n• An octave + a fifth (2⅔') \n• Two octaves (2') \n• Two octaves + a major third (1⅗') \n• Two octaves + a fifth (1⅓') \n• Three octaves (1')
organ.model.desc=Wave used for each harmonic:
organ.retrigger.desc=Makes each harmonic retrigger from zero, producing a smoother sound
#organ.sub
#organ.5
#organ.fundamental
#organ.8
#organ.12
#organ.15
#organ.17
#organ.19
#organ.22


#midi.
midi.led.title=Message Indicator [LEDs]
midi.led.desc=Flashes when a message is received on that channel
midi.channel.desc=MIDI channel used for all generated messages \n\nNote: MIDI messages passing thru the device are not affected
midi.auto_send.desc=When enabled, all designated messages are sent whenever the main value changes
midi.send_now.desc=Clickable trigger for sending all designated MIDI messages

channel_filter.button.title=Select Channel [toggles]
channel_filter.button.desc=Clickable button. When enabled, it appears bright white and allows messages on this channel to be passed thru.
channel_map.value.title=Remap Channel [1 to 16]
channel_map.value.desc=Draggable value. Sets the destination channel for messages received on this incoming channel. (Only displays as bright white when a remap is occurring.)
midi_cc.knob.desc=Value transmitted for the defined Controller (CC)
midi_cc.cc.desc=Controller message that the Value will be sent to
midi_cc.label.title=User Label [text]
midi_cc.label.desc=Optional label for any configured knob (with a set Controller)
midi_cc.flush.desc=Click to send the current value of all configured knobs, in order
midi_program_change.program.desc=Program change message \n\nNote: A program change message (along with any bank select messages that are enabled) is only sent when the project is loaded by the audio engine, when the Send Now button is pressed, or when the value is changed with the Auto Send option enabled
midi_program_change.msb_on.desc=Sends a bank select message (CC 0) with each program change message
midi_program_change.lsb_on.desc=Sends a bank select message (CC 32) with each program change message
midi_program_change.msb_value.desc=Bank select message that will be sent as MSB (CC 0)
midi_program_change.lsb_value.desc=Bank select message that will be sent as LSB (CC 32)
midi_program_change.chain.title=CHAIN Device Chain
midi_program_change.chain.desc=For inserting all manner of devices/plug-ins, either to isolate the program change/bank select messages, or to use the Anti-click feature when those messages are sent
midi_program_change.chain_only.desc=Only transmits program change/bank select messages into the device Chain (not to the device's output)
midi_program_change.chain_anti-click.desc=Pulls down the device Chain's output level before sending program change/bank select messages
midi_program_change.chain_decay.desc=Time of all Anti-click fade outs, when enabled
midi_song_select.message.desc=Song select message \n\nNote: A song select message is only sent when the project is loaded by the audio engine, when the Send Now button is pressed, or when the value is changed with the Auto Send option enabled


#note_fx.
arpeggiator.pitch_enable.desc=Uses the transposition values to offset each step
arpeggiator.global_velo.desc=Velocity scaler applied to all steps
arpeggiator.global_length.desc=Gate length scaler applied to all steps
arpeggiator.pattern.desc=Order that notes are triggered:
arpeggiator.octaves.desc=Number of octaves used, counted from the current octave up
arpeggiator.retrigger.desc=New notes play from step one
arpeggiator.time_mode.desc=When enabled, sets step length in note values
arpeggiator.time_rate.desc=Duration of each step
arpeggiator.rate.desc=Note interval (of Note Type) for rate:
arpeggiator.note_type.desc=Length of note used for device's rate:
arpeggiator.groove.desc=Applies the transport's groove (when enabled) to note timing
arpeggiator.count.desc=Number of steps used
arpeggiator.step_pitch.title=Transposition Amounts [sliders]
arpeggiator.step_pitch.desc=Pitch as semitone offset for each step
arpeggiator.step_skip.title=Step Skips [toggles]
arpeggiator.step_skip.desc=Option to skip the selected step, jumping to the next available step instead. A nice option in combination with transposition patterns.
arpeggiator.step_velo.title=Velocity Levels [sliders]
arpeggiator.step_velo.desc=Velocity as percentage for each step
arpeggiator.step_length.title=Gate Lengths [sliders]
arpeggiator.step_length.desc=Gate length for each step, as a percentage of the step duration (set by Base Rate and Note Type)
arpeggiator.leds.title=Position LEDs [display]
arpeggiator.leds.desc=Lights the current step
arpeggiator.humanize.desc=Relative randomization amount for both velocity and note/step start time (allowing both earlier and later steps)
arpeggiator.pressure_velo.desc=Updates the velocity of each note with any incoming poly pressure messages, making velocity dynamic (and MPE friendly)
arpeggiator.overlapping.desc=Allows notes to overlap (for total gate lengths over 100 %). When disabled, new notes stop any old notes.
arpeggiator.start_on_note.desc=Triggers output when first notes arrive. Otherwise, note rate values will wait for the next beat grid interval.
arpeggiator.release_immediately.desc=Ceases output when last note is released. Otherwise, the final step will last for the regular rate period.
arpeggiator.octave_handling.desc=How additional octaves are handled:
diatonic_transposer.root.desc=Root note of the scale/mode used
diatonic_transposer.mode.desc=Scale/mode used
diatonic_transposer.shift.desc=Semitone offset applied to incoming notes
diatonic_transposer.foreigners.desc=Handling of notes outside the key–scale:
micro-pitch.mode.desc=Method for retuning incoming notes:
micro-pitch.root.desc=Note where the temperament starts and no pitch shift is applied
micro-pitch.octave.desc=In 12 Note mode, the semitone shift applied at the note one octave above Root Key. \n\nIn EDO mode, the interval that is cut into the number of Divisions. 
micro-pitch.notes.title=Notes 1 thru 11 [0.00 to +24.00 st]
micro-pitch.notes.desc=Semitone shift applied for each of the middle eleven notes \n\nNote: Shifts can also be entered as fractions. For example, typing '3/2' would set that value to '7.02 st'.
micro-pitch.a3.desc=Frequency offset applied to the entire note range, set as the tuning for A3 (traditionally '440 Hz')
micro-pitch.amount.desc=A dry/wet blend between equal temperament ('0 %') and full application of the set values ('100 %')
micro-pitch.visual.title=Scale Visualization [display]
micro-pitch.visual.desc=Shows all notes relatively, with the Root Key and Octave aligning at the top (12 o'clock). \n\nNotes at traditional equal-tempered positions are shown with thin lines, which become thicker the further its tuning diverges.
micro-pitch.edo_divisions.desc=Number of pieces that the Interval is evenly divided into
micro-pitch.edo_visual.title=EDO Visualization [display]
micro-pitch.edo_visual.desc=Shows the equally spread notes in one continuous pie. A helpful indicator of which relative degrees are currently triggered. (Note that a maximum of 24 divisions will be displayed, and the Amount parameter is not visualized.)
micro-pitch.too_much_edo.title=Past the Point of Visualization
micro-pitch.too_much_edo.desc=Beyond 24 divisions, we can't show you anything. Travel well.
micro-pitch.scala.title=Note: Scala File Support
micro-pitch.scala.desc=Scala (SCL) files that describe either seven- or 12-note scales can be imported by dragging them onto the Micro-pitch device. \n\nIf the scale uses 12 notes, its values will be directly applied to all notes. Seven-note scales will import their values to the right column (the white notes from a C root) and use interpolated values for the other five notes.
multi-note.enable.desc=Enables this note unit
multi-note.pitch.desc=Pitch offset from the incoming note ('0' means no change)
multi-note.velocity.desc=Velocity offset from the incoming note ('0' means no change)
note_delay.offs.desc=Whether note off messages are delayed or not \n\nNote: When note offs are not delayed, notes that are released before the delay time is reached will not sound.
note_echo.mute.desc=Ignores incoming note signal
note_echo.mode.desc=When enabled, sets note length in 16ᵗʰ notes
note_echo.time.desc=Time-based note length, used when the Set in 16ᵗʰ Notes mode switch is off
note_echo.beats.desc=Number of 16ᵗʰ notes used for note length
note_echo.beat_offset.desc=Scales the note length to be slightly longer (positive values) or shorter (negative ones)
note_echo.echos.desc=Maximum number of echos per note in, unless Infinite Repeat is enabled
note_echo.infinity.desc=Allows an infinite number of echos per note
note_echo.velocity.desc=Fixed starting velocity for each echo
note_echo.mono.desc=Only repeats the last incoming note
note_echo.stop.desc=Click to kill all notes and echos
note_echo.display.title=Output Visualization
note_echo.display.desc=Reflects the note output of this device (including original notes and their echos)
note_echo.fb_mode.desc=How feedback parameters (in purple) interact with notes:
note_echo.feedback_time.desc=Change in time between successive echos
note_echo.feedback_time_random.desc=Range of randomization to the change in time between successive echos
note_echo.feedback_gate.desc=Change of note length between successive echos
note_echo.feedback_velocity.desc=Offset velocity between successive echos
note_echo.feedback_pitch.desc=Offset pitch between successive echos \n\nNote: When the original note pitch is between the Feedback Pitch Minimum & Maximum (set below), each successive echo is shifted by this transpose amount. If the echo series reached the Minimum/Maximum, it is then wrapped back to the original note pitch.
note_echo.feedback_pitch_min.desc=Minimum pitch for feedback transposition
note_echo.feedback_pitch_max.desc=Maximum pitch for feedback transposition
note_filter.low_note.desc=Lowest note allowed thru
note_filter.high_note.desc=Highest note allowed thru
note_filter.low_velocity.desc=Lowest velocity allowed thru
note_filter.high_velocity.desc=Highest velocity allowed thru
note_harmonizer.harmony_path.title=Harmony Source
note_harmonizer.harmony_path.desc=Path for incoming note signal \n\nAll active notes from this source are analyzed for rough key structure, which notes arriving at this device are then conformed to fit.
note_harmonizer.incoming_key.desc=Set this parameter to match the key of incoming notes, which helps improve the harmonic reshaping
note_latch.mode.desc=Latch behavior in use:
note_latch.threshold.desc=Velocity threshold (when in of Velocity mode). Notes above are treated are latched. Notes below are either ignore or treated as note offs (when that pitch is already latched).
note_latch.mono.desc=Only keeps one note latched at a time (last note priority)
note_latch.transport_stop.desc=Ends all latched/held notes whenever the transport is stopped
note_latch.kill.desc=On click, ends all latched/held notes
note_length.mode.desc=When enabled, sets note length in 16ᵗʰ notes
note_length.time.desc=Time-based note length, used when the Set in 16ᵗʰ Notes mode switch is off
note_length.beats.desc=Number of 16ᵗʰ notes used for note length
note_length.beat_offset.desc=Scales the note length to be slightly longer (positive values) or shorter (negative ones)
note_length.trigger.desc=When notes are triggered:
note_length.velocity_fixed.desc=Uses a set velocity for all notes (instead of using the trigger note's velocity)
note_length.velocity_level.desc=Fixed velocity value to use for new notes
note_pitch_shifter.octave.desc=Pitch shift amount in octaves (12 semitones each)
note_pitch_shifter.semitone.desc=Pitch shift amount in semitones (often "st", or musical half steps)
note_pitch_shifter.fine.desc=Pitch shift amount in as a percentage of one semitone \n\nSome example settings: \n• '0.00 %' represents no shift \n• '+50.0 %' represents 50 cents up \n• '-66.7 %' represents two-thirds of the way down toward the semitone below
note_velocity.input_middle.desc=Incoming velocity level that outputs the Middle Velocity Output level
note_velocity.output_minimum.desc=Output velocity when an incoming minimum velocity ('1') is received
note_velocity.output_middle.desc=Output velocity when an incoming velocity at the Middle Velocity Input level is received
note_velocity.output_maximum.desc=Output velocity when an incoming maximum velocity ('127') is received
note_velocity.random.desc=Random variation applied within the defined output range (based on the Lo, Mid & Hi settings)
note_velocity.display.title=Graphical Interface
note_velocity.display.desc=Velocity curve with clickable circles for the Lo ("L"), Mid ("M"), and Hi ("H") output levels, all draggable up and down. The Mid ("M") level can also be moved from left to right, setting the input level at which this output level is used. \n\nMoving crosshairs show the latest note on's input velocity (horizontal position) and output velocity (vertical position).
transposition_map.key.desc=Root of the pitch class transform
transposition_map.shift.desc=Semitone offset to incoming notes before the pitch class transform
transposition_map.octave.desc=How each note's octave is chosen:
transposition_map.transform.title=Transform Grid [matrix]
transposition_map.transform.desc=This 12x12 grid represents incoming pitch classes (from left to right) and the outgoing pitch class they are mapped to (up and down). Clicking in any vertical column will select the pitch class output for that incoming note.


#reverb.
reverb-device.mode.desc=Type of space being simulated for Early reflections
reverb-device.size.desc=Relative size of the space being simulated for Early reflections
reverb-device.predelay.desc=Time before Early reflections begin
reverb-device.difussion.desc=How smoothly the Early reflections are distributed
reverb-device.buildup.desc=How smoothly the discrete reflections are distributed
reverb-device.time.desc=Duration of the reverb
reverb-device.late_mix.desc=Level scaler for the entire Late section
reverb-device.low_freq.desc=Low crossover frequency
reverb-device.low_factor.desc=Reverb time for the low band, relative to Reverb Time
reverb-device.high_freq.desc=High crossover frequency
reverb-device.high_factor.desc=Reverb time for the high band, relative to Reverb Time
reverb-device.tank_fx_chain.desc=Chain for inserting devices/plug-ins within the discrete reflections block
reverb-device.display.title=Spectrum Display
reverb-device.display.desc=Displays the outgoing audio spectrum, along with dots for controlling the Frequencies (left to right) and Factors (up and down) for both the L(ow) and H(igh) bands


#routing.
audio_receiver.gain.desc=Gain applied to the received signal
audio_receiver.mix.desc=Amount of received signal at device output (blended with dry signal entering the device)
note_receiver.mute_input.desc=Bypasses notes arriving at the device
note_receiver.mute_source.desc=Bypasses notes received via the Note Source path


#synth.
fm-4.oscillator_enable.desc=Activates the triangle oscillator
fm-4.oscillator_ratio.desc=Scales the oscillator's pitch, relative to the incoming note pitch signal \n\nNote: To work in whole numbers (harmonics), click to the left of the decimal and drag.
fm-4.oscillator_frequency_offset.desc=Shifts the oscillator's frequency
fm-4.oscillator_modulation.desc=Scaler for all modulation signals from this oscillator
fm-4.noise_enable.desc=Activates the noise generator unit
fm-4.noise_cutoff.desc=Cutoff frequency of the noise generator unit's 12 dB/oct low-pass filter
fm-4.noise_reso.desc=Resonance of the noise generator unit's 12 dB/oct low-pass filter
fm-4.noise_drive.desc=Drive applied, post-filter
fm-4.noise_modulation.desc=Scaler for all modulation signals from this noise generator unit
fm-4.mix_level.desc=Amount of this element sent to the audio mix buss
fm-4.matrix.title=Modulation Matrix
fm-4.matrix.desc=Table of frequency modulation amounts. \n\nSources are shown in vertical rows, labeled at the top with oscillators by numbers and the noise ("N") generator unit. \n\nDestinations are shown in horizontal rows, with the four oscillators as possible targets. \n\nNote that all values are scaled by the "Mod" (and enable) values at the source unit.
phase-4.osc_enable.desc=Activates the oscillator
phase-4.osc_phase.desc=Offsets the oscillator's phase, and affects how shaping (phase distortion) is applied
phase-4.osc_algo.desc=Determines the source waveform and the path it will traverse as Shape is adjusted:
phase-4.osc_formant.title=Formant [harmonic 1 (fundamental) to 9]
phase-4.osc_formant.desc=Harmonic inserted as additional sine cycles within the waveshape
phase-4.osc_ratio.title=Pitch Ratio [0 to 99 : 1 to 99]
phase-4.osc_ratio.desc=Scales the oscillator's pitch as a numerator:denominator pair \n\nSome example settings: \n• '1:1' represents no change. \n• '6:1' multiplies by six (600%). \n• '1:4' scales down to 25% (or two octaves down). \n• '4:3' scales to about 133% (or up a perfect fourth in just intonation). \n• '0:x' zeroes out the pitch buss, leaving only the Frequency Offset and incoming modulation signals in control.
phase-4.osc_kbt.desc=Adds the pitch of incoming notes to the oscillator's pitch buss
phase-4.osc_freq.desc=Tuning of the oscillator when Keyboard Tracking is disabled
phase-4.osc_pitch_offset.desc=Shifts the oscillator's pitch
phase-4.osc_stereo.desc=Applies the inverse frequency offset to the right channel
phase-4.osc_freq_offset.desc=Shifts the oscillator's frequency
phase-4.osc_shape.desc=Amount of phase distortion applied. Can also be thought of as the relative position within the current Algorithm.
phase-4.osc_order.desc=When enabled, phase modulation is applied before phase distortion
phase-4.osc_mod.desc=Global phase modulation amount, scaling all oscillator sources
phase-4.osc_r_mod.desc=Relative depth of phase modulation from the R(ed) oscillator to this one
phase-4.osc_y_mod.desc=Relative depth of phase modulation from the Y(ellow) oscillator to this one
phase-4.osc_b_mod.desc=Relative depth of phase modulation from the B(lue) oscillator to this one
phase-4.osc_m_mod.desc=Relative depth of phase modulation from the M(agenta) oscillator to this one
phase-4.osc_volume.desc=Level of this oscillator going to the audio buss
phase-4.filter_feedback.desc=Feedback applied from the filter output back to its input
phase-4.filter_drive.desc=Amount of gain applied pre-filter
phase-4.filter_r_mod.desc=Depth of filter frequency modulation from the R(ed) oscillator to this one
phase-4.filter_y_mod.desc=Depth of filter frequency modulation from the Y(ellow) oscillator to this one
phase-4.filter_b_mod.desc=Depth of filter frequency modulation from the B(lue) oscillator to this one
phase-4.filter_m_mod.desc=Depth of filter frequency modulation from the M(agenta) oscillator to this one
phase-4.global_shape.desc=Relative shaping amount applied to all oscillators
phase-4.global_mod.desc=Relative phase modulation amount applied to all oscillators
phase-4.global_xy.title=Global XY Pad [interface]
phase-4.global_xy.desc=The "4" ball controls the global Shape and Mod parameters on the x- and y-axes. \n\nWhen individual oscillators have their own Shape and Mod parameters set below maximum, corresponding color balls will appear as well.
polymer.osc_slot.title=Oscillator Slot [7 models]
polymer.osc_slot.desc=Houses the oscillator. \n\nScroll down to see its documentation, or click the header to swap oscillators.
polymer.filter_slot.title=Filter Slot [5 models]
polymer.filter_slot.desc=Houses the filter. \n\nScroll down to see its documentation, or click the header to swap filters.
polymer.aeg_slot.title=Envelope Slot [4 models]
polymer.aeg_slot.desc=Houses the envelope generator, which controls amplitude post-filter. \n\nScroll down to see its documentation, or click the header to swap envelopes.
polymer.sub_sync.title=Retrigger with Sub [toggle]
polymer.sub_sync.desc=Hard syncs the main oscillator to the sub oscillator's pitch
polymer.sub_blend.title=Sub Blend [0.00 to 100 %]
polymer.sub_blend.desc=Blend between the main oscillator ('0 %') and the sub oscillator ('100 %')
polymer.sub_wave.title=Sub Oscillator Waveshape [various options]
polymer.sub_wave.desc=Output shapes to choose from: \nSine → Sine wave \nHalf-sine → Rectified sine wave \nTriangle → Triangle wave \nPulse 50% → Square wave \nPulse 25% → Pulse without each 4ᵗʰ harmonic
polymer.sub_octave.title=Sub Oscillator Octave [various options]
polymer.sub_octave.desc=Pitch detune options by octave:
polymer.noise_blend.title=Noise Blend [0.00 to 100 %]
polymer.noise_blend.desc=Blend between the main + sub oscillators ('0 %') and the noise generator ('100 %')
polymer.feg_to_subnoise.title=Use FEG for Sub & Noise [toggle]
polymer.feg_to_subnoise.desc=Applies the filter envelope generator to the sub oscillator and noise generator outputs
polymer.high-pass.title=High-pass Cutoff [19.4 to 33.5 kHz]
polymer.high-pass.desc=Frequency where lower sounds start being removed
polysynth.osc_pitch.desc=Shifts the oscillator's pitch
polysynth.osc_shape.desc=Blending between a main sawtooth at pitch ('50 %'), and either a pulse wave up an octave ('0 %') or a pulse width-controlled sawtooth up an octave ('100 %')
polysynth.osc_sub.desc=Blend between the primary waves ('0 %') and a pulse wave down an octave ('100 %')
polysynth.osc_sync.desc=Semitone offset for a (silent) master sync oscillator, producing a timbral shift
polysynth.osc_spread.desc=Bipolar width used that all unison voices are spread across
polysynth.osc_width.desc=Stereo width of unison voices in this oscillator
polysynth.osc_oct.desc=Octave offset in organ foot notation, where 8' reflects no change, 16' is down an octave, etc.
polysynth.osc_pw.desc=Width control for the secondary sawtooth and pulse waves (when Shape is away from '50 %'). Also acts as a phase offset for the sub pulse wave.
polysynth.osc_sub_pw.desc=Width control for the sub pulse wave
polysynth.osc_retrig.desc=Restarts from phase zero for each note trigger
polysynth.osc_voices.desc=Number of voices triggered per note played
polysynth.osc_pan.desc=Stereo panning position
polysynth.mix_blend.desc=How the oscillators are combined:
polysynth.mix_mix.desc=Position of blending between oscillators 1 & 2
polysynth.mix_noise.desc=Blend between the oscillators ('0 %') and a white noise generator ('100 %')
polysynth.mix_filt_fm.desc=Amount of filter frequency modulation from the (likely audio rate) Mix section
polysynth.mix_hpf.desc=Cutoff frequency of the high-pass filter component
polysynth.mix_hpf_mode.desc=Mode of the high-pass filter component:
polysynth.mix_hpf_reso.desc=Resonance of the high-pass filter component
polysynth.mix_drive.desc=Gain applied before the filter section
polysynth.mix_feedback.desc=Feedback applied just before the filter section
polysynth.filter_shaper.desc=Amount of shaping applied, post-filter
polysynth.filter_shaper_mode.desc=Method of shaping applied:
sampler.env_mode.desc=Type of amplitude envelope used:
sampler.env_fade-in.desc=Ramp time from silence (at the Sample Start point) to full amplitude
sampler.env_fade-out.desc=Ramp time from full amplitude to silence (at the Sample end point) 
sampler.zparams_modulators.title=Zone Parameters 1, 2, and 3
sampler.zparams_modulators.desc=[Multisample mode] Modulator sources for parameter values of the currently triggered zone(s)

#the_grid.
the_grid.timebase.desc=Unit used for rate
the_grid.length.desc=Wavelength of the device phase signal, in the current Timebase
the_grid.offset.desc=Timing offset in Timebase units, to shift the output early (positive) or late (negative)
the_grid.shuffle.desc=Applies the transport's groove (when enabled) to the device phase signal
the_grid.free-run.desc=Continues running regardless of the transport status
the_grid.jellybeans.title=Grid Overview Display
the_grid.jellybeans.desc=Summary view and clickable navigation of the currently loaded Grid patch. Interface modules (like displays and sequencers) are shown in black; all other modules appear in their set color. Click once on the display to open the Grid editor window, or click twice to close it. Currently displayed area is bounded by a blue viewport, which can be clicked and dragged to change the Grid editor's focus.

fx_grid.note_path.title=Note Source
fx_grid.note_path.desc=Path for incoming note signal
#poly_grid


#utility.
dc_offset.dc.desc=Value added to the incoming signal \n\nNote: If used in your audio signal path, this device can have a noticeable impact on any audio signal being sent to the same audio buss (even from a different application). As such, caution is warranted with this device.
dual_pan.left.desc=Panning applied to the original left signal
dual_pan.right.desc=Panning applied to the original right signal
dual_pan.law.title=Panning Law [equal gain or hybrid]
dual_pan.law.desc=Whether panning is done with Equal Gain, or a smoother Hybrid equation
test_tone.freq.desc=Frequency of the sine wave
test_tone.gain.desc=Level of the sine wave
time_shift.ms.desc=Shift time amount, where positive values delay the incoming signal, and negative values bring it earlier in time
time_shift.samples.desc=Shift time amount, where positive values delay the incoming signal, and negative values bring it earlier in time
time_shift.mode.title=Units [milliseconds or samples]
time_shift.mode.desc=Unit used for the shift time
tool.left-.desc=Invert the left channel
tool.right-.desc=Invert the right channel
tool.swap.desc=Swap the left and right channels (applied after all other settings)
tool.amp.desc=Gain applied
tool.pan.desc=Stereo pan position of the output
tool.width.desc=Relative width of the incoming signal ('100 %' represents no change)
