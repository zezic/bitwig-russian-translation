modulator_general.modulator.title=调制器输出
modulator_general.modulator.desc=用于参数的无线控制
modulator_general.poly.title=Poly [切换]
modulator_general.poly.desc=[可用时]可复音操作，每个声音上都有唯一的副本
modulator_general.groove.desc=将传输器的凹槽(启用时)应用于调制器的时序
modulator_general.input.desc=调制器正在处理的值。 通常，另一个调制器的输出控制该参数。
modulator_general.delay_enable.desc=延迟信封的“开始”阶段(不延迟音符关闭)
modulator_general.delay_mode.desc=启用后，在16分音符中设置信封的延迟
modulator_general.delay_time.desc=基于时间的延迟长度，当“在16分音符模式下设置”开关关闭时使用
modulator_general.delay_beats.desc=信封延迟使用的16分音符数量
modulator_general.delay_beat_offset.desc=使用16分音符时，将包络延迟缩放为稍长(正值)或更短(负值)
modulator_general.legacy_rate.title=使用中的旧版率[点击切换]
modulator_general.legacy_rate.desc=调制器使用旧的(倒数)速率样式，其中速率设置时基内的周期数。 单击更新以切换到记录的行为。


4-stage.display.title=信封接口
4-stage.display.desc=与标记的断点的各种段次/电平和小圆圈的曲率控制交互式可视化
4-stage.zoom.title=自动缩放[切换]
4-stage.zoom.desc=适应整个屏幕，即使时间变化
4-stage.bipolar.title=双极[切换]
4-stage.bipolar.desc=允许在每个点之间设置值'-100 %' & '100 %'
4-stage.loop.desc=返回顶部的点:
4-stage.point_level.desc=在指定点的水平
4-stage.stage_time.desc=连续点之间的时间
4-stage.stage_curve.desc=连续点之间的曲线，其中'0 %'是线性的
4-stage.timing_seconds.desc=启用后，时间值将以秒为单位设置 \n\n注意: 两个计时按钮都使用相同的参数。
4-stage.timing_quarters.desc=启用后，时间值将在四分音符中设置

adsr-modulator.display.title=信封接口
adsr-modulator.display.desc=交互式可视化，带有标记的断点，适用于各个段时间/电平
adsr-modulator.single_trigger.desc=[单声道时]防止重叠的笔记重新触发信封

ahd_on_release.attack.desc=从当前包络值到100％的上升时间(无音符)
ahd_on_release.single_trigger.desc=[单声道时]仅在释放最后一个保留的音符时触发

ahdsr-modulator.display.title=信封接口
ahdsr-modulator.display.desc=与标记的断点的各种段次/电平和小圆圈的曲率控制交互式可视化
ahdsr-modulator.amount.desc=双极量定标器

audio_rate.display.title=信号显示
audio_rate.display.desc=显示在紫色最终调制信号
audio_rate.path.title=音源
audio_rate.path.desc=传入音频信号的来源
audio_rate.channel.desc=使用的输入音频通道:
audio_rate.rectify.desc=将所有负音频值翻转为正，使调制器信号单极性为正
audio_rate.gain.desc=增益应用于音频
audio_rate.filter_enable.desc=Enables a 4-pole (24dB/oct) low-pass filter
audio_rate.filter_cutoff.desc=低通滤波器的截止

audio_sidechain.mini_display.title=信号显示
audio_sidechain.mini_display.desc=显示在紫色最终调制信号
audio_sidechain.display.title=频谱接口
audio_sidechain.display.desc=Shows the spectrum of the incoming audio signal (post filtering). Clickable vertical lines represent the cutoff frequencies for the low-cut (red) and high-cut (blue) filters. \n\nThe shaded spectrum represents the incoming signal. The bright curve shows the filtered signal being averaged for the modulator signal.
audio_sidechain.high_cut.desc=Cutoff of a 4-pole (24dB/oct) low-pass filter
audio_sidechain.low_cut.desc=Cutoff of a 4-pole (24dB/oct) high-pass filter

beat_lfo.display.title=波形显示
beat_lfo.display.desc=显示当前输出
beat_lfo.rate.desc=Tempo-synced rate, where: \n• '-3.00' = 8 beats (two bars in 4/4) \n• '-2.00' = 4 beats (one bar in 4/4) \n• '-1.00' = half note \n• '0.00' = quarter note \n• '1.00' = 8th note \n• '2.00' = 16th note \n• '3.00' = 32nd note
beat_lfo.offset.desc=时间偏移，以四分音符表示。 正值将信号移到较晚，负值将信号移到较早。

button-modulator.button.desc=调制器的当前触发值
button-modulator.smoothing.desc=提供每个按钮迁移平滑坡道
button-modulator.name_note.title=注意: 使用调制器名称
button-modulator.name_note.desc=切换按钮和调制器源均使用为调制器设备(在检查器面板中)指定的名称。

buttons.modulator1.title=调制器输出1
buttons.modulator1.desc=用于从左按钮无线控制参数
buttons.modulator2.title=调制器输出2
buttons.modulator2.desc=通过右键可无线控制参数
buttons-modulator.a_label.title=按钮A标签
buttons-modulator.a_label.desc=用户可编辑的字符串，用于标记左键及其调制器
buttons-modulator.b_label.title=按钮B标签
buttons-modulator.b_label.desc=用户可编辑字符串标签右边的按钮和调制器
buttons-modulator.button.desc=该调制器的当前触发值

classic_lfo.display.desc=显示当前的输出(在单声道模式)或轨迹的个人的声音(in poly)
classic_lfo.mode.desc=定时是在自由赫兹中设置，还是在同步拍子间隔中设置(与普通线，虚线，三重峰选项)
classic_lfo.rate.desc=LFO率
classic_lfo.timebase.desc=LFO rate, ranging from 32 bars ('32/1') to a whole note ('1/1') to one 64th note ('1/64') per cycle
classic_lfo.waveform.desc=波形使用的LFO
classic_lfo.curve.desc=曲率应用于波形
classic_lfo.retrigger.desc=新音符重新开始了LFO的阶段

envelope_follower-modulator.display.title=信号显示
envelope_follower-modulator.display.desc=显示在蓝色最终调制信号
envelope_follower-modulator.rise.desc=转换速度水平提高
envelope_follower-modulator.fall.desc=转换速度水平降低

expressions.velocity.title=速度调制器输出
expressions.velocity.desc=对于通过接收的音符对消息的速度的参数的无线控制
expressions.release.title=释放速度调制器
expressions.release.desc=用于通过接收到的音符关闭消息的释放速度来无线控制参数
expressions.timbre.title=音色调制器输出
expressions.timbre.desc=通过每个音符的音色表达来无线控制参数
expressions.pressure.title=调压器输出
expressions.pressure.desc=用于通过多压力消息(或通道触后，如果未使用多压力)无线控制参数
expressions.smoothing.desc=适用各种连续信号之间的平滑过渡
expressions.timbre_relative.desc=在音符开始处从零开始启动每个音符的音色调制器

hw_cv_in.display.title=信号显示
hw_cv_in.display.desc=以红色显示最终的调制器信号(在AC模式下)
hw_cv_in.smoothing.desc=Cutoff of a 4-pole (24dB/oct) low-pass filter
hw_cv_in.mode.title=Mode [AC or DC]
hw_cv_in.mode.desc=无论您的音频接口采用直流(DC)或交流电(AC)

keytrack-modulator.display.title=音高曲线显示
keytrack-modulator.display.desc=Shows the transfer function in red, and the current output value(s) as a white dots along the curve
keytrack-modulator.interface.title=跟踪介面
keytrack-modulator.interface.desc=Interactive visualization, with clickable points for Root ("R") and Spread ("S") in Relative mode, and color-coded points for all values in Absolute mode.
keytrack-modulator.pitch_note.title=注意: 也是音调调节器
keytrack-modulator.pitch_note.desc=使用其默认设置，此调制器将传入音符的正确映射的音高值作为调制器信号提供。
keytrack-modulator.relative_mode.desc=使用具有扩展(宽度)量的根键值切换到相对模式
keytrack-modulator.absolute_mode.desc=Switches to Absolute mode, for defining the curve as a piecewise function \n\nNote: Both the Relative and Absolute buttons use the same parameter.
keytrack-modulator.relative_root.desc=请注意，这将返回'0' (零)音高值
keytrack-modulator.relative_spread.desc=音符信号将传播到的双极宽度
keytrack-modulator.absolute_minimum.desc=最小音符输入值输出
keytrack-modulator.absolute_lower.desc=接收中低音键时的值输出
keytrack-modulator.absolute_middle.desc=接收到中音键时的值输出
keytrack-modulator.absolute_upper.desc=接收到中高音键时的值输出
keytrack-modulator.absolute_maximum.desc=最大音符输入值输出
keytrack-modulator.absolute_lower_key.desc=请注意最小和中间之间的重新映射
keytrack-modulator.absolute_middle_key.desc=重新映射的中音符
keytrack-modulator.absolute_upper_key.desc=Note between Middle and Maximum for remapping \n\nNote: The Key parameters are freely settable, but placing them out of sequence will likely produce faulty results.




lfo-modulator.display.title=波形显示
lfo-modulator.display.desc=显示每个声音的当前波形和一个节点
lfo-modulator.rate.desc=当前时基中的频率
lfo-modulator.timebase.title=时基[频率或音符长度]
lfo-modulator.timebase.desc=单位用于率
lfo-modulator.tilt.desc=波形的方向
lfo-modulator.curve.desc=波形曲线
lfo-modulator.delay.desc=LFO开始之前的时间(收到新音符之后)
lfo-modulator.fade-in.desc=Fade-in time to the LFO's Amount setting (after any Delay is finished)
lfo-modulator.amount.desc=输出幅度
lfo-modulator.bipolar.desc=将模块的输出从大约 '-1' 缩放到 '+1'
lfo-modulator.mode.desc=重置调制器的行为:
lfo-modulator.phase.desc=转变波形中的位置

macro-4.modulator1.title=调制器输出1
macro-4.modulator1.desc=通过第一个旋钮无线控制参数
macro-4.modulator2.title=调制器输出2
macro-4.modulator2.desc=通过第二个旋钮无线控制参数
macro-4.modulator3.title=调制器输出3
macro-4.modulator3.desc=通过第三个旋钮无线控制参数
macro-4.modulator4.title=调制器输出4
macro-4.modulator4.desc=通过第四个旋钮无线控制参数
macro-4.value.desc=每个调制器的当前值
macro-4.label.title=文字标签[string]
macro-4.label.desc=用户可编辑字符串标记各个参数和调制器的名称。(此字符串前置填充有被映射与该调制器中的第一个参数。)
macro-4.bipolar.title=双极[切换]
macro-4.bipolar.desc=允许将每个旋钮设置在'-100 %' 和 '100 %'之间

macro.value.desc=调制器的当前值
macro.label.title=双极[string]
macro.label.desc=用户可编辑的字符串，用于标记参数和调制器名称。 (此字符串前置填充有被映射与该调制器中的第一个参数。)
macro.bipolar.title=双极[切换]
macro.bipolar.desc=允许将旋钮设置在'-100 %'和'100 %'

math-modulator.mode.desc=操作进行:
math-modulator.a.desc=信号A为所选择的操作模式 \n\n注意: 可以将这个值与旋钮设定，自动，或调制
math-modulator.b.desc=信号B为所选择的操作模式 \n\n注意: 可以将这个值与旋钮设定，自动，或调制

midi-modulator.display.title=信号显示
midi-modulator.display.desc=以黄色显示最终的调制器信号以及正在跟踪的消息类型
midi-modulator.mode.desc=听到的MIDI信息类型:
midi-modulator.bend_note.title=N注意: 要使用弯音…
midi-modulator.bend_note.desc=必须禁用轨道的'PB → 表情'数据转换选项。
midi-modulator.cc.desc=跟踪的控制更改消息(处于CC模式时)
midi-modulator.learn.desc=单击时，根据下一条传入的CC消息设置“控制更改”参数
midi-modulator.learn_abort.desc=单击时中止CC学习功能
midi-modulator.channel.desc=收听的MIDI通道
midi-modulator.channel_all.desc=收听所有MIDI通道
midi-modulator.channel_voice.desc=跟踪最后一个音符的MIDI通道

mix-modulator.mix.desc=A和B值之间的线性混合位置
mix-modulator.a.desc=混合信号A \n\n注意: 此值可以使用旋钮设置，自动或调制
mix-modulator.b.desc=混合信号B \n\n注意: 此值可以使用旋钮设置，自动或调制

note_counter.readout.title=调制值显示
note_counter.readout.desc=Shows the current output modulation as a fraction of current position over maximum value. When current position shows as '–', the next step will be '0'. \n\nSome example values: \n• '1/4' represents an output of 25% \n• '4/6' shows an output of 66.67% \n• '0/[anything]' is an output of 0%
note_counter.increment.desc=Amount that each new note adds to (or subtracts from) the current count \n\nSome example values for Increment & Steps: \n• '+1' & '4': 0, 1, 2, 3, 0… \n• '-1' & '3': 0, 2, 1, 0, 2… \n• '+2' & '5': 0, 2, 4, 1, 3, 0…
note_counter.steps.desc=Total number of steps \n\nNote: The actual range will go from zero to one less than range. So a Step Count setting of '10' would count from 0 (zero) to 9.
note_counter.reset.desc=单击时，在收到下一个音符时，其值为零。 在下一步的读数中还显示 '–' ，表示下一个为零。
note_counter.scaling_mode.desc=调制输出如何缩放:

note_sidechain.interface.title=信封接口
note_sidechain.interface.desc=交互式可视化，带有标记的断点，适用于各个段时间/级别

parseq-8.enable.desc=启用此步骤，其中包含其自己独特的调制器路由
parseq-8.hold.desc=延音上一步的调制(只要在此步骤中未调制相同的目标)
parseq-8.step.desc=双极值滑块，在此步骤上为所有路由设置相对调制量
parseq-8.modulator.title=调制器输出
parseq-8.modulator.desc=只要达到此步骤即可无线控制参数
parseq-8.mini_display.title=迷你显示器
parseq-8.mini_display.desc=显示所有八个步骤，其中一个LED(黄色)指示当前步骤，一个小圆圈(蓝色)用于分配调制器路由。显示所有八个步骤，其中一个LED（黄色）指示当前步骤，一个小圆圈（蓝色）用于分配调制器路由。 当前禁用任何步骤变暗。

pitch-12.mini.title=迷你可视化[LEDs]
pitch-12.mini.desc=一组指标，显示当前正在使用的音高等级
pitch-12.B.title=B 音符
pitch-12.B.desc=任何 B 的调制器源和指示器
pitch-12.Bb.title=A♯ / B♭ 音符
pitch-12.Bb.desc=任何A♯ / B♭ 的调制器源和指示器
pitch-12.A.title=A 音符
pitch-12.A.desc=任何 A 的调制器源和指示器
pitch-12.Ab.title=G♯ / A♭ 音符
pitch-12.Ab.desc=任何 G♯ / A♭ 的调制器源和指示器
pitch-12.G.title=G 音符
pitch-12.G.desc=任何 G 的调制器源和指示器
pitch-12.Gb.title=F♯ / G♭ 音符
pitch-12.Gb.desc=任何 F♯ / G♭ 的调制器源和指示器
pitch-12.F.title=F 音符
pitch-12.F.desc=任何 F 的调制器源和指示器
pitch-12.E.title=E 音符
pitch-12.E.desc=任何 E 的调制器源和指示器
pitch-12.Eb.title=D♯ / E♭ 音符
pitch-12.Eb.desc=任何 D♯ / E♭ 的调制器源和指示器
pitch-12.D.title=D 音符
pitch-12.D.desc=任何 D 的调制器源和指示器
pitch-12.Db.title=C♯ / D♭ 音符
pitch-12.Db.desc=任何 C♯ / D♭ 的调制器源和指示器
pitch-12.C.title=C 音符
pitch-12.C.desc=任何 C 的调制器源和指示器
pitch-12.lag.desc=所有调制器信号的过渡时间(上升和下降)
pitch-12.amount.desc=所有12个调制器的缩放输出电平

polynom.display.title=传输功能显示
polynom.display.desc=以橙色显示传递功能，当前输出值为沿曲线移动的白点
polynom.x0.desc=多项式方程的零度，它控制传递功能的垂直偏移
polynom.x1.desc=多项式方程的一阶，它控制传递功能的斜率或斜率
polynom.x2.desc=Degree two of the polynomial equation, which apply a curve equally (to positive and negative values) within the transfer function
polynom.x3.desc=Degree three of the polynomial equation, which apply a curve oppositely (inverted on positive and negative values) within the transfer function

quantize-modulator.display.title=信号显示
quantize-modulator.display.desc=以黄色显示最终的调制器信号
quantize-modulator.resolution.desc=降低分辨率的数量，其中'100.00'与原始信号的精度相同
quantize-modulator.mode.desc=量化电平的分布:

random-modulator.display.title=输出显示
random-modulator.display.desc=显示当前值
random-modulator.smoothing.desc=应用的内插量
random-modulator.feedback.desc=Correlation of successive output values, where positive settings trend toward small changes over time (à la Brownian motion) and negative settings can lead to repeating patterns

sample_and_hold-modulator.display.title=信号显示
sample_and_hold-modulator.display.desc=以橙色显示最终的调制器信号
sample_and_hold-modulator.smooth.desc=连续样本之间的滞后量
sample_and_hold-modulator.mode.desc=时钟重启时:

select-4.select.desc=淡入或淡出每个调制器输出的值，或将它们全部增加为完整值(启用填充模式时) \n\n注意: 此值可以使用滑块设置，自动或调制
select-4.fill.desc=保持所有调制器源的最大输出
select-4.s1.title=S1调制器输出
select-4.s1.desc=有关参数的无线控制，本源达到最大值时Select是'100 %' (并保持有当启用填充模式)
select-4.s2.title=S2调制器输出
select-4.s2.desc=有关参数的无线控制，本源达到最大值时Select是'200 %' (并保持有当启用填充模式)
select-4.s3.title=S3调制器输出
select-4.s3.desc=有关参数的无线控制，本源达到最大值时Select是'300 %' (并保持有当启用填充模式)
select-4.s4.title=S4调制器输出
select-4.s4.desc=有关参数的无线控制，本源达到最大值时Select是'400 %'

steps-modulator.steps.desc=步数
steps-modulator.reverse.desc=使音序器向后移动。 单击时，反转方向。 \n\n注意: “后退”和“前进”按钮都使用相同的参数。
steps-modulator.ping-pong.desc=使定序器到相反方向达到结束时
steps-modulator.forward.desc=禁用时，使音序器向前移动。 单击时，反转方向。 \n\n注意: “后退”和“前进”按钮都使用相同的参数。
steps-modulator.looping.desc=使定序器在到达终点时循环播放
steps-modulator.clear.desc=单击时，将所有步骤重置为 '0' (零)
steps-modulator.randomize.desc=单击时，将整个步骤阵列随机化
steps-modulator.mode.desc=步骤前进/运行行为:
steps-modulator.phase.desc=序列内的相移(或查找位置)
steps-modulator.smoothing.desc=连续步骤之间的内插量
steps-modulator.amp.desc=缩放调制器的幅度输出
steps-modulator.display.title=步进音序器界面
steps-modulator.display.desc=One bipolar value slider for each step. Click and drag up and down to adjust one slider. Dragging from left to right (and vice versa) will paint. Highlighted steps show where the current playheads are. \n\nRight-clicking on the interface provides a context menu with additional options to Copy, Paste, Generate (create) & Transform (manipulate) the current steps.
steps-modulator.mini_display

vector-4.top_left.title=↖ Top Left Modulator Out
vector-4.top_left.desc=对于参数的无线控制，请使用左上角的接近度
vector-4.top_right.title=↗ Top Right Modulator Out
vector-4.top_right.desc=对于无线控制参数，请使用右上角的接近度
vector-4.bottom_left.title=↙ Bottom Left Modulator Out
vector-4.bottom_left.desc=对于参数的无线控制，请使用左下角的接近度
vector-4.bottom_right.title=↘ Bottom Right Modulator Out
vector-4.bottom_right.desc=对于无线控制参数，请使用右下角的接近度

vector-8.left_center.title=↖ Top Center Modulator Out
vector-8.left_center.desc=对于参数的无线控制，请使用靠近左中心边缘的距离
vector-8.top_center.title=↗ Top Center Modulator Out
vector-8.top_center.desc=对于参数的无线控制，请使用与顶部中心边缘的紧密度
vector-8.right_center.title=↙ Bottom Center Modulator Out
vector-8.right_center.desc=对于无线控制参数，请使用靠近右中心边缘的距离
vector-8.bottom_center.title=↘ Bottom Center Modulator Out
vector-8.bottom_center.desc=对于参数的无线控制，请使用与底部中心边缘的接近度

voice_stack.stack_modulator.title=语音堆栈调制器输出
voice_stack.stack_modulator.desc=对于参数的无线控制，请基于当前模式为堆栈中的每个语音使用值
voice_stack.mode.desc=每个声音是如何计算:
voice_stack.voice_modulators.title=单个语音调制器输出
voice_stack.voice_modulators.desc=对于参数的无线控制，为任何参数设置单独的调制量(仅在堆栈中的此语音编号上)
voice_stack.calculations.title=语音计算[显示]
voice_stack.calculations.desc=每个语音的调制值(相对于映射到每个参数的数量)
voice_stack.slider.desc=为此语音设置的相对级别(也可以通过调制器控制)
voice_stack.disabled.title=注意: 必须启用语音堆叠
voice_stack.disabled.desc=This modulator work via Bitwig's voice stacking mechanism, which is available on instruments. To use this modulator, it must be placed on an instrument which has voice stacking enabled (from the instrument's Inspector Panel).

xy-modulator.display.title=迷你控制板
xy-modulator.display.desc另一个可单击的界面(黄色球)可一起控制 XY 对
xy-modulator.pad.title=XY 控制板
xy-modulator.pad.desc=一键或触摸即可移动XY对（黄色球）
xy-modulator.x_out.title=X 调制器输出
xy-modulator.x_out.desc=通过X位置无线控制参数
xy-modulator.y_out.title=Y 调制器输出
xy-modulator.y_out.desc=通过Y位置无线控制参数
